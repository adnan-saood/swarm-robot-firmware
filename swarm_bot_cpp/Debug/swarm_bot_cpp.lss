
swarm_bot_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  00002266  000022fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002266  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000090  00800142  00800142  0000233c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000233c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002398  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  000023d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002596  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000154d  00000000  00000000  00004c06  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000041b7  00000000  00000000  00006153  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000894  00000000  00000000  0000a30c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001117e  00000000  00000000  0000aba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016d5  00000000  00000000  0001bd1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0001d3f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000053f4  00000000  00000000  0001d5cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 c2 03 	jmp	0x784	; 0x784 <__vector_1>
       8:	0c 94 86 04 	jmp	0x90c	; 0x90c <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 92 06 	jmp	0xd24	; 0xd24 <__vector_7>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 88 06 	jmp	0xd10	; 0xd10 <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__vector_13>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 4e 07 	jmp	0xe9c	; 0xe9c <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e6 e6       	ldi	r30, 0x66	; 102
     17e:	f2 e2       	ldi	r31, 0x22	; 34
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 34       	cpi	r26, 0x42	; 66
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a2 e4       	ldi	r26, 0x42	; 66
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a2 3d       	cpi	r26, 0xD2	; 210
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 b1 08 	call	0x1162	; 0x1162 <main>
     1a0:	0c 94 31 11 	jmp	0x2262	; 0x2262 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <pid_Init>:
 *  \param d_factor  Derivate term.
 *  \param pid  Struct with PID status.
 */
void pid_Init(float p_factor, float i_factor, float d_factor, struct PID_DATA *pid)
// Set up PID controller parameters
{
     1a8:	8f 92       	push	r8
     1aa:	9f 92       	push	r9
     1ac:	af 92       	push	r10
     1ae:	bf 92       	push	r11
     1b0:	cf 92       	push	r12
     1b2:	df 92       	push	r13
     1b4:	ef 92       	push	r14
     1b6:	ff 92       	push	r15
     1b8:	0f 93       	push	r16
     1ba:	1f 93       	push	r17
     1bc:	cf 93       	push	r28
     1be:	df 93       	push	r29
     1c0:	49 01       	movw	r8, r18
     1c2:	5a 01       	movw	r10, r20
     1c4:	e6 01       	movw	r28, r12
  // Start values for PID controller
  pid->sumError = 0;
     1c6:	1c 82       	std	Y+4, r1	; 0x04
     1c8:	1d 82       	std	Y+5, r1	; 0x05
     1ca:	1e 82       	std	Y+6, r1	; 0x06
     1cc:	1f 82       	std	Y+7, r1	; 0x07
  pid->lastProcessValue = 0;
     1ce:	18 82       	st	Y, r1
     1d0:	19 82       	std	Y+1, r1	; 0x01
     1d2:	1a 82       	std	Y+2, r1	; 0x02
     1d4:	1b 82       	std	Y+3, r1	; 0x03
  // Tuning constants for PID loop
  pid->P_Factor = p_factor;
     1d6:	68 87       	std	Y+8, r22	; 0x08
     1d8:	79 87       	std	Y+9, r23	; 0x09
     1da:	8a 87       	std	Y+10, r24	; 0x0a
     1dc:	9b 87       	std	Y+11, r25	; 0x0b
  pid->I_Factor = i_factor;
     1de:	2c 87       	std	Y+12, r18	; 0x0c
     1e0:	3d 87       	std	Y+13, r19	; 0x0d
     1e2:	4e 87       	std	Y+14, r20	; 0x0e
     1e4:	5f 87       	std	Y+15, r21	; 0x0f
  pid->D_Factor = d_factor;
     1e6:	e8 8a       	std	Y+16, r14	; 0x10
     1e8:	f9 8a       	std	Y+17, r15	; 0x11
     1ea:	0a 8b       	std	Y+18, r16	; 0x12
     1ec:	1b 8b       	std	Y+19, r17	; 0x13
  // Limits to avoid overflow
  pid->maxError = MAX_INT / (pid->P_Factor + 1);
     1ee:	20 e0       	ldi	r18, 0x00	; 0
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e8       	ldi	r20, 0x80	; 128
     1f4:	5f e3       	ldi	r21, 0x3F	; 63
     1f6:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__addsf3>
     1fa:	9b 01       	movw	r18, r22
     1fc:	ac 01       	movw	r20, r24
     1fe:	60 e0       	ldi	r22, 0x00	; 0
     200:	7e ef       	ldi	r23, 0xFE	; 254
     202:	8f ef       	ldi	r24, 0xFF	; 255
     204:	96 e4       	ldi	r25, 0x46	; 70
     206:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__divsf3>
     20a:	6c 8b       	std	Y+20, r22	; 0x14
     20c:	7d 8b       	std	Y+21, r23	; 0x15
     20e:	8e 8b       	std	Y+22, r24	; 0x16
     210:	9f 8b       	std	Y+23, r25	; 0x17
  pid->maxSumError = MAX_I_TERM / (pid->I_Factor + 1);
     212:	20 e0       	ldi	r18, 0x00	; 0
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	40 e8       	ldi	r20, 0x80	; 128
     218:	5f e3       	ldi	r21, 0x3F	; 63
     21a:	c5 01       	movw	r24, r10
     21c:	b4 01       	movw	r22, r8
     21e:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__addsf3>
     222:	9b 01       	movw	r18, r22
     224:	ac 01       	movw	r20, r24
     226:	60 e0       	ldi	r22, 0x00	; 0
     228:	70 e0       	ldi	r23, 0x00	; 0
     22a:	88 ec       	ldi	r24, 0xC8	; 200
     22c:	92 e4       	ldi	r25, 0x42	; 66
     22e:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__divsf3>
     232:	68 8f       	std	Y+24, r22	; 0x18
     234:	79 8f       	std	Y+25, r23	; 0x19
     236:	8a 8f       	std	Y+26, r24	; 0x1a
     238:	9b 8f       	std	Y+27, r25	; 0x1b
}
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	1f 91       	pop	r17
     240:	0f 91       	pop	r16
     242:	ff 90       	pop	r15
     244:	ef 90       	pop	r14
     246:	df 90       	pop	r13
     248:	cf 90       	pop	r12
     24a:	bf 90       	pop	r11
     24c:	af 90       	pop	r10
     24e:	9f 90       	pop	r9
     250:	8f 90       	pop	r8
     252:	08 95       	ret

00000254 <pid_Controller>:
 *  \param setPoint  Desired value.
 *  \param processValue  Measured value.
 *  \param pid_st  PID status struct.
 */
float pid_Controller(float setPoint, float processValue, struct PID_DATA *pid_st)
{
     254:	4f 92       	push	r4
     256:	5f 92       	push	r5
     258:	6f 92       	push	r6
     25a:	7f 92       	push	r7
     25c:	8f 92       	push	r8
     25e:	9f 92       	push	r9
     260:	af 92       	push	r10
     262:	bf 92       	push	r11
     264:	cf 92       	push	r12
     266:	df 92       	push	r13
     268:	ef 92       	push	r14
     26a:	ff 92       	push	r15
     26c:	0f 93       	push	r16
     26e:	1f 93       	push	r17
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	00 d0       	rcall	.+0      	; 0x276 <pid_Controller+0x22>
     276:	00 d0       	rcall	.+0      	; 0x278 <pid_Controller+0x24>
     278:	00 d0       	rcall	.+0      	; 0x27a <pid_Controller+0x26>
     27a:	cd b7       	in	r28, 0x3d	; 61
     27c:	de b7       	in	r29, 0x3e	; 62
     27e:	49 01       	movw	r8, r18
     280:	5a 01       	movw	r10, r20
     282:	1e 83       	std	Y+6, r17	; 0x06
     284:	0d 83       	std	Y+5, r16	; 0x05
  float error, p_term, d_term;
  float i_term, ret, temp;

  error = setPoint - processValue;
     286:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__subsf3>
     28a:	6b 01       	movw	r12, r22
     28c:	7c 01       	movw	r14, r24

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
     28e:	d8 01       	movw	r26, r16
     290:	54 96       	adiw	r26, 0x14	; 20
     292:	4d 90       	ld	r4, X+
     294:	5d 90       	ld	r5, X+
     296:	6d 90       	ld	r6, X+
     298:	7c 90       	ld	r7, X
     29a:	57 97       	sbiw	r26, 0x17	; 23
     29c:	a3 01       	movw	r20, r6
     29e:	92 01       	movw	r18, r4
     2a0:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__gesf2>
     2a4:	18 16       	cp	r1, r24
     2a6:	bc f0       	brlt	.+46     	; 0x2d6 <pid_Controller+0x82>
    p_term = MAX_INT;
  }
  else if (error < -pid_st->maxError){
     2a8:	a3 01       	movw	r20, r6
     2aa:	92 01       	movw	r18, r4
     2ac:	50 58       	subi	r21, 0x80	; 128
     2ae:	c7 01       	movw	r24, r14
     2b0:	b6 01       	movw	r22, r12
     2b2:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__cmpsf2>
     2b6:	88 23       	and	r24, r24
     2b8:	bc f0       	brlt	.+46     	; 0x2e8 <pid_Controller+0x94>
    p_term = -MAX_INT;
  }
  else{
    p_term = pid_st->P_Factor * error;
     2ba:	f8 01       	movw	r30, r16
     2bc:	20 85       	ldd	r18, Z+8	; 0x08
     2be:	31 85       	ldd	r19, Z+9	; 0x09
     2c0:	42 85       	ldd	r20, Z+10	; 0x0a
     2c2:	53 85       	ldd	r21, Z+11	; 0x0b
     2c4:	c7 01       	movw	r24, r14
     2c6:	b6 01       	movw	r22, r12
     2c8:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__mulsf3>
     2cc:	69 83       	std	Y+1, r22	; 0x01
     2ce:	7a 83       	std	Y+2, r23	; 0x02
     2d0:	8b 83       	std	Y+3, r24	; 0x03
     2d2:	9c 83       	std	Y+4, r25	; 0x04
     2d4:	11 c0       	rjmp	.+34     	; 0x2f8 <pid_Controller+0xa4>

  error = setPoint - processValue;

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
    p_term = MAX_INT;
     2d6:	80 e0       	ldi	r24, 0x00	; 0
     2d8:	9e ef       	ldi	r25, 0xFE	; 254
     2da:	af ef       	ldi	r26, 0xFF	; 255
     2dc:	b6 e4       	ldi	r27, 0x46	; 70
     2de:	89 83       	std	Y+1, r24	; 0x01
     2e0:	9a 83       	std	Y+2, r25	; 0x02
     2e2:	ab 83       	std	Y+3, r26	; 0x03
     2e4:	bc 83       	std	Y+4, r27	; 0x04
     2e6:	08 c0       	rjmp	.+16     	; 0x2f8 <pid_Controller+0xa4>
  }
  else if (error < -pid_st->maxError){
    p_term = -MAX_INT;
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	9e ef       	ldi	r25, 0xFE	; 254
     2ec:	af ef       	ldi	r26, 0xFF	; 255
     2ee:	b6 ec       	ldi	r27, 0xC6	; 198
     2f0:	89 83       	std	Y+1, r24	; 0x01
     2f2:	9a 83       	std	Y+2, r25	; 0x02
     2f4:	ab 83       	std	Y+3, r26	; 0x03
     2f6:	bc 83       	std	Y+4, r27	; 0x04
  else{
    p_term = pid_st->P_Factor * error;
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
     2f8:	ad 81       	ldd	r26, Y+5	; 0x05
     2fa:	be 81       	ldd	r27, Y+6	; 0x06
     2fc:	14 96       	adiw	r26, 0x04	; 4
     2fe:	2d 91       	ld	r18, X+
     300:	3d 91       	ld	r19, X+
     302:	4d 91       	ld	r20, X+
     304:	5c 91       	ld	r21, X
     306:	17 97       	sbiw	r26, 0x07	; 7
     308:	c7 01       	movw	r24, r14
     30a:	b6 01       	movw	r22, r12
     30c:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__addsf3>
     310:	2b 01       	movw	r4, r22
     312:	3c 01       	movw	r6, r24
  if(temp > pid_st->maxSumError){
     314:	ed 81       	ldd	r30, Y+5	; 0x05
     316:	fe 81       	ldd	r31, Y+6	; 0x06
     318:	c0 8c       	ldd	r12, Z+24	; 0x18
     31a:	d1 8c       	ldd	r13, Z+25	; 0x19
     31c:	e2 8c       	ldd	r14, Z+26	; 0x1a
     31e:	f3 8c       	ldd	r15, Z+27	; 0x1b
     320:	a7 01       	movw	r20, r14
     322:	96 01       	movw	r18, r12
     324:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__gesf2>
     328:	18 16       	cp	r1, r24
     32a:	8c f4       	brge	.+34     	; 0x34e <pid_Controller+0xfa>
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
     32c:	ad 81       	ldd	r26, Y+5	; 0x05
     32e:	be 81       	ldd	r27, Y+6	; 0x06
     330:	14 96       	adiw	r26, 0x04	; 4
     332:	cd 92       	st	X+, r12
     334:	dd 92       	st	X+, r13
     336:	ed 92       	st	X+, r14
     338:	fc 92       	st	X, r15
     33a:	17 97       	sbiw	r26, 0x07	; 7
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
     33c:	0f 2e       	mov	r0, r31
     33e:	c1 2c       	mov	r12, r1
     340:	d1 2c       	mov	r13, r1
     342:	f8 ec       	ldi	r31, 0xC8	; 200
     344:	ef 2e       	mov	r14, r31
     346:	f2 e4       	ldi	r31, 0x42	; 66
     348:	ff 2e       	mov	r15, r31
     34a:	f0 2d       	mov	r31, r0
     34c:	2f c0       	rjmp	.+94     	; 0x3ac <pid_Controller+0x158>
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
     34e:	f7 fa       	bst	r15, 7
     350:	f0 94       	com	r15
     352:	f7 f8       	bld	r15, 7
     354:	f0 94       	com	r15
     356:	a7 01       	movw	r20, r14
     358:	96 01       	movw	r18, r12
     35a:	c3 01       	movw	r24, r6
     35c:	b2 01       	movw	r22, r4
     35e:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__cmpsf2>
     362:	88 23       	and	r24, r24
     364:	7c f4       	brge	.+30     	; 0x384 <pid_Controller+0x130>
    i_term = -MAX_I_TERM;
    pid_st->sumError = -pid_st->maxSumError;
     366:	ed 81       	ldd	r30, Y+5	; 0x05
     368:	fe 81       	ldd	r31, Y+6	; 0x06
     36a:	c4 82       	std	Z+4, r12	; 0x04
     36c:	d5 82       	std	Z+5, r13	; 0x05
     36e:	e6 82       	std	Z+6, r14	; 0x06
     370:	f7 82       	std	Z+7, r15	; 0x07
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
    i_term = -MAX_I_TERM;
     372:	0f 2e       	mov	r0, r31
     374:	c1 2c       	mov	r12, r1
     376:	d1 2c       	mov	r13, r1
     378:	f8 ec       	ldi	r31, 0xC8	; 200
     37a:	ef 2e       	mov	r14, r31
     37c:	f2 ec       	ldi	r31, 0xC2	; 194
     37e:	ff 2e       	mov	r15, r31
     380:	f0 2d       	mov	r31, r0
     382:	14 c0       	rjmp	.+40     	; 0x3ac <pid_Controller+0x158>
    pid_st->sumError = -pid_st->maxSumError;
  }
  else{
    pid_st->sumError = temp;
     384:	ad 81       	ldd	r26, Y+5	; 0x05
     386:	be 81       	ldd	r27, Y+6	; 0x06
     388:	14 96       	adiw	r26, 0x04	; 4
     38a:	4d 92       	st	X+, r4
     38c:	5d 92       	st	X+, r5
     38e:	6d 92       	st	X+, r6
     390:	7c 92       	st	X, r7
     392:	17 97       	sbiw	r26, 0x07	; 7
    i_term = pid_st->I_Factor * pid_st->sumError;
     394:	1c 96       	adiw	r26, 0x0c	; 12
     396:	2d 91       	ld	r18, X+
     398:	3d 91       	ld	r19, X+
     39a:	4d 91       	ld	r20, X+
     39c:	5c 91       	ld	r21, X
     39e:	1f 97       	sbiw	r26, 0x0f	; 15
     3a0:	c3 01       	movw	r24, r6
     3a2:	b2 01       	movw	r22, r4
     3a4:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__mulsf3>
     3a8:	6b 01       	movw	r12, r22
     3aa:	7c 01       	movw	r14, r24
  }

  // Calculate Dterm
  d_term = pid_st->D_Factor * (pid_st->lastProcessValue - processValue);
     3ac:	a5 01       	movw	r20, r10
     3ae:	94 01       	movw	r18, r8
     3b0:	ed 81       	ldd	r30, Y+5	; 0x05
     3b2:	fe 81       	ldd	r31, Y+6	; 0x06
     3b4:	60 81       	ld	r22, Z
     3b6:	71 81       	ldd	r23, Z+1	; 0x01
     3b8:	82 81       	ldd	r24, Z+2	; 0x02
     3ba:	93 81       	ldd	r25, Z+3	; 0x03
     3bc:	0e 94 fe 08 	call	0x11fc	; 0x11fc <__subsf3>
     3c0:	ad 81       	ldd	r26, Y+5	; 0x05
     3c2:	be 81       	ldd	r27, Y+6	; 0x06
     3c4:	50 96       	adiw	r26, 0x10	; 16
     3c6:	2d 91       	ld	r18, X+
     3c8:	3d 91       	ld	r19, X+
     3ca:	4d 91       	ld	r20, X+
     3cc:	5c 91       	ld	r21, X
     3ce:	53 97       	sbiw	r26, 0x13	; 19
     3d0:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__mulsf3>
     3d4:	2b 01       	movw	r4, r22
     3d6:	3c 01       	movw	r6, r24

  pid_st->lastProcessValue = processValue;
     3d8:	ed 81       	ldd	r30, Y+5	; 0x05
     3da:	fe 81       	ldd	r31, Y+6	; 0x06
     3dc:	80 82       	st	Z, r8
     3de:	91 82       	std	Z+1, r9	; 0x01
     3e0:	a2 82       	std	Z+2, r10	; 0x02
     3e2:	b3 82       	std	Z+3, r11	; 0x03

  ret = (p_term + i_term + d_term) / SCALING_FACTOR;
     3e4:	a7 01       	movw	r20, r14
     3e6:	96 01       	movw	r18, r12
     3e8:	69 81       	ldd	r22, Y+1	; 0x01
     3ea:	7a 81       	ldd	r23, Y+2	; 0x02
     3ec:	8b 81       	ldd	r24, Y+3	; 0x03
     3ee:	9c 81       	ldd	r25, Y+4	; 0x04
     3f0:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__addsf3>
     3f4:	a3 01       	movw	r20, r6
     3f6:	92 01       	movw	r18, r4
     3f8:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__addsf3>
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	40 e0       	ldi	r20, 0x00	; 0
     402:	5c e3       	ldi	r21, 0x3C	; 60
     404:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__mulsf3>
     408:	6b 01       	movw	r12, r22
     40a:	7c 01       	movw	r14, r24
  if(ret > MAX_INT){
     40c:	20 e0       	ldi	r18, 0x00	; 0
     40e:	3e ef       	ldi	r19, 0xFE	; 254
     410:	4f ef       	ldi	r20, 0xFF	; 255
     412:	56 e4       	ldi	r21, 0x46	; 70
     414:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__gesf2>
     418:	18 16       	cp	r1, r24
     41a:	a4 f0       	brlt	.+40     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
    ret = MAX_INT;
  }
  else if(ret < -MAX_INT){
     41c:	20 e0       	ldi	r18, 0x00	; 0
     41e:	3e ef       	ldi	r19, 0xFE	; 254
     420:	4f ef       	ldi	r20, 0xFF	; 255
     422:	56 ec       	ldi	r21, 0xC6	; 198
     424:	c7 01       	movw	r24, r14
     426:	b6 01       	movw	r22, r12
     428:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__cmpsf2>
     42c:	88 23       	and	r24, r24
     42e:	9c f4       	brge	.+38     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
    ret = -MAX_INT;
     430:	0f 2e       	mov	r0, r31
     432:	c1 2c       	mov	r12, r1
     434:	fe ef       	ldi	r31, 0xFE	; 254
     436:	df 2e       	mov	r13, r31
     438:	ee 24       	eor	r14, r14
     43a:	ea 94       	dec	r14
     43c:	f6 ec       	ldi	r31, 0xC6	; 198
     43e:	ff 2e       	mov	r15, r31
     440:	f0 2d       	mov	r31, r0
     442:	09 c0       	rjmp	.+18     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>

  pid_st->lastProcessValue = processValue;

  ret = (p_term + i_term + d_term) / SCALING_FACTOR;
  if(ret > MAX_INT){
    ret = MAX_INT;
     444:	0f 2e       	mov	r0, r31
     446:	c1 2c       	mov	r12, r1
     448:	fe ef       	ldi	r31, 0xFE	; 254
     44a:	df 2e       	mov	r13, r31
     44c:	ee 24       	eor	r14, r14
     44e:	ea 94       	dec	r14
     450:	f6 e4       	ldi	r31, 0x46	; 70
     452:	ff 2e       	mov	r15, r31
     454:	f0 2d       	mov	r31, r0
  else if(ret < -MAX_INT){
    ret = -MAX_INT;
  }

  return (ret);
}
     456:	c7 01       	movw	r24, r14
     458:	b6 01       	movw	r22, r12
     45a:	26 96       	adiw	r28, 0x06	; 6
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	de bf       	out	0x3e, r29	; 62
     462:	0f be       	out	0x3f, r0	; 63
     464:	cd bf       	out	0x3d, r28	; 61
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	0f 91       	pop	r16
     46e:	ff 90       	pop	r15
     470:	ef 90       	pop	r14
     472:	df 90       	pop	r13
     474:	cf 90       	pop	r12
     476:	bf 90       	pop	r11
     478:	af 90       	pop	r10
     47a:	9f 90       	pop	r9
     47c:	8f 90       	pop	r8
     47e:	7f 90       	pop	r7
     480:	6f 90       	pop	r6
     482:	5f 90       	pop	r5
     484:	4f 90       	pop	r4
     486:	08 95       	ret

00000488 <_adc_init>:
#include <__adc__.h>

void _adc_init(void)
{
	ADMUX = (1 << REFS0); // AVCC
     488:	ec e7       	ldi	r30, 0x7C	; 124
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	80 e4       	ldi	r24, 0x40	; 64
     48e:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) | (1 << REFS1); //1v1
	
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN); // Turn ADC On sample: 16M/128 = 125KHz
     490:	aa e7       	ldi	r26, 0x7A	; 122
     492:	b0 e0       	ldi	r27, 0x00	; 0
     494:	8c 91       	ld	r24, X
     496:	87 68       	ori	r24, 0x87	; 135
     498:	8c 93       	st	X, r24
	ADMUX |= (0 << ADLAR);
     49a:	80 81       	ld	r24, Z
     49c:	80 83       	st	Z, r24
     49e:	08 95       	ret

000004a0 <_adc_read>:
	//ADMUX |= (1 << ADLAR); 8 bit
}

int _adc_read(uint8_t channel)
{
	ADMUX |= channel & 0x0f;
     4a0:	ec e7       	ldi	r30, 0x7C	; 124
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	90 81       	ld	r25, Z
     4a6:	8f 70       	andi	r24, 0x0F	; 15
     4a8:	98 2b       	or	r25, r24
     4aa:	90 83       	st	Z, r25
	ADCSRA |= (1 << ADSC);
     4ac:	ea e7       	ldi	r30, 0x7A	; 122
     4ae:	f0 e0       	ldi	r31, 0x00	; 0
     4b0:	80 81       	ld	r24, Z
     4b2:	80 64       	ori	r24, 0x40	; 64
     4b4:	80 83       	st	Z, r24
	while(ADCSRA & (1 << ADSC));
     4b6:	80 81       	ld	r24, Z
     4b8:	86 fd       	sbrc	r24, 6
     4ba:	fd cf       	rjmp	.-6      	; 0x4b6 <_adc_read+0x16>
	return ADCW;
     4bc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     4c0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     4c4:	08 95       	ret

000004c6 <_set_ref>:
	return 0;
}

void _command(uint8_t motor, int16_t inputValue)
{
	_set_speed(motor,inputValue);
     4c6:	81 30       	cpi	r24, 0x01	; 1
     4c8:	49 f4       	brne	.+18     	; 0x4dc <_set_ref+0x16>
     4ca:	40 93 46 01 	sts	0x0146, r20	; 0x800146 <_dc_ref_A>
     4ce:	50 93 47 01 	sts	0x0147, r21	; 0x800147 <_dc_ref_A+0x1>
     4d2:	60 93 48 01 	sts	0x0148, r22	; 0x800148 <_dc_ref_A+0x2>
     4d6:	70 93 49 01 	sts	0x0149, r23	; 0x800149 <_dc_ref_A+0x3>
     4da:	08 95       	ret
     4dc:	82 30       	cpi	r24, 0x02	; 2
     4de:	41 f4       	brne	.+16     	; 0x4f0 <_set_ref+0x2a>
     4e0:	40 93 42 01 	sts	0x0142, r20	; 0x800142 <__data_end>
     4e4:	50 93 43 01 	sts	0x0143, r21	; 0x800143 <__data_end+0x1>
     4e8:	60 93 44 01 	sts	0x0144, r22	; 0x800144 <__data_end+0x2>
     4ec:	70 93 45 01 	sts	0x0145, r23	; 0x800145 <__data_end+0x3>
     4f0:	08 95       	ret

000004f2 <_ref>:
     4f2:	81 30       	cpi	r24, 0x01	; 1
     4f4:	49 f4       	brne	.+18     	; 0x508 <_ref+0x16>
     4f6:	60 91 46 01 	lds	r22, 0x0146	; 0x800146 <_dc_ref_A>
     4fa:	70 91 47 01 	lds	r23, 0x0147	; 0x800147 <_dc_ref_A+0x1>
     4fe:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <_dc_ref_A+0x2>
     502:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <_dc_ref_A+0x3>
     506:	08 95       	ret
     508:	82 30       	cpi	r24, 0x02	; 2
     50a:	49 f4       	brne	.+18     	; 0x51e <_ref+0x2c>
     50c:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <__data_end>
     510:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <__data_end+0x1>
     514:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end+0x2>
     518:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x3>
     51c:	08 95       	ret
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	cb 01       	movw	r24, r22
     524:	08 95       	ret

00000526 <_sens>:
     526:	81 30       	cpi	r24, 0x01	; 1
     528:	19 f4       	brne	.+6      	; 0x530 <_sens+0xa>
     52a:	0e 94 46 05 	call	0xa8c	; 0xa8c <_omega_from_encA>
     52e:	08 95       	ret
     530:	82 30       	cpi	r24, 0x02	; 2
     532:	19 f4       	brne	.+6      	; 0x53a <_sens+0x14>
     534:	0e 94 e7 05 	call	0xbce	; 0xbce <_omega_from_encB>
     538:	08 95       	ret
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	70 e0       	ldi	r23, 0x00	; 0
     53e:	80 e8       	ldi	r24, 0x80	; 128
     540:	9f eb       	ldi	r25, 0xBF	; 191
     542:	08 95       	ret

00000544 <_break_motor>:
     544:	81 30       	cpi	r24, 0x01	; 1
     546:	49 f4       	brne	.+18     	; 0x55a <_break_motor+0x16>
     548:	8f ef       	ldi	r24, 0xFF	; 255
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	0e 94 9c 06 	call	0xd38	; 0xd38 <_set_pwm_0A>
     550:	8f ef       	ldi	r24, 0xFF	; 255
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 b4 06 	call	0xd68	; 0xd68 <_set_pwm_1A>
     558:	08 95       	ret
     55a:	82 30       	cpi	r24, 0x02	; 2
     55c:	41 f4       	brne	.+16     	; 0x56e <_break_motor+0x2a>
     55e:	8f ef       	ldi	r24, 0xFF	; 255
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	0e 94 a8 06 	call	0xd50	; 0xd50 <_set_pwm_0B>
     566:	8f ef       	ldi	r24, 0xFF	; 255
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	0e 94 c3 06 	call	0xd86	; 0xd86 <_set_pwm_1B>
     56e:	08 95       	ret

00000570 <_set_speed>:
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	eb 01       	movw	r28, r22
     576:	20 97       	sbiw	r28, 0x00	; 0
     578:	19 f4       	brne	.+6      	; 0x580 <_set_speed+0x10>
     57a:	0e 94 a2 02 	call	0x544	; 0x544 <_break_motor>
     57e:	34 c0       	rjmp	.+104    	; 0x5e8 <_set_speed+0x78>
     580:	dd 23       	and	r29, r29
     582:	b4 f4       	brge	.+44     	; 0x5b0 <_set_speed+0x40>
     584:	81 30       	cpi	r24, 0x01	; 1
     586:	49 f4       	brne	.+18     	; 0x59a <_set_speed+0x2a>
     588:	8f ef       	ldi	r24, 0xFF	; 255
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	0e 94 9c 06 	call	0xd38	; 0xd38 <_set_pwm_0A>
     590:	8f ef       	ldi	r24, 0xFF	; 255
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	0e 94 b4 06 	call	0xd68	; 0xd68 <_set_pwm_1A>
     598:	27 c0       	rjmp	.+78     	; 0x5e8 <_set_speed+0x78>
     59a:	82 30       	cpi	r24, 0x02	; 2
     59c:	29 f5       	brne	.+74     	; 0x5e8 <_set_speed+0x78>
     59e:	8f ef       	ldi	r24, 0xFF	; 255
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	0e 94 a8 06 	call	0xd50	; 0xd50 <_set_pwm_0B>
     5a6:	8f ef       	ldi	r24, 0xFF	; 255
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 c3 06 	call	0xd86	; 0xd86 <_set_pwm_1B>
     5ae:	1c c0       	rjmp	.+56     	; 0x5e8 <_set_speed+0x78>
     5b0:	1c 16       	cp	r1, r28
     5b2:	1d 06       	cpc	r1, r29
     5b4:	cc f4       	brge	.+50     	; 0x5e8 <_set_speed+0x78>
     5b6:	81 30       	cpi	r24, 0x01	; 1
     5b8:	59 f4       	brne	.+22     	; 0x5d0 <_set_speed+0x60>
     5ba:	8f ef       	ldi	r24, 0xFF	; 255
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 9c 06 	call	0xd38	; 0xd38 <_set_pwm_0A>
     5c2:	8f ef       	ldi	r24, 0xFF	; 255
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	8c 1b       	sub	r24, r28
     5c8:	9d 0b       	sbc	r25, r29
     5ca:	0e 94 b4 06 	call	0xd68	; 0xd68 <_set_pwm_1A>
     5ce:	0c c0       	rjmp	.+24     	; 0x5e8 <_set_speed+0x78>
     5d0:	82 30       	cpi	r24, 0x02	; 2
     5d2:	51 f4       	brne	.+20     	; 0x5e8 <_set_speed+0x78>
     5d4:	8f ef       	ldi	r24, 0xFF	; 255
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	86 1b       	sub	r24, r22
     5da:	97 0b       	sbc	r25, r23
     5dc:	0e 94 a8 06 	call	0xd50	; 0xd50 <_set_pwm_0B>
     5e0:	8f ef       	ldi	r24, 0xFF	; 255
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	0e 94 c3 06 	call	0xd86	; 0xd86 <_set_pwm_1B>
     5e8:	ce 01       	movw	r24, r28
     5ea:	df 91       	pop	r29
     5ec:	cf 91       	pop	r28
     5ee:	08 95       	ret

000005f0 <_init_dc_control>:
		_set_pwm_1B(255);
	}
}

void _init_dc_control(void)
{
     5f0:	cf 92       	push	r12
     5f2:	df 92       	push	r13
     5f4:	ef 92       	push	r14
     5f6:	ff 92       	push	r15
     5f8:	0f 93       	push	r16
     5fa:	1f 93       	push	r17
	pid_Init(K_P * SCALING_FACTOR, K_I * SCALING_FACTOR , K_D * SCALING_FACTOR , &pidDataA);
     5fc:	0f 2e       	mov	r0, r31
     5fe:	f6 e6       	ldi	r31, 0x66	; 102
     600:	cf 2e       	mov	r12, r31
     602:	f1 e0       	ldi	r31, 0x01	; 1
     604:	df 2e       	mov	r13, r31
     606:	f0 2d       	mov	r31, r0
     608:	e1 2c       	mov	r14, r1
     60a:	f1 2c       	mov	r15, r1
     60c:	08 ec       	ldi	r16, 0xC8	; 200
     60e:	14 e4       	ldi	r17, 0x44	; 68
     610:	20 e0       	ldi	r18, 0x00	; 0
     612:	30 e0       	ldi	r19, 0x00	; 0
     614:	a9 01       	movw	r20, r18
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	70 e0       	ldi	r23, 0x00	; 0
     61a:	80 ea       	ldi	r24, 0xA0	; 160
     61c:	95 e4       	ldi	r25, 0x45	; 69
     61e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <pid_Init>
	pid_Init(K_P * SCALING_FACTOR, K_I * SCALING_FACTOR , K_D * SCALING_FACTOR , &pidDataB);
     622:	0f 2e       	mov	r0, r31
     624:	fa e4       	ldi	r31, 0x4A	; 74
     626:	cf 2e       	mov	r12, r31
     628:	f1 e0       	ldi	r31, 0x01	; 1
     62a:	df 2e       	mov	r13, r31
     62c:	f0 2d       	mov	r31, r0
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	a9 01       	movw	r20, r18
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	80 ea       	ldi	r24, 0xA0	; 160
     63a:	95 e4       	ldi	r25, 0x45	; 69
     63c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <pid_Init>
	
	sei();
     640:	78 94       	sei
}
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	ff 90       	pop	r15
     648:	ef 90       	pop	r14
     64a:	df 90       	pop	r13
     64c:	cf 90       	pop	r12
     64e:	08 95       	ret

00000650 <_update_controller>:

int16_t _update_controller(uint8_t motor)
{
     650:	7f 92       	push	r7
     652:	8f 92       	push	r8
     654:	9f 92       	push	r9
     656:	af 92       	push	r10
     658:	bf 92       	push	r11
     65a:	cf 92       	push	r12
     65c:	df 92       	push	r13
     65e:	ef 92       	push	r14
     660:	ff 92       	push	r15
     662:	0f 93       	push	r16
     664:	1f 93       	push	r17
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	c8 2f       	mov	r28, r24
	float ref, sen;
	float u;
	ref = _ref(motor);
     66c:	0e 94 79 02 	call	0x4f2	; 0x4f2 <_ref>
     670:	d6 2f       	mov	r29, r22
     672:	f7 2e       	mov	r15, r23
     674:	e8 2e       	mov	r14, r24
     676:	d9 2e       	mov	r13, r25
	sen =    _sens(motor); // major bug here
     678:	8c 2f       	mov	r24, r28
     67a:	0e 94 93 02 	call	0x526	; 0x526 <_sens>
     67e:	c6 2e       	mov	r12, r22
     680:	b7 2e       	mov	r11, r23
     682:	a8 2e       	mov	r10, r24
     684:	99 2e       	mov	r9, r25
	if(motor == MA)
     686:	c1 30       	cpi	r28, 0x01	; 1
     688:	91 f4       	brne	.+36     	; 0x6ae <_update_controller+0x5e>
	{
		u = pid_Controller(ref,sen, &pidDataA);
     68a:	06 e6       	ldi	r16, 0x66	; 102
     68c:	11 e0       	ldi	r17, 0x01	; 1
     68e:	76 2f       	mov	r23, r22
     690:	27 2f       	mov	r18, r23
     692:	3b 2d       	mov	r19, r11
     694:	4a 2d       	mov	r20, r10
     696:	59 2d       	mov	r21, r9
     698:	6d 2f       	mov	r22, r29
     69a:	7f 2d       	mov	r23, r15
     69c:	8e 2d       	mov	r24, r14
     69e:	9d 2d       	mov	r25, r13
     6a0:	0e 94 2a 01 	call	0x254	; 0x254 <pid_Controller>
     6a4:	16 2f       	mov	r17, r22
     6a6:	07 2f       	mov	r16, r23
     6a8:	88 2e       	mov	r8, r24
     6aa:	79 2e       	mov	r7, r25
     6ac:	13 c0       	rjmp	.+38     	; 0x6d4 <_update_controller+0x84>
	}
	else if(motor == MB)
     6ae:	c2 30       	cpi	r28, 0x02	; 2
     6b0:	89 f4       	brne	.+34     	; 0x6d4 <_update_controller+0x84>
	{
		u = pid_Controller(ref,sen, &pidDataB);
     6b2:	0a e4       	ldi	r16, 0x4A	; 74
     6b4:	11 e0       	ldi	r17, 0x01	; 1
     6b6:	76 2f       	mov	r23, r22
     6b8:	27 2f       	mov	r18, r23
     6ba:	3b 2d       	mov	r19, r11
     6bc:	4a 2d       	mov	r20, r10
     6be:	59 2d       	mov	r21, r9
     6c0:	6d 2f       	mov	r22, r29
     6c2:	7f 2d       	mov	r23, r15
     6c4:	8e 2d       	mov	r24, r14
     6c6:	9d 2d       	mov	r25, r13
     6c8:	0e 94 2a 01 	call	0x254	; 0x254 <pid_Controller>
     6cc:	16 2f       	mov	r17, r22
     6ce:	07 2f       	mov	r16, r23
     6d0:	88 2e       	mov	r8, r24
     6d2:	79 2e       	mov	r7, r25
	return 0;
}

void _command(uint8_t motor, int16_t inputValue)
{
	_set_speed(motor,inputValue);
     6d4:	61 2f       	mov	r22, r17
     6d6:	70 2f       	mov	r23, r16
     6d8:	88 2d       	mov	r24, r8
     6da:	97 2d       	mov	r25, r7
     6dc:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <__fixsfsi>
     6e0:	8c 2f       	mov	r24, r28
     6e2:	0e 94 b8 02 	call	0x570	; 0x570 <_set_speed>
		u = pid_Controller(ref,sen, &pidDataB);
	}
	_command(motor, (int)u);
	if (DEBUG_CONTROLLER)
	{
		printf("%1.2f - %1.2f - %1.2f\n",ref, sen, u);
     6e6:	7f 92       	push	r7
     6e8:	8f 92       	push	r8
     6ea:	0f 93       	push	r16
     6ec:	1f 93       	push	r17
     6ee:	9f 92       	push	r9
     6f0:	af 92       	push	r10
     6f2:	bf 92       	push	r11
     6f4:	cf 92       	push	r12
     6f6:	df 92       	push	r13
     6f8:	ef 92       	push	r14
     6fa:	ff 92       	push	r15
     6fc:	df 93       	push	r29
     6fe:	8e e0       	ldi	r24, 0x0E	; 14
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	9f 93       	push	r25
     704:	8f 93       	push	r24
     706:	0e 94 bd 10 	call	0x217a	; 0x217a <printf>
	}
	return 0;
     70a:	8d b7       	in	r24, 0x3d	; 61
     70c:	9e b7       	in	r25, 0x3e	; 62
     70e:	0e 96       	adiw	r24, 0x0e	; 14
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	f8 94       	cli
     714:	9e bf       	out	0x3e, r25	; 62
     716:	0f be       	out	0x3f, r0	; 63
     718:	8d bf       	out	0x3d, r24	; 61
}
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	1f 91       	pop	r17
     724:	0f 91       	pop	r16
     726:	ff 90       	pop	r15
     728:	ef 90       	pop	r14
     72a:	df 90       	pop	r13
     72c:	cf 90       	pop	r12
     72e:	bf 90       	pop	r11
     730:	af 90       	pop	r10
     732:	9f 90       	pop	r9
     734:	8f 90       	pop	r8
     736:	7f 90       	pop	r7
     738:	08 95       	ret

0000073a <_dc_controller_loop>:

int16_t _dc_controller_loop(void)
{
	if(_controler_flag_A)
     73a:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <_controler_flag_A>
     73e:	88 23       	and	r24, r24
     740:	29 f0       	breq	.+10     	; 0x74c <_dc_controller_loop+0x12>
	{
		_update_controller(MA);
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	0e 94 28 03 	call	0x650	; 0x650 <_update_controller>
		 _controler_flag_A = 0;
     748:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <_controler_flag_A>
	}
	if(_controler_flag_B)
     74c:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <_controler_flag_B>
     750:	88 23       	and	r24, r24
     752:	29 f0       	breq	.+10     	; 0x75e <_dc_controller_loop+0x24>
	{
		_update_controller(MB);
     754:	82 e0       	ldi	r24, 0x02	; 2
     756:	0e 94 28 03 	call	0x650	; 0x650 <_update_controller>
		_controler_flag_B = 0;
     75a:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <_controler_flag_B>
	}
	return 0;
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	08 95       	ret

00000764 <_interrupt0_enable>:

#include <__INT_0_1__.h>

void _interrupt0_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT0);
     764:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1 << ISC00) | (1 << ISC01);
     766:	e9 e6       	ldi	r30, 0x69	; 105
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	80 81       	ld	r24, Z
     76c:	83 60       	ori	r24, 0x03	; 3
     76e:	80 83       	st	Z, r24
	sei();
     770:	78 94       	sei
     772:	08 95       	ret

00000774 <_interrupt1_enable>:
}
void _interrupt1_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT1);
     774:	e9 9a       	sbi	0x1d, 1	; 29
	EICRA |= (1 << ISC10) | (1 << ISC11);
     776:	e9 e6       	ldi	r30, 0x69	; 105
     778:	f0 e0       	ldi	r31, 0x00	; 0
     77a:	80 81       	ld	r24, Z
     77c:	8c 60       	ori	r24, 0x0C	; 12
     77e:	80 83       	st	Z, r24
	sei();
     780:	78 94       	sei
     782:	08 95       	ret

00000784 <__vector_1>:
	return _enca_count;
}
int32_t _ticksB()
{
	return _encb_count;
}
     784:	1f 92       	push	r1
     786:	0f 92       	push	r0
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	0f 92       	push	r0
     78c:	11 24       	eor	r1, r1
     78e:	2f 92       	push	r2
     790:	3f 92       	push	r3
     792:	4f 92       	push	r4
     794:	5f 92       	push	r5
     796:	6f 92       	push	r6
     798:	7f 92       	push	r7
     79a:	8f 92       	push	r8
     79c:	9f 92       	push	r9
     79e:	af 92       	push	r10
     7a0:	bf 92       	push	r11
     7a2:	cf 92       	push	r12
     7a4:	df 92       	push	r13
     7a6:	ef 92       	push	r14
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	1f 93       	push	r17
     7ae:	2f 93       	push	r18
     7b0:	3f 93       	push	r19
     7b2:	4f 93       	push	r20
     7b4:	5f 93       	push	r21
     7b6:	6f 93       	push	r22
     7b8:	7f 93       	push	r23
     7ba:	8f 93       	push	r24
     7bc:	9f 93       	push	r25
     7be:	af 93       	push	r26
     7c0:	bf 93       	push	r27
     7c2:	cf 93       	push	r28
     7c4:	df 93       	push	r29
     7c6:	ef 93       	push	r30
     7c8:	ff 93       	push	r31
     7ca:	95 b1       	in	r25, 0x05	; 5
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	89 27       	eor	r24, r25
     7d0:	85 b9       	out	0x05, r24	; 5
     7d2:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <_enca_count>
     7d6:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <_enca_count+0x1>
     7da:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <_enca_count+0x2>
     7de:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <_enca_count+0x3>
     7e2:	89 2b       	or	r24, r25
     7e4:	8a 2b       	or	r24, r26
     7e6:	8b 2b       	or	r24, r27
     7e8:	e9 f4       	brne	.+58     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     7ea:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_micros0>
     7ee:	dc 01       	movw	r26, r24
     7f0:	cb 01       	movw	r24, r22
     7f2:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <_prev_tick_timeA>
     7f6:	90 93 a3 01 	sts	0x01A3, r25	; 0x8001a3 <_prev_tick_timeA+0x1>
     7fa:	a0 93 a4 01 	sts	0x01A4, r26	; 0x8001a4 <_prev_tick_timeA+0x2>
     7fe:	b0 93 a5 01 	sts	0x01A5, r27	; 0x8001a5 <_prev_tick_timeA+0x3>
     802:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_prev_tick_timeA+0x4>
     806:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <_prev_tick_timeA+0x5>
     80a:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <_prev_tick_timeA+0x6>
     80e:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <_prev_tick_timeA+0x7>
     812:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <_omega_enc_a>
     816:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_omega_enc_a+0x1>
     81a:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_omega_enc_a+0x2>
     81e:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <_omega_enc_a+0x3>
     822:	3e c0       	rjmp	.+124    	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
     824:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_micros0>
     828:	1b 01       	movw	r2, r22
     82a:	2c 01       	movw	r4, r24
     82c:	a0 90 a2 01 	lds	r10, 0x01A2	; 0x8001a2 <_prev_tick_timeA>
     830:	b0 90 a3 01 	lds	r11, 0x01A3	; 0x8001a3 <_prev_tick_timeA+0x1>
     834:	c0 90 a4 01 	lds	r12, 0x01A4	; 0x8001a4 <_prev_tick_timeA+0x2>
     838:	d0 90 a5 01 	lds	r13, 0x01A5	; 0x8001a5 <_prev_tick_timeA+0x3>
     83c:	e0 90 a6 01 	lds	r14, 0x01A6	; 0x8001a6 <_prev_tick_timeA+0x4>
     840:	f0 90 a7 01 	lds	r15, 0x01A7	; 0x8001a7 <_prev_tick_timeA+0x5>
     844:	00 91 a8 01 	lds	r16, 0x01A8	; 0x8001a8 <_prev_tick_timeA+0x6>
     848:	10 91 a9 01 	lds	r17, 0x01A9	; 0x8001a9 <_prev_tick_timeA+0x7>
     84c:	26 2f       	mov	r18, r22
     84e:	33 2d       	mov	r19, r3
     850:	44 2d       	mov	r20, r4
     852:	55 2d       	mov	r21, r5
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	70 e0       	ldi	r23, 0x00	; 0
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__subdi3>
     860:	20 93 b2 01 	sts	0x01B2, r18	; 0x8001b2 <_tick_timeA>
     864:	30 93 b3 01 	sts	0x01B3, r19	; 0x8001b3 <_tick_timeA+0x1>
     868:	40 93 b4 01 	sts	0x01B4, r20	; 0x8001b4 <_tick_timeA+0x2>
     86c:	50 93 b5 01 	sts	0x01B5, r21	; 0x8001b5 <_tick_timeA+0x3>
     870:	60 93 b6 01 	sts	0x01B6, r22	; 0x8001b6 <_tick_timeA+0x4>
     874:	70 93 b7 01 	sts	0x01B7, r23	; 0x8001b7 <_tick_timeA+0x5>
     878:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <_tick_timeA+0x6>
     87c:	90 93 b9 01 	sts	0x01B9, r25	; 0x8001b9 <_tick_timeA+0x7>
     880:	20 92 a2 01 	sts	0x01A2, r2	; 0x8001a2 <_prev_tick_timeA>
     884:	30 92 a3 01 	sts	0x01A3, r3	; 0x8001a3 <_prev_tick_timeA+0x1>
     888:	40 92 a4 01 	sts	0x01A4, r4	; 0x8001a4 <_prev_tick_timeA+0x2>
     88c:	50 92 a5 01 	sts	0x01A5, r5	; 0x8001a5 <_prev_tick_timeA+0x3>
     890:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <_prev_tick_timeA+0x4>
     894:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <_prev_tick_timeA+0x5>
     898:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <_prev_tick_timeA+0x6>
     89c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <_prev_tick_timeA+0x7>
     8a0:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <_enca_count>
     8a4:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <_enca_count+0x1>
     8a8:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <_enca_count+0x2>
     8ac:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <_enca_count+0x3>
     8b0:	01 96       	adiw	r24, 0x01	; 1
     8b2:	a1 1d       	adc	r26, r1
     8b4:	b1 1d       	adc	r27, r1
     8b6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <_enca_count>
     8ba:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <_enca_count+0x1>
     8be:	a0 93 90 01 	sts	0x0190, r26	; 0x800190 <_enca_count+0x2>
     8c2:	b0 93 91 01 	sts	0x0191, r27	; 0x800191 <_enca_count+0x3>
     8c6:	ff 91       	pop	r31
     8c8:	ef 91       	pop	r30
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	bf 91       	pop	r27
     8d0:	af 91       	pop	r26
     8d2:	9f 91       	pop	r25
     8d4:	8f 91       	pop	r24
     8d6:	7f 91       	pop	r23
     8d8:	6f 91       	pop	r22
     8da:	5f 91       	pop	r21
     8dc:	4f 91       	pop	r20
     8de:	3f 91       	pop	r19
     8e0:	2f 91       	pop	r18
     8e2:	1f 91       	pop	r17
     8e4:	0f 91       	pop	r16
     8e6:	ff 90       	pop	r15
     8e8:	ef 90       	pop	r14
     8ea:	df 90       	pop	r13
     8ec:	cf 90       	pop	r12
     8ee:	bf 90       	pop	r11
     8f0:	af 90       	pop	r10
     8f2:	9f 90       	pop	r9
     8f4:	8f 90       	pop	r8
     8f6:	7f 90       	pop	r7
     8f8:	6f 90       	pop	r6
     8fa:	5f 90       	pop	r5
     8fc:	4f 90       	pop	r4
     8fe:	3f 90       	pop	r3
     900:	2f 90       	pop	r2
     902:	0f 90       	pop	r0
     904:	0f be       	out	0x3f, r0	; 63
     906:	0f 90       	pop	r0
     908:	1f 90       	pop	r1
     90a:	18 95       	reti

0000090c <__vector_2>:
     90c:	1f 92       	push	r1
     90e:	0f 92       	push	r0
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	0f 92       	push	r0
     914:	11 24       	eor	r1, r1
     916:	2f 92       	push	r2
     918:	3f 92       	push	r3
     91a:	4f 92       	push	r4
     91c:	5f 92       	push	r5
     91e:	6f 92       	push	r6
     920:	7f 92       	push	r7
     922:	8f 92       	push	r8
     924:	9f 92       	push	r9
     926:	af 92       	push	r10
     928:	bf 92       	push	r11
     92a:	cf 92       	push	r12
     92c:	df 92       	push	r13
     92e:	ef 92       	push	r14
     930:	ff 92       	push	r15
     932:	0f 93       	push	r16
     934:	1f 93       	push	r17
     936:	2f 93       	push	r18
     938:	3f 93       	push	r19
     93a:	4f 93       	push	r20
     93c:	5f 93       	push	r21
     93e:	6f 93       	push	r22
     940:	7f 93       	push	r23
     942:	8f 93       	push	r24
     944:	9f 93       	push	r25
     946:	af 93       	push	r26
     948:	bf 93       	push	r27
     94a:	cf 93       	push	r28
     94c:	df 93       	push	r29
     94e:	ef 93       	push	r30
     950:	ff 93       	push	r31
     952:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_encb_count>
     956:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_encb_count+0x1>
     95a:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <_encb_count+0x2>
     95e:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <_encb_count+0x3>
     962:	89 2b       	or	r24, r25
     964:	8a 2b       	or	r24, r26
     966:	8b 2b       	or	r24, r27
     968:	e9 f4       	brne	.+58     	; 0x9a4 <__vector_2+0x98>
     96a:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_micros0>
     96e:	dc 01       	movw	r26, r24
     970:	cb 01       	movw	r24, r22
     972:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <_prev_tick_timeB>
     976:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <_prev_tick_timeB+0x1>
     97a:	a0 93 9c 01 	sts	0x019C, r26	; 0x80019c <_prev_tick_timeB+0x2>
     97e:	b0 93 9d 01 	sts	0x019D, r27	; 0x80019d <_prev_tick_timeB+0x3>
     982:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_prev_tick_timeB+0x4>
     986:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <_prev_tick_timeB+0x5>
     98a:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <_prev_tick_timeB+0x6>
     98e:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <_prev_tick_timeB+0x7>
     992:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <_omega_enc_b>
     996:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <_omega_enc_b+0x1>
     99a:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <_omega_enc_b+0x2>
     99e:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <_omega_enc_b+0x3>
     9a2:	3e c0       	rjmp	.+124    	; 0xa20 <__vector_2+0x114>
     9a4:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_micros0>
     9a8:	1b 01       	movw	r2, r22
     9aa:	2c 01       	movw	r4, r24
     9ac:	a0 90 9a 01 	lds	r10, 0x019A	; 0x80019a <_prev_tick_timeB>
     9b0:	b0 90 9b 01 	lds	r11, 0x019B	; 0x80019b <_prev_tick_timeB+0x1>
     9b4:	c0 90 9c 01 	lds	r12, 0x019C	; 0x80019c <_prev_tick_timeB+0x2>
     9b8:	d0 90 9d 01 	lds	r13, 0x019D	; 0x80019d <_prev_tick_timeB+0x3>
     9bc:	e0 90 9e 01 	lds	r14, 0x019E	; 0x80019e <_prev_tick_timeB+0x4>
     9c0:	f0 90 9f 01 	lds	r15, 0x019F	; 0x80019f <_prev_tick_timeB+0x5>
     9c4:	00 91 a0 01 	lds	r16, 0x01A0	; 0x8001a0 <_prev_tick_timeB+0x6>
     9c8:	10 91 a1 01 	lds	r17, 0x01A1	; 0x8001a1 <_prev_tick_timeB+0x7>
     9cc:	26 2f       	mov	r18, r22
     9ce:	33 2d       	mov	r19, r3
     9d0:	44 2d       	mov	r20, r4
     9d2:	55 2d       	mov	r21, r5
     9d4:	60 e0       	ldi	r22, 0x00	; 0
     9d6:	70 e0       	ldi	r23, 0x00	; 0
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__subdi3>
     9e0:	20 93 aa 01 	sts	0x01AA, r18	; 0x8001aa <_tick_timeB>
     9e4:	30 93 ab 01 	sts	0x01AB, r19	; 0x8001ab <_tick_timeB+0x1>
     9e8:	40 93 ac 01 	sts	0x01AC, r20	; 0x8001ac <_tick_timeB+0x2>
     9ec:	50 93 ad 01 	sts	0x01AD, r21	; 0x8001ad <_tick_timeB+0x3>
     9f0:	60 93 ae 01 	sts	0x01AE, r22	; 0x8001ae <_tick_timeB+0x4>
     9f4:	70 93 af 01 	sts	0x01AF, r23	; 0x8001af <_tick_timeB+0x5>
     9f8:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <_tick_timeB+0x6>
     9fc:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <_tick_timeB+0x7>
     a00:	20 92 9a 01 	sts	0x019A, r2	; 0x80019a <_prev_tick_timeB>
     a04:	30 92 9b 01 	sts	0x019B, r3	; 0x80019b <_prev_tick_timeB+0x1>
     a08:	40 92 9c 01 	sts	0x019C, r4	; 0x80019c <_prev_tick_timeB+0x2>
     a0c:	50 92 9d 01 	sts	0x019D, r5	; 0x80019d <_prev_tick_timeB+0x3>
     a10:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <_prev_tick_timeB+0x4>
     a14:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <_prev_tick_timeB+0x5>
     a18:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <_prev_tick_timeB+0x6>
     a1c:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <_prev_tick_timeB+0x7>
     a20:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_encb_count>
     a24:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_encb_count+0x1>
     a28:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <_encb_count+0x2>
     a2c:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <_encb_count+0x3>
     a30:	01 96       	adiw	r24, 0x01	; 1
     a32:	a1 1d       	adc	r26, r1
     a34:	b1 1d       	adc	r27, r1
     a36:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <_encb_count>
     a3a:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <_encb_count+0x1>
     a3e:	a0 93 8c 01 	sts	0x018C, r26	; 0x80018c <_encb_count+0x2>
     a42:	b0 93 8d 01 	sts	0x018D, r27	; 0x80018d <_encb_count+0x3>
     a46:	ff 91       	pop	r31
     a48:	ef 91       	pop	r30
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	bf 91       	pop	r27
     a50:	af 91       	pop	r26
     a52:	9f 91       	pop	r25
     a54:	8f 91       	pop	r24
     a56:	7f 91       	pop	r23
     a58:	6f 91       	pop	r22
     a5a:	5f 91       	pop	r21
     a5c:	4f 91       	pop	r20
     a5e:	3f 91       	pop	r19
     a60:	2f 91       	pop	r18
     a62:	1f 91       	pop	r17
     a64:	0f 91       	pop	r16
     a66:	ff 90       	pop	r15
     a68:	ef 90       	pop	r14
     a6a:	df 90       	pop	r13
     a6c:	cf 90       	pop	r12
     a6e:	bf 90       	pop	r11
     a70:	af 90       	pop	r10
     a72:	9f 90       	pop	r9
     a74:	8f 90       	pop	r8
     a76:	7f 90       	pop	r7
     a78:	6f 90       	pop	r6
     a7a:	5f 90       	pop	r5
     a7c:	4f 90       	pop	r4
     a7e:	3f 90       	pop	r3
     a80:	2f 90       	pop	r2
     a82:	0f 90       	pop	r0
     a84:	0f be       	out	0x3f, r0	; 63
     a86:	0f 90       	pop	r0
     a88:	1f 90       	pop	r1
     a8a:	18 95       	reti

00000a8c <_omega_from_encA>:

float _omega_from_encA(void)
{
     a8c:	af 92       	push	r10
     a8e:	bf 92       	push	r11
     a90:	cf 92       	push	r12
     a92:	df 92       	push	r13
     a94:	ef 92       	push	r14
     a96:	ff 92       	push	r15
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
	if(_micros0() - _prev_tick_timeA > 500000)
     aa0:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_micros0>
     aa4:	a0 90 a2 01 	lds	r10, 0x01A2	; 0x8001a2 <_prev_tick_timeA>
     aa8:	b0 90 a3 01 	lds	r11, 0x01A3	; 0x8001a3 <_prev_tick_timeA+0x1>
     aac:	c0 90 a4 01 	lds	r12, 0x01A4	; 0x8001a4 <_prev_tick_timeA+0x2>
     ab0:	d0 90 a5 01 	lds	r13, 0x01A5	; 0x8001a5 <_prev_tick_timeA+0x3>
     ab4:	e0 90 a6 01 	lds	r14, 0x01A6	; 0x8001a6 <_prev_tick_timeA+0x4>
     ab8:	f0 90 a7 01 	lds	r15, 0x01A7	; 0x8001a7 <_prev_tick_timeA+0x5>
     abc:	00 91 a8 01 	lds	r16, 0x01A8	; 0x8001a8 <_prev_tick_timeA+0x6>
     ac0:	10 91 a9 01 	lds	r17, 0x01A9	; 0x8001a9 <_prev_tick_timeA+0x7>
     ac4:	dc 01       	movw	r26, r24
     ac6:	cb 01       	movw	r24, r22
     ac8:	28 2f       	mov	r18, r24
     aca:	39 2f       	mov	r19, r25
     acc:	4a 2f       	mov	r20, r26
     ace:	5b 2f       	mov	r21, r27
     ad0:	60 e0       	ldi	r22, 0x00	; 0
     ad2:	70 e0       	ldi	r23, 0x00	; 0
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__subdi3>
     adc:	20 32       	cpi	r18, 0x20	; 32
     ade:	31 4a       	sbci	r19, 0xA1	; 161
     ae0:	47 40       	sbci	r20, 0x07	; 7
     ae2:	51 05       	cpc	r21, r1
     ae4:	61 05       	cpc	r22, r1
     ae6:	71 05       	cpc	r23, r1
     ae8:	81 05       	cpc	r24, r1
     aea:	91 05       	cpc	r25, r1
     aec:	91 f0       	breq	.+36     	; 0xb12 <_omega_from_encA+0x86>
     aee:	88 f0       	brcs	.+34     	; 0xb12 <_omega_from_encA+0x86>
	{
		_omega_enc_a = 0.0;
     af0:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <_omega_enc_a>
     af4:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_omega_enc_a+0x1>
     af8:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_omega_enc_a+0x2>
     afc:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <_omega_enc_a+0x3>
		return _omega_enc_a;
     b00:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <_omega_enc_a>
     b04:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <_omega_enc_a+0x1>
     b08:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_omega_enc_a+0x2>
     b0c:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_omega_enc_a+0x3>
     b10:	53 c0       	rjmp	.+166    	; 0xbb8 <_omega_from_encA+0x12c>
	}
		_omega_enc_a = (__ENC_TICK_THETA_FOR_OMEGA / (float)_tick_timeA);
     b12:	20 91 b2 01 	lds	r18, 0x01B2	; 0x8001b2 <_tick_timeA>
     b16:	30 91 b3 01 	lds	r19, 0x01B3	; 0x8001b3 <_tick_timeA+0x1>
     b1a:	40 91 b4 01 	lds	r20, 0x01B4	; 0x8001b4 <_tick_timeA+0x2>
     b1e:	50 91 b5 01 	lds	r21, 0x01B5	; 0x8001b5 <_tick_timeA+0x3>
     b22:	60 91 b6 01 	lds	r22, 0x01B6	; 0x8001b6 <_tick_timeA+0x4>
     b26:	70 91 b7 01 	lds	r23, 0x01B7	; 0x8001b7 <_tick_timeA+0x5>
     b2a:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <_tick_timeA+0x6>
     b2e:	90 91 b9 01 	lds	r25, 0x01B9	; 0x8001b9 <_tick_timeA+0x7>
     b32:	0e 94 18 0a 	call	0x1430	; 0x1430 <__floatundisf>
     b36:	9b 01       	movw	r18, r22
     b38:	ac 01       	movw	r20, r24
     b3a:	60 ec       	ldi	r22, 0xC0	; 192
     b3c:	7f ee       	ldi	r23, 0xEF	; 239
     b3e:	89 e3       	ldi	r24, 0x39	; 57
     b40:	98 e4       	ldi	r25, 0x48	; 72
     b42:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__divsf3>
     b46:	60 93 96 01 	sts	0x0196, r22	; 0x800196 <_omega_enc_a>
     b4a:	70 93 97 01 	sts	0x0197, r23	; 0x800197 <_omega_enc_a+0x1>
     b4e:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <_omega_enc_a+0x2>
     b52:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <_omega_enc_a+0x3>
	if(_omega_enc_a > 10)
     b56:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <_omega_enc_a>
     b5a:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <_omega_enc_a+0x1>
     b5e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_omega_enc_a+0x2>
     b62:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_omega_enc_a+0x3>
     b66:	20 e0       	ldi	r18, 0x00	; 0
     b68:	30 e0       	ldi	r19, 0x00	; 0
     b6a:	40 e2       	ldi	r20, 0x20	; 32
     b6c:	51 e4       	ldi	r21, 0x41	; 65
     b6e:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__gesf2>
     b72:	18 16       	cp	r1, r24
     b74:	4c f4       	brge	.+18     	; 0xb88 <_omega_from_encA+0xfc>
	{
		 return _omega_enca_prev;
     b76:	60 91 86 01 	lds	r22, 0x0186	; 0x800186 <_omega_enca_prev>
     b7a:	70 91 87 01 	lds	r23, 0x0187	; 0x800187 <_omega_enca_prev+0x1>
     b7e:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_omega_enca_prev+0x2>
     b82:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_omega_enca_prev+0x3>
     b86:	18 c0       	rjmp	.+48     	; 0xbb8 <_omega_from_encA+0x12c>
	}
	else
	{
		_omega_enca_prev = _omega_enc_a;
     b88:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <_omega_enc_a>
     b8c:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <_omega_enc_a+0x1>
     b90:	a0 91 98 01 	lds	r26, 0x0198	; 0x800198 <_omega_enc_a+0x2>
     b94:	b0 91 99 01 	lds	r27, 0x0199	; 0x800199 <_omega_enc_a+0x3>
     b98:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_omega_enca_prev>
     b9c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_omega_enca_prev+0x1>
     ba0:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <_omega_enca_prev+0x2>
     ba4:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <_omega_enca_prev+0x3>
		 return _omega_enc_a;
     ba8:	60 91 96 01 	lds	r22, 0x0196	; 0x800196 <_omega_enc_a>
     bac:	70 91 97 01 	lds	r23, 0x0197	; 0x800197 <_omega_enc_a+0x1>
     bb0:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <_omega_enc_a+0x2>
     bb4:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <_omega_enc_a+0x3>
	}
	//return _tick_timeA;
}
     bb8:	df 91       	pop	r29
     bba:	cf 91       	pop	r28
     bbc:	1f 91       	pop	r17
     bbe:	0f 91       	pop	r16
     bc0:	ff 90       	pop	r15
     bc2:	ef 90       	pop	r14
     bc4:	df 90       	pop	r13
     bc6:	cf 90       	pop	r12
     bc8:	bf 90       	pop	r11
     bca:	af 90       	pop	r10
     bcc:	08 95       	ret

00000bce <_omega_from_encB>:
float _omega_from_encB(void)
{
     bce:	af 92       	push	r10
     bd0:	bf 92       	push	r11
     bd2:	cf 92       	push	r12
     bd4:	df 92       	push	r13
     bd6:	ef 92       	push	r14
     bd8:	ff 92       	push	r15
     bda:	0f 93       	push	r16
     bdc:	1f 93       	push	r17
     bde:	cf 93       	push	r28
     be0:	df 93       	push	r29
	if(_micros0() - _prev_tick_timeB > 500000)
     be2:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_micros0>
     be6:	a0 90 9a 01 	lds	r10, 0x019A	; 0x80019a <_prev_tick_timeB>
     bea:	b0 90 9b 01 	lds	r11, 0x019B	; 0x80019b <_prev_tick_timeB+0x1>
     bee:	c0 90 9c 01 	lds	r12, 0x019C	; 0x80019c <_prev_tick_timeB+0x2>
     bf2:	d0 90 9d 01 	lds	r13, 0x019D	; 0x80019d <_prev_tick_timeB+0x3>
     bf6:	e0 90 9e 01 	lds	r14, 0x019E	; 0x80019e <_prev_tick_timeB+0x4>
     bfa:	f0 90 9f 01 	lds	r15, 0x019F	; 0x80019f <_prev_tick_timeB+0x5>
     bfe:	00 91 a0 01 	lds	r16, 0x01A0	; 0x8001a0 <_prev_tick_timeB+0x6>
     c02:	10 91 a1 01 	lds	r17, 0x01A1	; 0x8001a1 <_prev_tick_timeB+0x7>
     c06:	dc 01       	movw	r26, r24
     c08:	cb 01       	movw	r24, r22
     c0a:	28 2f       	mov	r18, r24
     c0c:	39 2f       	mov	r19, r25
     c0e:	4a 2f       	mov	r20, r26
     c10:	5b 2f       	mov	r21, r27
     c12:	60 e0       	ldi	r22, 0x00	; 0
     c14:	70 e0       	ldi	r23, 0x00	; 0
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <__subdi3>
     c1e:	20 32       	cpi	r18, 0x20	; 32
     c20:	31 4a       	sbci	r19, 0xA1	; 161
     c22:	47 40       	sbci	r20, 0x07	; 7
     c24:	51 05       	cpc	r21, r1
     c26:	61 05       	cpc	r22, r1
     c28:	71 05       	cpc	r23, r1
     c2a:	81 05       	cpc	r24, r1
     c2c:	91 05       	cpc	r25, r1
     c2e:	91 f0       	breq	.+36     	; 0xc54 <_omega_from_encB+0x86>
     c30:	88 f0       	brcs	.+34     	; 0xc54 <_omega_from_encB+0x86>
	{
		_omega_enc_b = 0.0;
     c32:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <_omega_enc_b>
     c36:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <_omega_enc_b+0x1>
     c3a:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <_omega_enc_b+0x2>
     c3e:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <_omega_enc_b+0x3>
		return _omega_enc_b;
     c42:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <_omega_enc_b>
     c46:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <_omega_enc_b+0x1>
     c4a:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_omega_enc_b+0x2>
     c4e:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <_omega_enc_b+0x3>
     c52:	53 c0       	rjmp	.+166    	; 0xcfa <_omega_from_encB+0x12c>
	}
	_omega_enc_b = (__ENC_TICK_THETA_FOR_OMEGA / (float)_tick_timeB);
     c54:	20 91 aa 01 	lds	r18, 0x01AA	; 0x8001aa <_tick_timeB>
     c58:	30 91 ab 01 	lds	r19, 0x01AB	; 0x8001ab <_tick_timeB+0x1>
     c5c:	40 91 ac 01 	lds	r20, 0x01AC	; 0x8001ac <_tick_timeB+0x2>
     c60:	50 91 ad 01 	lds	r21, 0x01AD	; 0x8001ad <_tick_timeB+0x3>
     c64:	60 91 ae 01 	lds	r22, 0x01AE	; 0x8001ae <_tick_timeB+0x4>
     c68:	70 91 af 01 	lds	r23, 0x01AF	; 0x8001af <_tick_timeB+0x5>
     c6c:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <_tick_timeB+0x6>
     c70:	90 91 b1 01 	lds	r25, 0x01B1	; 0x8001b1 <_tick_timeB+0x7>
     c74:	0e 94 18 0a 	call	0x1430	; 0x1430 <__floatundisf>
     c78:	9b 01       	movw	r18, r22
     c7a:	ac 01       	movw	r20, r24
     c7c:	60 ec       	ldi	r22, 0xC0	; 192
     c7e:	7f ee       	ldi	r23, 0xEF	; 239
     c80:	89 e3       	ldi	r24, 0x39	; 57
     c82:	98 e4       	ldi	r25, 0x48	; 72
     c84:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__divsf3>
     c88:	60 93 92 01 	sts	0x0192, r22	; 0x800192 <_omega_enc_b>
     c8c:	70 93 93 01 	sts	0x0193, r23	; 0x800193 <_omega_enc_b+0x1>
     c90:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <_omega_enc_b+0x2>
     c94:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <_omega_enc_b+0x3>
	if(_omega_enc_b > 10)
     c98:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <_omega_enc_b>
     c9c:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <_omega_enc_b+0x1>
     ca0:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_omega_enc_b+0x2>
     ca4:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <_omega_enc_b+0x3>
     ca8:	20 e0       	ldi	r18, 0x00	; 0
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	40 e2       	ldi	r20, 0x20	; 32
     cae:	51 e4       	ldi	r21, 0x41	; 65
     cb0:	0e 94 cb 0a 	call	0x1596	; 0x1596 <__gesf2>
     cb4:	18 16       	cp	r1, r24
     cb6:	4c f4       	brge	.+18     	; 0xcca <_omega_from_encB+0xfc>
	{
		return _omega_encb_prev;
     cb8:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <_omega_encb_prev>
     cbc:	70 91 83 01 	lds	r23, 0x0183	; 0x800183 <_omega_encb_prev+0x1>
     cc0:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <_omega_encb_prev+0x2>
     cc4:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <_omega_encb_prev+0x3>
     cc8:	18 c0       	rjmp	.+48     	; 0xcfa <_omega_from_encB+0x12c>
	}
	else
	{
		_omega_encb_prev = _omega_enc_b;
     cca:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <_omega_enc_b>
     cce:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <_omega_enc_b+0x1>
     cd2:	a0 91 94 01 	lds	r26, 0x0194	; 0x800194 <_omega_enc_b+0x2>
     cd6:	b0 91 95 01 	lds	r27, 0x0195	; 0x800195 <_omega_enc_b+0x3>
     cda:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <_omega_encb_prev>
     cde:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <_omega_encb_prev+0x1>
     ce2:	a0 93 84 01 	sts	0x0184, r26	; 0x800184 <_omega_encb_prev+0x2>
     ce6:	b0 93 85 01 	sts	0x0185, r27	; 0x800185 <_omega_encb_prev+0x3>
		return _omega_enc_b;
     cea:	60 91 92 01 	lds	r22, 0x0192	; 0x800192 <_omega_enc_b>
     cee:	70 91 93 01 	lds	r23, 0x0193	; 0x800193 <_omega_enc_b+0x1>
     cf2:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <_omega_enc_b+0x2>
     cf6:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <_omega_enc_b+0x3>
	}
	//return _tick_timeA;
}
     cfa:	df 91       	pop	r29
     cfc:	cf 91       	pop	r28
     cfe:	1f 91       	pop	r17
     d00:	0f 91       	pop	r16
     d02:	ff 90       	pop	r15
     d04:	ef 90       	pop	r14
     d06:	df 90       	pop	r13
     d08:	cf 90       	pop	r12
     d0a:	bf 90       	pop	r11
     d0c:	af 90       	pop	r10
     d0e:	08 95       	ret

00000d10 <__vector_9>:

ISR(TIMER2_OVF_vect)
{
     d10:	1f 92       	push	r1
     d12:	0f 92       	push	r0
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	0f 92       	push	r0
     d18:	11 24       	eor	r1, r1
// ewmmber to turn it on if you wanna use it
}
     d1a:	0f 90       	pop	r0
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	0f 90       	pop	r0
     d20:	1f 90       	pop	r1
     d22:	18 95       	reti

00000d24 <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
     d24:	1f 92       	push	r1
     d26:	0f 92       	push	r0
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	0f 92       	push	r0
     d2c:	11 24       	eor	r1, r1
	// ewmmber to turn it on if you wanna use it
     d2e:	0f 90       	pop	r0
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	0f 90       	pop	r0
     d34:	1f 90       	pop	r1
     d36:	18 95       	reti

00000d38 <_set_pwm_0A>:

/**
       * sets the PWM output of OCR0A (Motor A rear) 
       */
void _set_pwm_0A(int input/**< [in] @param input a number (0 --> 255) */)
{
     d38:	99 23       	and	r25, r25
     d3a:	14 f4       	brge	.+4      	; 0xd40 <_set_pwm_0A+0x8>
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR0A = (uint8_t)input;
     d40:	8f 3f       	cpi	r24, 0xFF	; 255
     d42:	91 05       	cpc	r25, r1
     d44:	19 f0       	breq	.+6      	; 0xd4c <_set_pwm_0A+0x14>
     d46:	14 f0       	brlt	.+4      	; 0xd4c <_set_pwm_0A+0x14>
     d48:	8f ef       	ldi	r24, 0xFF	; 255
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	87 bd       	out	0x27, r24	; 39
     d4e:	08 95       	ret

00000d50 <_set_pwm_0B>:

/**
       * sets the PWM output of OCR0B (Motor B rear) 
       */
void _set_pwm_0B(int input/**< [in] @param input a number (0 --> 255)*/)
{
     d50:	99 23       	and	r25, r25
     d52:	14 f4       	brge	.+4      	; 0xd58 <_set_pwm_0B+0x8>
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	90 e0       	ldi	r25, 0x00	; 0
	if (input > 255)
		{input = 255;}
	else if (input < 0)
		{input = 0;}
		
	OCR0B = (uint8_t)input;
     d58:	8f 3f       	cpi	r24, 0xFF	; 255
     d5a:	91 05       	cpc	r25, r1
     d5c:	19 f0       	breq	.+6      	; 0xd64 <_set_pwm_0B+0x14>
     d5e:	14 f0       	brlt	.+4      	; 0xd64 <_set_pwm_0B+0x14>
     d60:	8f ef       	ldi	r24, 0xFF	; 255
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	88 bd       	out	0x28, r24	; 40
     d66:	08 95       	ret

00000d68 <_set_pwm_1A>:

/**
       * sets the PWM output of OCR1A (Motor A front) 
       */
void _set_pwm_1A(int input/**< [in] @param input a number (0 --> 255) */)
{
     d68:	99 23       	and	r25, r25
     d6a:	14 f4       	brge	.+4      	; 0xd70 <_set_pwm_1A+0x8>
     d6c:	80 e0       	ldi	r24, 0x00	; 0
     d6e:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1AH = (uint8_t)(input);
     d70:	8f 3f       	cpi	r24, 0xFF	; 255
     d72:	91 05       	cpc	r25, r1
     d74:	19 f0       	breq	.+6      	; 0xd7c <_set_pwm_1A+0x14>
     d76:	14 f0       	brlt	.+4      	; 0xd7c <_set_pwm_1A+0x14>
     d78:	8f ef       	ldi	r24, 0xFF	; 255
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0;
     d80:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     d84:	08 95       	ret

00000d86 <_set_pwm_1B>:

/**
       * sets the PWM output of OCR1B (Motor B front) 
       */
void _set_pwm_1B(int input /**< [in] @param input a number (0 --> 255)*/)
{
     d86:	99 23       	and	r25, r25
     d88:	14 f4       	brge	.+4      	; 0xd8e <_set_pwm_1B+0x8>
     d8a:	80 e0       	ldi	r24, 0x00	; 0
     d8c:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1BH = (uint8_t)(input);
     d8e:	8f 3f       	cpi	r24, 0xFF	; 255
     d90:	91 05       	cpc	r25, r1
     d92:	19 f0       	breq	.+6      	; 0xd9a <_set_pwm_1B+0x14>
     d94:	14 f0       	brlt	.+4      	; 0xd9a <_set_pwm_1B+0x14>
     d96:	8f ef       	ldi	r24, 0xFF	; 255
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
	OCR1BL = 0;
     d9e:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     da2:	08 95       	ret

00000da4 <_timer0_init>:
	if ((TIFR0 & (1 << TOV0)) && (TCNT0 < 255))
	{
		_timer0_ovf_cnt++;
	}
	return _TICK_MS_0*(((_timer0_ovf_cnt << 8) + TCNT0));
}
     da4:	84 b5       	in	r24, 0x24	; 36
     da6:	80 6a       	ori	r24, 0xA0	; 160
     da8:	84 bd       	out	0x24, r24	; 36
     daa:	84 b5       	in	r24, 0x24	; 36
     dac:	83 60       	ori	r24, 0x03	; 3
     dae:	84 bd       	out	0x24, r24	; 36
     db0:	85 b5       	in	r24, 0x25	; 37
     db2:	84 60       	ori	r24, 0x04	; 4
     db4:	85 bd       	out	0x25, r24	; 37
     db6:	ee e6       	ldi	r30, 0x6E	; 110
     db8:	f0 e0       	ldi	r31, 0x00	; 0
     dba:	80 81       	ld	r24, Z
     dbc:	81 60       	ori	r24, 0x01	; 1
     dbe:	80 83       	st	Z, r24
     dc0:	78 94       	sei
     dc2:	08 95       	ret

00000dc4 <_micros0>:
     dc4:	af 92       	push	r10
     dc6:	bf 92       	push	r11
     dc8:	cf 92       	push	r12
     dca:	df 92       	push	r13
     dcc:	ef 92       	push	r14
     dce:	ff 92       	push	r15
     dd0:	0f 93       	push	r16
     dd2:	1f 93       	push	r17
     dd4:	a8 9b       	sbis	0x15, 0	; 21
     dd6:	26 c0       	rjmp	.+76     	; 0xe24 <_micros0+0x60>
     dd8:	86 b5       	in	r24, 0x26	; 38
     dda:	8f 3f       	cpi	r24, 0xFF	; 255
     ddc:	19 f1       	breq	.+70     	; 0xe24 <_micros0+0x60>
     dde:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <_timer0_ovf_cnt>
     de2:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <_timer0_ovf_cnt+0x1>
     de6:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <_timer0_ovf_cnt+0x2>
     dea:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <_timer0_ovf_cnt+0x3>
     dee:	60 91 be 01 	lds	r22, 0x01BE	; 0x8001be <_timer0_ovf_cnt+0x4>
     df2:	70 91 bf 01 	lds	r23, 0x01BF	; 0x8001bf <_timer0_ovf_cnt+0x5>
     df6:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <_timer0_ovf_cnt+0x6>
     dfa:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <_timer0_ovf_cnt+0x7>
     dfe:	a1 e0       	ldi	r26, 0x01	; 1
     e00:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <__adddi3_s8>
     e04:	20 93 ba 01 	sts	0x01BA, r18	; 0x8001ba <_timer0_ovf_cnt>
     e08:	30 93 bb 01 	sts	0x01BB, r19	; 0x8001bb <_timer0_ovf_cnt+0x1>
     e0c:	40 93 bc 01 	sts	0x01BC, r20	; 0x8001bc <_timer0_ovf_cnt+0x2>
     e10:	50 93 bd 01 	sts	0x01BD, r21	; 0x8001bd <_timer0_ovf_cnt+0x3>
     e14:	60 93 be 01 	sts	0x01BE, r22	; 0x8001be <_timer0_ovf_cnt+0x4>
     e18:	70 93 bf 01 	sts	0x01BF, r23	; 0x8001bf <_timer0_ovf_cnt+0x5>
     e1c:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <_timer0_ovf_cnt+0x6>
     e20:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <_timer0_ovf_cnt+0x7>
     e24:	a6 b4       	in	r10, 0x26	; 38
     e26:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <_timer0_ovf_cnt>
     e2a:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <_timer0_ovf_cnt+0x1>
     e2e:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <_timer0_ovf_cnt+0x2>
     e32:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <_timer0_ovf_cnt+0x3>
     e36:	60 91 be 01 	lds	r22, 0x01BE	; 0x8001be <_timer0_ovf_cnt+0x4>
     e3a:	70 91 bf 01 	lds	r23, 0x01BF	; 0x8001bf <_timer0_ovf_cnt+0x5>
     e3e:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <_timer0_ovf_cnt+0x6>
     e42:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <_timer0_ovf_cnt+0x7>
     e46:	08 e0       	ldi	r16, 0x08	; 8
     e48:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <__ashldi3>
     e4c:	b1 2c       	mov	r11, r1
     e4e:	c1 2c       	mov	r12, r1
     e50:	d1 2c       	mov	r13, r1
     e52:	e1 2c       	mov	r14, r1
     e54:	f1 2c       	mov	r15, r1
     e56:	00 e0       	ldi	r16, 0x00	; 0
     e58:	10 e0       	ldi	r17, 0x00	; 0
     e5a:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <__adddi3>
     e5e:	82 2f       	mov	r24, r18
     e60:	93 2f       	mov	r25, r19
     e62:	a4 2f       	mov	r26, r20
     e64:	b5 2f       	mov	r27, r21
     e66:	88 0f       	add	r24, r24
     e68:	99 1f       	adc	r25, r25
     e6a:	aa 1f       	adc	r26, r26
     e6c:	bb 1f       	adc	r27, r27
     e6e:	88 0f       	add	r24, r24
     e70:	99 1f       	adc	r25, r25
     e72:	aa 1f       	adc	r26, r26
     e74:	bb 1f       	adc	r27, r27
     e76:	bc 01       	movw	r22, r24
     e78:	cd 01       	movw	r24, r26
     e7a:	66 0f       	add	r22, r22
     e7c:	77 1f       	adc	r23, r23
     e7e:	88 1f       	adc	r24, r24
     e80:	99 1f       	adc	r25, r25
     e82:	66 0f       	add	r22, r22
     e84:	77 1f       	adc	r23, r23
     e86:	88 1f       	adc	r24, r24
     e88:	99 1f       	adc	r25, r25
     e8a:	1f 91       	pop	r17
     e8c:	0f 91       	pop	r16
     e8e:	ff 90       	pop	r15
     e90:	ef 90       	pop	r14
     e92:	df 90       	pop	r13
     e94:	cf 90       	pop	r12
     e96:	bf 90       	pop	r11
     e98:	af 90       	pop	r10
     e9a:	08 95       	ret

00000e9c <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     e9c:	1f 92       	push	r1
     e9e:	0f 92       	push	r0
     ea0:	0f b6       	in	r0, 0x3f	; 63
     ea2:	0f 92       	push	r0
     ea4:	11 24       	eor	r1, r1
     ea6:	2f 93       	push	r18
     ea8:	3f 93       	push	r19
     eaa:	4f 93       	push	r20
     eac:	5f 93       	push	r21
     eae:	6f 93       	push	r22
     eb0:	7f 93       	push	r23
     eb2:	8f 93       	push	r24
     eb4:	9f 93       	push	r25
     eb6:	af 93       	push	r26
	_timer0_ovf_cnt++;
     eb8:	20 91 ba 01 	lds	r18, 0x01BA	; 0x8001ba <_timer0_ovf_cnt>
     ebc:	30 91 bb 01 	lds	r19, 0x01BB	; 0x8001bb <_timer0_ovf_cnt+0x1>
     ec0:	40 91 bc 01 	lds	r20, 0x01BC	; 0x8001bc <_timer0_ovf_cnt+0x2>
     ec4:	50 91 bd 01 	lds	r21, 0x01BD	; 0x8001bd <_timer0_ovf_cnt+0x3>
     ec8:	60 91 be 01 	lds	r22, 0x01BE	; 0x8001be <_timer0_ovf_cnt+0x4>
     ecc:	70 91 bf 01 	lds	r23, 0x01BF	; 0x8001bf <_timer0_ovf_cnt+0x5>
     ed0:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <_timer0_ovf_cnt+0x6>
     ed4:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <_timer0_ovf_cnt+0x7>
     ed8:	a1 e0       	ldi	r26, 0x01	; 1
     eda:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <__adddi3_s8>
     ede:	20 93 ba 01 	sts	0x01BA, r18	; 0x8001ba <_timer0_ovf_cnt>
     ee2:	30 93 bb 01 	sts	0x01BB, r19	; 0x8001bb <_timer0_ovf_cnt+0x1>
     ee6:	40 93 bc 01 	sts	0x01BC, r20	; 0x8001bc <_timer0_ovf_cnt+0x2>
     eea:	50 93 bd 01 	sts	0x01BD, r21	; 0x8001bd <_timer0_ovf_cnt+0x3>
     eee:	60 93 be 01 	sts	0x01BE, r22	; 0x8001be <_timer0_ovf_cnt+0x4>
     ef2:	70 93 bf 01 	sts	0x01BF, r23	; 0x8001bf <_timer0_ovf_cnt+0x5>
     ef6:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <_timer0_ovf_cnt+0x6>
     efa:	90 93 c1 01 	sts	0x01C1, r25	; 0x8001c1 <_timer0_ovf_cnt+0x7>
     efe:	af 91       	pop	r26
     f00:	9f 91       	pop	r25
     f02:	8f 91       	pop	r24
     f04:	7f 91       	pop	r23
     f06:	6f 91       	pop	r22
     f08:	5f 91       	pop	r21
     f0a:	4f 91       	pop	r20
     f0c:	3f 91       	pop	r19
     f0e:	2f 91       	pop	r18
     f10:	0f 90       	pop	r0
     f12:	0f be       	out	0x3f, r0	; 63
     f14:	0f 90       	pop	r0
     f16:	1f 90       	pop	r1
     f18:	18 95       	reti

00000f1a <_timer1_init>:
uint64_t _millis1(void)
{
	uint16_t tmr = TCNT1L;
	tmr |= (TCNT1H << 8);
	return _TICK_MS_1*(tmr + ( _tmr_overflow_count << 16));
}
     f1a:	e0 e8       	ldi	r30, 0x80	; 128
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	80 81       	ld	r24, Z
     f20:	80 6a       	ori	r24, 0xA0	; 160
     f22:	80 83       	st	Z, r24
     f24:	80 81       	ld	r24, Z
     f26:	82 60       	ori	r24, 0x02	; 2
     f28:	80 83       	st	Z, r24
     f2a:	8f ef       	ldi	r24, 0xFF	; 255
     f2c:	9f ef       	ldi	r25, 0xFF	; 255
     f2e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     f32:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     f36:	e1 e8       	ldi	r30, 0x81	; 129
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	80 81       	ld	r24, Z
     f3c:	88 61       	ori	r24, 0x18	; 24
     f3e:	80 83       	st	Z, r24
     f40:	80 81       	ld	r24, Z
     f42:	81 60       	ori	r24, 0x01	; 1
     f44:	80 83       	st	Z, r24
     f46:	ef e6       	ldi	r30, 0x6F	; 111
     f48:	f0 e0       	ldi	r31, 0x00	; 0
     f4a:	80 81       	ld	r24, Z
     f4c:	81 60       	ori	r24, 0x01	; 1
     f4e:	80 83       	st	Z, r24
     f50:	78 94       	sei
     f52:	08 95       	ret

00000f54 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     f54:	1f 92       	push	r1
     f56:	0f 92       	push	r0
     f58:	0f b6       	in	r0, 0x3f	; 63
     f5a:	0f 92       	push	r0
     f5c:	11 24       	eor	r1, r1
     f5e:	af 92       	push	r10
     f60:	bf 92       	push	r11
     f62:	cf 92       	push	r12
     f64:	df 92       	push	r13
     f66:	ef 92       	push	r14
     f68:	ff 92       	push	r15
     f6a:	0f 93       	push	r16
     f6c:	1f 93       	push	r17
     f6e:	2f 93       	push	r18
     f70:	3f 93       	push	r19
     f72:	4f 93       	push	r20
     f74:	5f 93       	push	r21
     f76:	6f 93       	push	r22
     f78:	7f 93       	push	r23
     f7a:	8f 93       	push	r24
     f7c:	9f 93       	push	r25
     f7e:	af 93       	push	r26
     f80:	bf 93       	push	r27
     f82:	ef 93       	push	r30
     f84:	ff 93       	push	r31
	_tmr_overflow_count++;
     f86:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <_tmr_overflow_count>
     f8a:	30 91 c5 01 	lds	r19, 0x01C5	; 0x8001c5 <_tmr_overflow_count+0x1>
     f8e:	40 91 c6 01 	lds	r20, 0x01C6	; 0x8001c6 <_tmr_overflow_count+0x2>
     f92:	50 91 c7 01 	lds	r21, 0x01C7	; 0x8001c7 <_tmr_overflow_count+0x3>
     f96:	60 91 c8 01 	lds	r22, 0x01C8	; 0x8001c8 <_tmr_overflow_count+0x4>
     f9a:	70 91 c9 01 	lds	r23, 0x01C9	; 0x8001c9 <_tmr_overflow_count+0x5>
     f9e:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <_tmr_overflow_count+0x6>
     fa2:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <_tmr_overflow_count+0x7>
     fa6:	a1 e0       	ldi	r26, 0x01	; 1
     fa8:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <__adddi3_s8>
     fac:	20 93 c4 01 	sts	0x01C4, r18	; 0x8001c4 <_tmr_overflow_count>
     fb0:	30 93 c5 01 	sts	0x01C5, r19	; 0x8001c5 <_tmr_overflow_count+0x1>
     fb4:	40 93 c6 01 	sts	0x01C6, r20	; 0x8001c6 <_tmr_overflow_count+0x2>
     fb8:	50 93 c7 01 	sts	0x01C7, r21	; 0x8001c7 <_tmr_overflow_count+0x3>
     fbc:	60 93 c8 01 	sts	0x01C8, r22	; 0x8001c8 <_tmr_overflow_count+0x4>
     fc0:	70 93 c9 01 	sts	0x01C9, r23	; 0x8001c9 <_tmr_overflow_count+0x5>
     fc4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <_tmr_overflow_count+0x6>
     fc8:	90 93 cb 01 	sts	0x01CB, r25	; 0x8001cb <_tmr_overflow_count+0x7>
	if(_tmr_overflow_count % 6 == 0)
     fcc:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <_tmr_overflow_count>
     fd0:	30 91 c5 01 	lds	r19, 0x01C5	; 0x8001c5 <_tmr_overflow_count+0x1>
     fd4:	40 91 c6 01 	lds	r20, 0x01C6	; 0x8001c6 <_tmr_overflow_count+0x2>
     fd8:	50 91 c7 01 	lds	r21, 0x01C7	; 0x8001c7 <_tmr_overflow_count+0x3>
     fdc:	60 91 c8 01 	lds	r22, 0x01C8	; 0x8001c8 <_tmr_overflow_count+0x4>
     fe0:	70 91 c9 01 	lds	r23, 0x01C9	; 0x8001c9 <_tmr_overflow_count+0x5>
     fe4:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <_tmr_overflow_count+0x6>
     fe8:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <_tmr_overflow_count+0x7>
     fec:	0f 2e       	mov	r0, r31
     fee:	f6 e0       	ldi	r31, 0x06	; 6
     ff0:	af 2e       	mov	r10, r31
     ff2:	f0 2d       	mov	r31, r0
     ff4:	b1 2c       	mov	r11, r1
     ff6:	c1 2c       	mov	r12, r1
     ff8:	d1 2c       	mov	r13, r1
     ffa:	e1 2c       	mov	r14, r1
     ffc:	f1 2c       	mov	r15, r1
     ffe:	00 e0       	ldi	r16, 0x00	; 0
    1000:	10 e0       	ldi	r17, 0x00	; 0
    1002:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <__umoddi3>
    1006:	a0 e0       	ldi	r26, 0x00	; 0
    1008:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <__cmpdi2_s8>
    100c:	29 f4       	brne	.+10     	; 0x1018 <__vector_13+0xc4>
	{
		_controler_flag_A = 1;
    100e:	81 e0       	ldi	r24, 0x01	; 1
    1010:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <_controler_flag_A>
		_controler_flag_B = 1;
    1014:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <_controler_flag_B>
	}
	if (_tmr_overflow_count%2440 == 0 )
    1018:	20 91 c4 01 	lds	r18, 0x01C4	; 0x8001c4 <_tmr_overflow_count>
    101c:	30 91 c5 01 	lds	r19, 0x01C5	; 0x8001c5 <_tmr_overflow_count+0x1>
    1020:	40 91 c6 01 	lds	r20, 0x01C6	; 0x8001c6 <_tmr_overflow_count+0x2>
    1024:	50 91 c7 01 	lds	r21, 0x01C7	; 0x8001c7 <_tmr_overflow_count+0x3>
    1028:	60 91 c8 01 	lds	r22, 0x01C8	; 0x8001c8 <_tmr_overflow_count+0x4>
    102c:	70 91 c9 01 	lds	r23, 0x01C9	; 0x8001c9 <_tmr_overflow_count+0x5>
    1030:	80 91 ca 01 	lds	r24, 0x01CA	; 0x8001ca <_tmr_overflow_count+0x6>
    1034:	90 91 cb 01 	lds	r25, 0x01CB	; 0x8001cb <_tmr_overflow_count+0x7>
    1038:	0f 2e       	mov	r0, r31
    103a:	f8 e8       	ldi	r31, 0x88	; 136
    103c:	af 2e       	mov	r10, r31
    103e:	f0 2d       	mov	r31, r0
    1040:	0f 2e       	mov	r0, r31
    1042:	f9 e0       	ldi	r31, 0x09	; 9
    1044:	bf 2e       	mov	r11, r31
    1046:	f0 2d       	mov	r31, r0
    1048:	c1 2c       	mov	r12, r1
    104a:	d1 2c       	mov	r13, r1
    104c:	e1 2c       	mov	r14, r1
    104e:	f1 2c       	mov	r15, r1
    1050:	00 e0       	ldi	r16, 0x00	; 0
    1052:	10 e0       	ldi	r17, 0x00	; 0
    1054:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <__umoddi3>
    1058:	a0 e0       	ldi	r26, 0x00	; 0
    105a:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <__cmpdi2_s8>
    105e:	79 f4       	brne	.+30     	; 0x107e <__vector_13+0x12a>
	{
		printf("<btr>%d</btr>\n", __read_btr__);
    1060:	82 e0       	ldi	r24, 0x02	; 2
    1062:	0e 94 50 02 	call	0x4a0	; 0x4a0 <_adc_read>
    1066:	9f 93       	push	r25
    1068:	8f 93       	push	r24
    106a:	85 e2       	ldi	r24, 0x25	; 37
    106c:	91 e0       	ldi	r25, 0x01	; 1
    106e:	9f 93       	push	r25
    1070:	8f 93       	push	r24
    1072:	0e 94 bd 10 	call	0x217a	; 0x217a <printf>
    1076:	0f 90       	pop	r0
    1078:	0f 90       	pop	r0
    107a:	0f 90       	pop	r0
    107c:	0f 90       	pop	r0
	}
    107e:	ff 91       	pop	r31
    1080:	ef 91       	pop	r30
    1082:	bf 91       	pop	r27
    1084:	af 91       	pop	r26
    1086:	9f 91       	pop	r25
    1088:	8f 91       	pop	r24
    108a:	7f 91       	pop	r23
    108c:	6f 91       	pop	r22
    108e:	5f 91       	pop	r21
    1090:	4f 91       	pop	r20
    1092:	3f 91       	pop	r19
    1094:	2f 91       	pop	r18
    1096:	1f 91       	pop	r17
    1098:	0f 91       	pop	r16
    109a:	ff 90       	pop	r15
    109c:	ef 90       	pop	r14
    109e:	df 90       	pop	r13
    10a0:	cf 90       	pop	r12
    10a2:	bf 90       	pop	r11
    10a4:	af 90       	pop	r10
    10a6:	0f 90       	pop	r0
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	0f 90       	pop	r0
    10ac:	1f 90       	pop	r1
    10ae:	18 95       	reti

000010b0 <_timer2_init>:

#include <__timer2__.h>

void _timer2_init(void)
{
	TCCR2A = 0;
    10b0:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	OCR2A = 128;
    10b4:	80 e8       	ldi	r24, 0x80	; 128
    10b6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2B |=(1 << CS22) | (1 << CS21) | (1 << CS20);
    10ba:	e1 eb       	ldi	r30, 0xB1	; 177
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	80 81       	ld	r24, Z
    10c0:	87 60       	ori	r24, 0x07	; 7
    10c2:	80 83       	st	Z, r24
	TIMSK2 |= (0 << OCIE2A) | (0 << TOIE2);
    10c4:	e0 e7       	ldi	r30, 0x70	; 112
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	80 81       	ld	r24, Z
    10ca:	80 83       	st	Z, r24
    10cc:	08 95       	ret

000010ce <_uart_put_char>:
static int _uart_put_char(char input, FILE *stream)
{
	//if (input == '\n')
	//_uart_put_char('\r', stream);
	
	while(!((UCSR0A >> UDRE0) & 1)); // wait until buffer is ready for data
    10ce:	e0 ec       	ldi	r30, 0xC0	; 192
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	90 81       	ld	r25, Z
    10d4:	95 ff       	sbrs	r25, 5
    10d6:	fd cf       	rjmp	.-6      	; 0x10d2 <_uart_put_char+0x4>
	UDR0 = input;
    10d8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	08 95       	ret

000010e2 <_uart_get_char>:

static int _uart_get_char(FILE *stream)
{
	uint8_t c;
	while(!(UCSR0A&(1<<RXC0)));
    10e2:	e0 ec       	ldi	r30, 0xC0	; 192
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	80 81       	ld	r24, Z
    10e8:	88 23       	and	r24, r24
    10ea:	ec f7       	brge	.-6      	; 0x10e6 <_uart_get_char+0x4>
	c = UDR0;
    10ec:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//_uart_put_char(c,stream); // for debug only
	return c;
}
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	08 95       	ret

000010f4 <usart_init>:

void usart_init(void)
{
	UBRR0H = (uint8_t) (BRC >> 8); // baud
    10f4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t) BRC; // baud
    10f8:	80 e1       	ldi	r24, 0x10	; 16
    10fa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	UCSR0B = (1 << TXEN0) | (1 << RXEN0); // enable rx and tx
    10fe:	88 e1       	ldi	r24, 0x18	; 24
    1100:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // clock
    1104:	86 e0       	ldi	r24, 0x06	; 6
    1106:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	//UCSR0A |= (1 << U2X0); // double speed
	
	stdin = stdout = &uart_str; // link stdin and stdout to uart
    110a:	ec ec       	ldi	r30, 0xCC	; 204
    110c:	f1 e0       	ldi	r31, 0x01	; 1
    110e:	80 e0       	ldi	r24, 0x00	; 0
    1110:	91 e0       	ldi	r25, 0x01	; 1
    1112:	93 83       	std	Z+3, r25	; 0x03
    1114:	82 83       	std	Z+2, r24	; 0x02
    1116:	91 83       	std	Z+1, r25	; 0x01
    1118:	80 83       	st	Z, r24
    111a:	08 95       	ret

0000111c <board_init>:
	 * specific board configuration, found in conf_board.h.
	 */
	
	// IO init
	
	DDRB = 0xFF;
    111c:	8f ef       	ldi	r24, 0xFF	; 255
    111e:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b01100010;
    1120:	82 e6       	ldi	r24, 0x62	; 98
    1122:	8a b9       	out	0x0a, r24	; 10
	
	
	usart_init();
    1124:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <usart_init>
	_adc_init();
    1128:	0e 94 44 02 	call	0x488	; 0x488 <_adc_init>
	_timer1_init();
    112c:	0e 94 8d 07 	call	0xf1a	; 0xf1a <_timer1_init>
	_timer0_init();
    1130:	0e 94 d2 06 	call	0xda4	; 0xda4 <_timer0_init>
	_timer2_init();
    1134:	0e 94 58 08 	call	0x10b0	; 0x10b0 <_timer2_init>
	_interrupt0_enable(_INT_RISING_EDGE);
    1138:	83 e0       	ldi	r24, 0x03	; 3
    113a:	0e 94 b2 03 	call	0x764	; 0x764 <_interrupt0_enable>
	_interrupt1_enable(_INT_RISING_EDGE);
    113e:	83 e0       	ldi	r24, 0x03	; 3
    1140:	0e 94 ba 03 	call	0x774	; 0x774 <_interrupt1_enable>
    1144:	08 95       	ret

00001146 <_command_other>:
	_set_ref(MA,val);
	_set_ref(MB,val);
}

void _command_other(int16_t val)
{
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	ec 01       	movw	r28, r24
	_set_speed(MA,val);
    114c:	bc 01       	movw	r22, r24
    114e:	81 e0       	ldi	r24, 0x01	; 1
    1150:	0e 94 b8 02 	call	0x570	; 0x570 <_set_speed>
	_set_speed(MB,val);
    1154:	be 01       	movw	r22, r28
    1156:	82 e0       	ldi	r24, 0x02	; 2
    1158:	0e 94 b8 02 	call	0x570	; 0x570 <_set_speed>
}
    115c:	df 91       	pop	r29
    115e:	cf 91       	pop	r28
    1160:	08 95       	ret

00001162 <main>:
int main (void)
{
	cli();
    1162:	f8 94       	cli
	board_init();
    1164:	0e 94 8e 08 	call	0x111c	; 0x111c <board_init>
	sei();
    1168:	78 94       	sei
	_init_dc_control();
    116a:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <_init_dc_control>
	int i = 0;
	_set_ref(MA,6);
    116e:	40 e0       	ldi	r20, 0x00	; 0
    1170:	50 e0       	ldi	r21, 0x00	; 0
    1172:	60 ec       	ldi	r22, 0xC0	; 192
    1174:	70 e4       	ldi	r23, 0x40	; 64
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_set_ref>
	_set_ref(MB,6);
    117c:	40 e0       	ldi	r20, 0x00	; 0
    117e:	50 e0       	ldi	r21, 0x00	; 0
    1180:	60 ec       	ldi	r22, 0xC0	; 192
    1182:	70 e4       	ldi	r23, 0x40	; 64
    1184:	82 e0       	ldi	r24, 0x02	; 2
    1186:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_set_ref>
{
	cli();
	board_init();
	sei();
	_init_dc_control();
	int i = 0;
    118a:	c0 e0       	ldi	r28, 0x00	; 0
    118c:	d0 e0       	ldi	r29, 0x00	; 0
			}
		}
		_dc_controller_loop();
		if(i == 10)
		{
			printf("%1.2f,%1.2f\n", _omega_from_encA(), _omega_from_encB());
    118e:	04 e3       	ldi	r16, 0x34	; 52
    1190:	11 e0       	ldi	r17, 0x01	; 1
	int i = 0;
	_set_ref(MA,6);
	_set_ref(MB,6);
	while(1)
	{
		i++;
    1192:	21 96       	adiw	r28, 0x01	; 1
		if(__read_sw(SW1))
    1194:	33 9b       	sbis	0x06, 3	; 6
    1196:	05 c0       	rjmp	.+10     	; 0x11a2 <main+0x40>
		{
			_command_other(0);
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	0e 94 a3 08 	call	0x1146	; 0x1146 <_command_other>
			while(1)
			{
				if(~__read_sw(SW1))
    11a0:	86 b1       	in	r24, 0x06	; 6
				{
					break;
				}
			}
		}
		_dc_controller_loop();
    11a2:	0e 94 9d 03 	call	0x73a	; 0x73a <_dc_controller_loop>
		if(i == 10)
    11a6:	ca 30       	cpi	r28, 0x0A	; 10
    11a8:	d1 05       	cpc	r29, r1
    11aa:	f1 f4       	brne	.+60     	; 0x11e8 <main+0x86>
		{
			printf("%1.2f,%1.2f\n", _omega_from_encA(), _omega_from_encB());
    11ac:	0e 94 e7 05 	call	0xbce	; 0xbce <_omega_from_encB>
    11b0:	c6 2f       	mov	r28, r22
    11b2:	d7 2f       	mov	r29, r23
    11b4:	f8 2e       	mov	r15, r24
    11b6:	e9 2e       	mov	r14, r25
    11b8:	0e 94 46 05 	call	0xa8c	; 0xa8c <_omega_from_encA>
    11bc:	ef 92       	push	r14
    11be:	ff 92       	push	r15
    11c0:	df 93       	push	r29
    11c2:	cf 93       	push	r28
    11c4:	9f 93       	push	r25
    11c6:	8f 93       	push	r24
    11c8:	7f 93       	push	r23
    11ca:	6f 93       	push	r22
    11cc:	1f 93       	push	r17
    11ce:	0f 93       	push	r16
    11d0:	0e 94 bd 10 	call	0x217a	; 0x217a <printf>
    11d4:	8d b7       	in	r24, 0x3d	; 61
    11d6:	9e b7       	in	r25, 0x3e	; 62
    11d8:	0a 96       	adiw	r24, 0x0a	; 10
    11da:	0f b6       	in	r0, 0x3f	; 63
    11dc:	f8 94       	cli
    11de:	9e bf       	out	0x3e, r25	; 62
    11e0:	0f be       	out	0x3f, r0	; 63
    11e2:	8d bf       	out	0x3d, r24	; 61
			i = 0;
    11e4:	c0 e0       	ldi	r28, 0x00	; 0
    11e6:	d0 e0       	ldi	r29, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    11e8:	9f ef       	ldi	r25, 0xFF	; 255
    11ea:	21 ee       	ldi	r18, 0xE1	; 225
    11ec:	84 e0       	ldi	r24, 0x04	; 4
    11ee:	91 50       	subi	r25, 0x01	; 1
    11f0:	20 40       	sbci	r18, 0x00	; 0
    11f2:	80 40       	sbci	r24, 0x00	; 0
    11f4:	e1 f7       	brne	.-8      	; 0x11ee <main+0x8c>
    11f6:	00 c0       	rjmp	.+0      	; 0x11f8 <main+0x96>
    11f8:	00 00       	nop
    11fa:	cb cf       	rjmp	.-106    	; 0x1192 <main+0x30>

000011fc <__subsf3>:
    11fc:	50 58       	subi	r21, 0x80	; 128

000011fe <__addsf3>:
    11fe:	bb 27       	eor	r27, r27
    1200:	aa 27       	eor	r26, r26
    1202:	0e 94 16 09 	call	0x122c	; 0x122c <__addsf3x>
    1206:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__fp_round>
    120a:	0e 94 83 0a 	call	0x1506	; 0x1506 <__fp_pscA>
    120e:	38 f0       	brcs	.+14     	; 0x121e <__addsf3+0x20>
    1210:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__fp_pscB>
    1214:	20 f0       	brcs	.+8      	; 0x121e <__addsf3+0x20>
    1216:	39 f4       	brne	.+14     	; 0x1226 <__addsf3+0x28>
    1218:	9f 3f       	cpi	r25, 0xFF	; 255
    121a:	19 f4       	brne	.+6      	; 0x1222 <__addsf3+0x24>
    121c:	26 f4       	brtc	.+8      	; 0x1226 <__addsf3+0x28>
    121e:	0c 94 80 0a 	jmp	0x1500	; 0x1500 <__fp_nan>
    1222:	0e f4       	brtc	.+2      	; 0x1226 <__addsf3+0x28>
    1224:	e0 95       	com	r30
    1226:	e7 fb       	bst	r30, 7
    1228:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_inf>

0000122c <__addsf3x>:
    122c:	e9 2f       	mov	r30, r25
    122e:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__fp_split3>
    1232:	58 f3       	brcs	.-42     	; 0x120a <__addsf3+0xc>
    1234:	ba 17       	cp	r27, r26
    1236:	62 07       	cpc	r22, r18
    1238:	73 07       	cpc	r23, r19
    123a:	84 07       	cpc	r24, r20
    123c:	95 07       	cpc	r25, r21
    123e:	20 f0       	brcs	.+8      	; 0x1248 <__addsf3x+0x1c>
    1240:	79 f4       	brne	.+30     	; 0x1260 <__addsf3x+0x34>
    1242:	a6 f5       	brtc	.+104    	; 0x12ac <__addsf3x+0x80>
    1244:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__fp_zero>
    1248:	0e f4       	brtc	.+2      	; 0x124c <__addsf3x+0x20>
    124a:	e0 95       	com	r30
    124c:	0b 2e       	mov	r0, r27
    124e:	ba 2f       	mov	r27, r26
    1250:	a0 2d       	mov	r26, r0
    1252:	0b 01       	movw	r0, r22
    1254:	b9 01       	movw	r22, r18
    1256:	90 01       	movw	r18, r0
    1258:	0c 01       	movw	r0, r24
    125a:	ca 01       	movw	r24, r20
    125c:	a0 01       	movw	r20, r0
    125e:	11 24       	eor	r1, r1
    1260:	ff 27       	eor	r31, r31
    1262:	59 1b       	sub	r21, r25
    1264:	99 f0       	breq	.+38     	; 0x128c <__addsf3x+0x60>
    1266:	59 3f       	cpi	r21, 0xF9	; 249
    1268:	50 f4       	brcc	.+20     	; 0x127e <__addsf3x+0x52>
    126a:	50 3e       	cpi	r21, 0xE0	; 224
    126c:	68 f1       	brcs	.+90     	; 0x12c8 <__addsf3x+0x9c>
    126e:	1a 16       	cp	r1, r26
    1270:	f0 40       	sbci	r31, 0x00	; 0
    1272:	a2 2f       	mov	r26, r18
    1274:	23 2f       	mov	r18, r19
    1276:	34 2f       	mov	r19, r20
    1278:	44 27       	eor	r20, r20
    127a:	58 5f       	subi	r21, 0xF8	; 248
    127c:	f3 cf       	rjmp	.-26     	; 0x1264 <__addsf3x+0x38>
    127e:	46 95       	lsr	r20
    1280:	37 95       	ror	r19
    1282:	27 95       	ror	r18
    1284:	a7 95       	ror	r26
    1286:	f0 40       	sbci	r31, 0x00	; 0
    1288:	53 95       	inc	r21
    128a:	c9 f7       	brne	.-14     	; 0x127e <__addsf3x+0x52>
    128c:	7e f4       	brtc	.+30     	; 0x12ac <__addsf3x+0x80>
    128e:	1f 16       	cp	r1, r31
    1290:	ba 0b       	sbc	r27, r26
    1292:	62 0b       	sbc	r22, r18
    1294:	73 0b       	sbc	r23, r19
    1296:	84 0b       	sbc	r24, r20
    1298:	ba f0       	brmi	.+46     	; 0x12c8 <__addsf3x+0x9c>
    129a:	91 50       	subi	r25, 0x01	; 1
    129c:	a1 f0       	breq	.+40     	; 0x12c6 <__addsf3x+0x9a>
    129e:	ff 0f       	add	r31, r31
    12a0:	bb 1f       	adc	r27, r27
    12a2:	66 1f       	adc	r22, r22
    12a4:	77 1f       	adc	r23, r23
    12a6:	88 1f       	adc	r24, r24
    12a8:	c2 f7       	brpl	.-16     	; 0x129a <__addsf3x+0x6e>
    12aa:	0e c0       	rjmp	.+28     	; 0x12c8 <__addsf3x+0x9c>
    12ac:	ba 0f       	add	r27, r26
    12ae:	62 1f       	adc	r22, r18
    12b0:	73 1f       	adc	r23, r19
    12b2:	84 1f       	adc	r24, r20
    12b4:	48 f4       	brcc	.+18     	; 0x12c8 <__addsf3x+0x9c>
    12b6:	87 95       	ror	r24
    12b8:	77 95       	ror	r23
    12ba:	67 95       	ror	r22
    12bc:	b7 95       	ror	r27
    12be:	f7 95       	ror	r31
    12c0:	9e 3f       	cpi	r25, 0xFE	; 254
    12c2:	08 f0       	brcs	.+2      	; 0x12c6 <__addsf3x+0x9a>
    12c4:	b0 cf       	rjmp	.-160    	; 0x1226 <__addsf3+0x28>
    12c6:	93 95       	inc	r25
    12c8:	88 0f       	add	r24, r24
    12ca:	08 f0       	brcs	.+2      	; 0x12ce <__addsf3x+0xa2>
    12cc:	99 27       	eor	r25, r25
    12ce:	ee 0f       	add	r30, r30
    12d0:	97 95       	ror	r25
    12d2:	87 95       	ror	r24
    12d4:	08 95       	ret

000012d6 <__cmpsf2>:
    12d6:	0e 94 56 0a 	call	0x14ac	; 0x14ac <__fp_cmp>
    12da:	08 f4       	brcc	.+2      	; 0x12de <__cmpsf2+0x8>
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	08 95       	ret

000012e0 <__divsf3>:
    12e0:	0e 94 84 09 	call	0x1308	; 0x1308 <__divsf3x>
    12e4:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__fp_round>
    12e8:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__fp_pscB>
    12ec:	58 f0       	brcs	.+22     	; 0x1304 <__divsf3+0x24>
    12ee:	0e 94 83 0a 	call	0x1506	; 0x1506 <__fp_pscA>
    12f2:	40 f0       	brcs	.+16     	; 0x1304 <__divsf3+0x24>
    12f4:	29 f4       	brne	.+10     	; 0x1300 <__divsf3+0x20>
    12f6:	5f 3f       	cpi	r21, 0xFF	; 255
    12f8:	29 f0       	breq	.+10     	; 0x1304 <__divsf3+0x24>
    12fa:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_inf>
    12fe:	51 11       	cpse	r21, r1
    1300:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_szero>
    1304:	0c 94 80 0a 	jmp	0x1500	; 0x1500 <__fp_nan>

00001308 <__divsf3x>:
    1308:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__fp_split3>
    130c:	68 f3       	brcs	.-38     	; 0x12e8 <__divsf3+0x8>

0000130e <__divsf3_pse>:
    130e:	99 23       	and	r25, r25
    1310:	b1 f3       	breq	.-20     	; 0x12fe <__divsf3+0x1e>
    1312:	55 23       	and	r21, r21
    1314:	91 f3       	breq	.-28     	; 0x12fa <__divsf3+0x1a>
    1316:	95 1b       	sub	r25, r21
    1318:	55 0b       	sbc	r21, r21
    131a:	bb 27       	eor	r27, r27
    131c:	aa 27       	eor	r26, r26
    131e:	62 17       	cp	r22, r18
    1320:	73 07       	cpc	r23, r19
    1322:	84 07       	cpc	r24, r20
    1324:	38 f0       	brcs	.+14     	; 0x1334 <__divsf3_pse+0x26>
    1326:	9f 5f       	subi	r25, 0xFF	; 255
    1328:	5f 4f       	sbci	r21, 0xFF	; 255
    132a:	22 0f       	add	r18, r18
    132c:	33 1f       	adc	r19, r19
    132e:	44 1f       	adc	r20, r20
    1330:	aa 1f       	adc	r26, r26
    1332:	a9 f3       	breq	.-22     	; 0x131e <__divsf3_pse+0x10>
    1334:	35 d0       	rcall	.+106    	; 0x13a0 <__divsf3_pse+0x92>
    1336:	0e 2e       	mov	r0, r30
    1338:	3a f0       	brmi	.+14     	; 0x1348 <__divsf3_pse+0x3a>
    133a:	e0 e8       	ldi	r30, 0x80	; 128
    133c:	32 d0       	rcall	.+100    	; 0x13a2 <__divsf3_pse+0x94>
    133e:	91 50       	subi	r25, 0x01	; 1
    1340:	50 40       	sbci	r21, 0x00	; 0
    1342:	e6 95       	lsr	r30
    1344:	00 1c       	adc	r0, r0
    1346:	ca f7       	brpl	.-14     	; 0x133a <__divsf3_pse+0x2c>
    1348:	2b d0       	rcall	.+86     	; 0x13a0 <__divsf3_pse+0x92>
    134a:	fe 2f       	mov	r31, r30
    134c:	29 d0       	rcall	.+82     	; 0x13a0 <__divsf3_pse+0x92>
    134e:	66 0f       	add	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	bb 1f       	adc	r27, r27
    1356:	26 17       	cp	r18, r22
    1358:	37 07       	cpc	r19, r23
    135a:	48 07       	cpc	r20, r24
    135c:	ab 07       	cpc	r26, r27
    135e:	b0 e8       	ldi	r27, 0x80	; 128
    1360:	09 f0       	breq	.+2      	; 0x1364 <__divsf3_pse+0x56>
    1362:	bb 0b       	sbc	r27, r27
    1364:	80 2d       	mov	r24, r0
    1366:	bf 01       	movw	r22, r30
    1368:	ff 27       	eor	r31, r31
    136a:	93 58       	subi	r25, 0x83	; 131
    136c:	5f 4f       	sbci	r21, 0xFF	; 255
    136e:	3a f0       	brmi	.+14     	; 0x137e <__divsf3_pse+0x70>
    1370:	9e 3f       	cpi	r25, 0xFE	; 254
    1372:	51 05       	cpc	r21, r1
    1374:	78 f0       	brcs	.+30     	; 0x1394 <__divsf3_pse+0x86>
    1376:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_inf>
    137a:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_szero>
    137e:	5f 3f       	cpi	r21, 0xFF	; 255
    1380:	e4 f3       	brlt	.-8      	; 0x137a <__divsf3_pse+0x6c>
    1382:	98 3e       	cpi	r25, 0xE8	; 232
    1384:	d4 f3       	brlt	.-12     	; 0x137a <__divsf3_pse+0x6c>
    1386:	86 95       	lsr	r24
    1388:	77 95       	ror	r23
    138a:	67 95       	ror	r22
    138c:	b7 95       	ror	r27
    138e:	f7 95       	ror	r31
    1390:	9f 5f       	subi	r25, 0xFF	; 255
    1392:	c9 f7       	brne	.-14     	; 0x1386 <__divsf3_pse+0x78>
    1394:	88 0f       	add	r24, r24
    1396:	91 1d       	adc	r25, r1
    1398:	96 95       	lsr	r25
    139a:	87 95       	ror	r24
    139c:	97 f9       	bld	r25, 7
    139e:	08 95       	ret
    13a0:	e1 e0       	ldi	r30, 0x01	; 1
    13a2:	66 0f       	add	r22, r22
    13a4:	77 1f       	adc	r23, r23
    13a6:	88 1f       	adc	r24, r24
    13a8:	bb 1f       	adc	r27, r27
    13aa:	62 17       	cp	r22, r18
    13ac:	73 07       	cpc	r23, r19
    13ae:	84 07       	cpc	r24, r20
    13b0:	ba 07       	cpc	r27, r26
    13b2:	20 f0       	brcs	.+8      	; 0x13bc <__divsf3_pse+0xae>
    13b4:	62 1b       	sub	r22, r18
    13b6:	73 0b       	sbc	r23, r19
    13b8:	84 0b       	sbc	r24, r20
    13ba:	ba 0b       	sbc	r27, r26
    13bc:	ee 1f       	adc	r30, r30
    13be:	88 f7       	brcc	.-30     	; 0x13a2 <__divsf3_pse+0x94>
    13c0:	e0 95       	com	r30
    13c2:	08 95       	ret

000013c4 <__fixsfsi>:
    13c4:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__fixunssfsi>
    13c8:	68 94       	set
    13ca:	b1 11       	cpse	r27, r1
    13cc:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_szero>
    13d0:	08 95       	ret

000013d2 <__fixunssfsi>:
    13d2:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__fp_splitA>
    13d6:	88 f0       	brcs	.+34     	; 0x13fa <__fixunssfsi+0x28>
    13d8:	9f 57       	subi	r25, 0x7F	; 127
    13da:	98 f0       	brcs	.+38     	; 0x1402 <__fixunssfsi+0x30>
    13dc:	b9 2f       	mov	r27, r25
    13de:	99 27       	eor	r25, r25
    13e0:	b7 51       	subi	r27, 0x17	; 23
    13e2:	b0 f0       	brcs	.+44     	; 0x1410 <__fixunssfsi+0x3e>
    13e4:	e1 f0       	breq	.+56     	; 0x141e <__fixunssfsi+0x4c>
    13e6:	66 0f       	add	r22, r22
    13e8:	77 1f       	adc	r23, r23
    13ea:	88 1f       	adc	r24, r24
    13ec:	99 1f       	adc	r25, r25
    13ee:	1a f0       	brmi	.+6      	; 0x13f6 <__fixunssfsi+0x24>
    13f0:	ba 95       	dec	r27
    13f2:	c9 f7       	brne	.-14     	; 0x13e6 <__fixunssfsi+0x14>
    13f4:	14 c0       	rjmp	.+40     	; 0x141e <__fixunssfsi+0x4c>
    13f6:	b1 30       	cpi	r27, 0x01	; 1
    13f8:	91 f0       	breq	.+36     	; 0x141e <__fixunssfsi+0x4c>
    13fa:	0e 94 c4 0a 	call	0x1588	; 0x1588 <__fp_zero>
    13fe:	b1 e0       	ldi	r27, 0x01	; 1
    1400:	08 95       	ret
    1402:	0c 94 c4 0a 	jmp	0x1588	; 0x1588 <__fp_zero>
    1406:	67 2f       	mov	r22, r23
    1408:	78 2f       	mov	r23, r24
    140a:	88 27       	eor	r24, r24
    140c:	b8 5f       	subi	r27, 0xF8	; 248
    140e:	39 f0       	breq	.+14     	; 0x141e <__fixunssfsi+0x4c>
    1410:	b9 3f       	cpi	r27, 0xF9	; 249
    1412:	cc f3       	brlt	.-14     	; 0x1406 <__fixunssfsi+0x34>
    1414:	86 95       	lsr	r24
    1416:	77 95       	ror	r23
    1418:	67 95       	ror	r22
    141a:	b3 95       	inc	r27
    141c:	d9 f7       	brne	.-10     	; 0x1414 <__fixunssfsi+0x42>
    141e:	3e f4       	brtc	.+14     	; 0x142e <__fixunssfsi+0x5c>
    1420:	90 95       	com	r25
    1422:	80 95       	com	r24
    1424:	70 95       	com	r23
    1426:	61 95       	neg	r22
    1428:	7f 4f       	sbci	r23, 0xFF	; 255
    142a:	8f 4f       	sbci	r24, 0xFF	; 255
    142c:	9f 4f       	sbci	r25, 0xFF	; 255
    142e:	08 95       	ret

00001430 <__floatundisf>:
    1430:	e8 94       	clt

00001432 <__fp_di2sf>:
    1432:	f9 2f       	mov	r31, r25
    1434:	96 eb       	ldi	r25, 0xB6	; 182
    1436:	ff 23       	and	r31, r31
    1438:	81 f0       	breq	.+32     	; 0x145a <__fp_di2sf+0x28>
    143a:	12 16       	cp	r1, r18
    143c:	13 06       	cpc	r1, r19
    143e:	14 06       	cpc	r1, r20
    1440:	44 0b       	sbc	r20, r20
    1442:	93 95       	inc	r25
    1444:	f6 95       	lsr	r31
    1446:	87 95       	ror	r24
    1448:	77 95       	ror	r23
    144a:	67 95       	ror	r22
    144c:	57 95       	ror	r21
    144e:	40 40       	sbci	r20, 0x00	; 0
    1450:	ff 23       	and	r31, r31
    1452:	b9 f7       	brne	.-18     	; 0x1442 <__fp_di2sf+0x10>
    1454:	1b c0       	rjmp	.+54     	; 0x148c <__fp_di2sf+0x5a>
    1456:	99 27       	eor	r25, r25
    1458:	08 95       	ret
    145a:	88 23       	and	r24, r24
    145c:	51 f4       	brne	.+20     	; 0x1472 <__fp_di2sf+0x40>
    145e:	98 50       	subi	r25, 0x08	; 8
    1460:	d2 f7       	brpl	.-12     	; 0x1456 <__fp_di2sf+0x24>
    1462:	87 2b       	or	r24, r23
    1464:	76 2f       	mov	r23, r22
    1466:	65 2f       	mov	r22, r21
    1468:	54 2f       	mov	r21, r20
    146a:	43 2f       	mov	r20, r19
    146c:	32 2f       	mov	r19, r18
    146e:	20 e0       	ldi	r18, 0x00	; 0
    1470:	b1 f3       	breq	.-20     	; 0x145e <__fp_di2sf+0x2c>
    1472:	12 16       	cp	r1, r18
    1474:	13 06       	cpc	r1, r19
    1476:	14 06       	cpc	r1, r20
    1478:	44 0b       	sbc	r20, r20
    147a:	88 23       	and	r24, r24
    147c:	3a f0       	brmi	.+14     	; 0x148c <__fp_di2sf+0x5a>
    147e:	9a 95       	dec	r25
    1480:	44 0f       	add	r20, r20
    1482:	55 1f       	adc	r21, r21
    1484:	66 1f       	adc	r22, r22
    1486:	77 1f       	adc	r23, r23
    1488:	88 1f       	adc	r24, r24
    148a:	ca f7       	brpl	.-14     	; 0x147e <__fp_di2sf+0x4c>
    148c:	55 23       	and	r21, r21
    148e:	4a f4       	brpl	.+18     	; 0x14a2 <__fp_di2sf+0x70>
    1490:	44 0f       	add	r20, r20
    1492:	55 1f       	adc	r21, r21
    1494:	11 f4       	brne	.+4      	; 0x149a <__fp_di2sf+0x68>
    1496:	60 ff       	sbrs	r22, 0
    1498:	04 c0       	rjmp	.+8      	; 0x14a2 <__fp_di2sf+0x70>
    149a:	6f 5f       	subi	r22, 0xFF	; 255
    149c:	7f 4f       	sbci	r23, 0xFF	; 255
    149e:	8f 4f       	sbci	r24, 0xFF	; 255
    14a0:	9f 4f       	sbci	r25, 0xFF	; 255
    14a2:	88 0f       	add	r24, r24
    14a4:	96 95       	lsr	r25
    14a6:	87 95       	ror	r24
    14a8:	97 f9       	bld	r25, 7
    14aa:	08 95       	ret

000014ac <__fp_cmp>:
    14ac:	99 0f       	add	r25, r25
    14ae:	00 08       	sbc	r0, r0
    14b0:	55 0f       	add	r21, r21
    14b2:	aa 0b       	sbc	r26, r26
    14b4:	e0 e8       	ldi	r30, 0x80	; 128
    14b6:	fe ef       	ldi	r31, 0xFE	; 254
    14b8:	16 16       	cp	r1, r22
    14ba:	17 06       	cpc	r1, r23
    14bc:	e8 07       	cpc	r30, r24
    14be:	f9 07       	cpc	r31, r25
    14c0:	c0 f0       	brcs	.+48     	; 0x14f2 <__fp_cmp+0x46>
    14c2:	12 16       	cp	r1, r18
    14c4:	13 06       	cpc	r1, r19
    14c6:	e4 07       	cpc	r30, r20
    14c8:	f5 07       	cpc	r31, r21
    14ca:	98 f0       	brcs	.+38     	; 0x14f2 <__fp_cmp+0x46>
    14cc:	62 1b       	sub	r22, r18
    14ce:	73 0b       	sbc	r23, r19
    14d0:	84 0b       	sbc	r24, r20
    14d2:	95 0b       	sbc	r25, r21
    14d4:	39 f4       	brne	.+14     	; 0x14e4 <__fp_cmp+0x38>
    14d6:	0a 26       	eor	r0, r26
    14d8:	61 f0       	breq	.+24     	; 0x14f2 <__fp_cmp+0x46>
    14da:	23 2b       	or	r18, r19
    14dc:	24 2b       	or	r18, r20
    14de:	25 2b       	or	r18, r21
    14e0:	21 f4       	brne	.+8      	; 0x14ea <__fp_cmp+0x3e>
    14e2:	08 95       	ret
    14e4:	0a 26       	eor	r0, r26
    14e6:	09 f4       	brne	.+2      	; 0x14ea <__fp_cmp+0x3e>
    14e8:	a1 40       	sbci	r26, 0x01	; 1
    14ea:	a6 95       	lsr	r26
    14ec:	8f ef       	ldi	r24, 0xFF	; 255
    14ee:	81 1d       	adc	r24, r1
    14f0:	81 1d       	adc	r24, r1
    14f2:	08 95       	ret

000014f4 <__fp_inf>:
    14f4:	97 f9       	bld	r25, 7
    14f6:	9f 67       	ori	r25, 0x7F	; 127
    14f8:	80 e8       	ldi	r24, 0x80	; 128
    14fa:	70 e0       	ldi	r23, 0x00	; 0
    14fc:	60 e0       	ldi	r22, 0x00	; 0
    14fe:	08 95       	ret

00001500 <__fp_nan>:
    1500:	9f ef       	ldi	r25, 0xFF	; 255
    1502:	80 ec       	ldi	r24, 0xC0	; 192
    1504:	08 95       	ret

00001506 <__fp_pscA>:
    1506:	00 24       	eor	r0, r0
    1508:	0a 94       	dec	r0
    150a:	16 16       	cp	r1, r22
    150c:	17 06       	cpc	r1, r23
    150e:	18 06       	cpc	r1, r24
    1510:	09 06       	cpc	r0, r25
    1512:	08 95       	ret

00001514 <__fp_pscB>:
    1514:	00 24       	eor	r0, r0
    1516:	0a 94       	dec	r0
    1518:	12 16       	cp	r1, r18
    151a:	13 06       	cpc	r1, r19
    151c:	14 06       	cpc	r1, r20
    151e:	05 06       	cpc	r0, r21
    1520:	08 95       	ret

00001522 <__fp_round>:
    1522:	09 2e       	mov	r0, r25
    1524:	03 94       	inc	r0
    1526:	00 0c       	add	r0, r0
    1528:	11 f4       	brne	.+4      	; 0x152e <__fp_round+0xc>
    152a:	88 23       	and	r24, r24
    152c:	52 f0       	brmi	.+20     	; 0x1542 <__fp_round+0x20>
    152e:	bb 0f       	add	r27, r27
    1530:	40 f4       	brcc	.+16     	; 0x1542 <__fp_round+0x20>
    1532:	bf 2b       	or	r27, r31
    1534:	11 f4       	brne	.+4      	; 0x153a <__fp_round+0x18>
    1536:	60 ff       	sbrs	r22, 0
    1538:	04 c0       	rjmp	.+8      	; 0x1542 <__fp_round+0x20>
    153a:	6f 5f       	subi	r22, 0xFF	; 255
    153c:	7f 4f       	sbci	r23, 0xFF	; 255
    153e:	8f 4f       	sbci	r24, 0xFF	; 255
    1540:	9f 4f       	sbci	r25, 0xFF	; 255
    1542:	08 95       	ret

00001544 <__fp_split3>:
    1544:	57 fd       	sbrc	r21, 7
    1546:	90 58       	subi	r25, 0x80	; 128
    1548:	44 0f       	add	r20, r20
    154a:	55 1f       	adc	r21, r21
    154c:	59 f0       	breq	.+22     	; 0x1564 <__fp_splitA+0x10>
    154e:	5f 3f       	cpi	r21, 0xFF	; 255
    1550:	71 f0       	breq	.+28     	; 0x156e <__fp_splitA+0x1a>
    1552:	47 95       	ror	r20

00001554 <__fp_splitA>:
    1554:	88 0f       	add	r24, r24
    1556:	97 fb       	bst	r25, 7
    1558:	99 1f       	adc	r25, r25
    155a:	61 f0       	breq	.+24     	; 0x1574 <__fp_splitA+0x20>
    155c:	9f 3f       	cpi	r25, 0xFF	; 255
    155e:	79 f0       	breq	.+30     	; 0x157e <__fp_splitA+0x2a>
    1560:	87 95       	ror	r24
    1562:	08 95       	ret
    1564:	12 16       	cp	r1, r18
    1566:	13 06       	cpc	r1, r19
    1568:	14 06       	cpc	r1, r20
    156a:	55 1f       	adc	r21, r21
    156c:	f2 cf       	rjmp	.-28     	; 0x1552 <__fp_split3+0xe>
    156e:	46 95       	lsr	r20
    1570:	f1 df       	rcall	.-30     	; 0x1554 <__fp_splitA>
    1572:	08 c0       	rjmp	.+16     	; 0x1584 <__fp_splitA+0x30>
    1574:	16 16       	cp	r1, r22
    1576:	17 06       	cpc	r1, r23
    1578:	18 06       	cpc	r1, r24
    157a:	99 1f       	adc	r25, r25
    157c:	f1 cf       	rjmp	.-30     	; 0x1560 <__fp_splitA+0xc>
    157e:	86 95       	lsr	r24
    1580:	71 05       	cpc	r23, r1
    1582:	61 05       	cpc	r22, r1
    1584:	08 94       	sec
    1586:	08 95       	ret

00001588 <__fp_zero>:
    1588:	e8 94       	clt

0000158a <__fp_szero>:
    158a:	bb 27       	eor	r27, r27
    158c:	66 27       	eor	r22, r22
    158e:	77 27       	eor	r23, r23
    1590:	cb 01       	movw	r24, r22
    1592:	97 f9       	bld	r25, 7
    1594:	08 95       	ret

00001596 <__gesf2>:
    1596:	0e 94 56 0a 	call	0x14ac	; 0x14ac <__fp_cmp>
    159a:	08 f4       	brcc	.+2      	; 0x159e <__gesf2+0x8>
    159c:	8f ef       	ldi	r24, 0xFF	; 255
    159e:	08 95       	ret

000015a0 <__mulsf3>:
    15a0:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__mulsf3x>
    15a4:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__fp_round>
    15a8:	0e 94 83 0a 	call	0x1506	; 0x1506 <__fp_pscA>
    15ac:	38 f0       	brcs	.+14     	; 0x15bc <__mulsf3+0x1c>
    15ae:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__fp_pscB>
    15b2:	20 f0       	brcs	.+8      	; 0x15bc <__mulsf3+0x1c>
    15b4:	95 23       	and	r25, r21
    15b6:	11 f0       	breq	.+4      	; 0x15bc <__mulsf3+0x1c>
    15b8:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_inf>
    15bc:	0c 94 80 0a 	jmp	0x1500	; 0x1500 <__fp_nan>
    15c0:	11 24       	eor	r1, r1
    15c2:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_szero>

000015c6 <__mulsf3x>:
    15c6:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__fp_split3>
    15ca:	70 f3       	brcs	.-36     	; 0x15a8 <__mulsf3+0x8>

000015cc <__mulsf3_pse>:
    15cc:	95 9f       	mul	r25, r21
    15ce:	c1 f3       	breq	.-16     	; 0x15c0 <__mulsf3+0x20>
    15d0:	95 0f       	add	r25, r21
    15d2:	50 e0       	ldi	r21, 0x00	; 0
    15d4:	55 1f       	adc	r21, r21
    15d6:	62 9f       	mul	r22, r18
    15d8:	f0 01       	movw	r30, r0
    15da:	72 9f       	mul	r23, r18
    15dc:	bb 27       	eor	r27, r27
    15de:	f0 0d       	add	r31, r0
    15e0:	b1 1d       	adc	r27, r1
    15e2:	63 9f       	mul	r22, r19
    15e4:	aa 27       	eor	r26, r26
    15e6:	f0 0d       	add	r31, r0
    15e8:	b1 1d       	adc	r27, r1
    15ea:	aa 1f       	adc	r26, r26
    15ec:	64 9f       	mul	r22, r20
    15ee:	66 27       	eor	r22, r22
    15f0:	b0 0d       	add	r27, r0
    15f2:	a1 1d       	adc	r26, r1
    15f4:	66 1f       	adc	r22, r22
    15f6:	82 9f       	mul	r24, r18
    15f8:	22 27       	eor	r18, r18
    15fa:	b0 0d       	add	r27, r0
    15fc:	a1 1d       	adc	r26, r1
    15fe:	62 1f       	adc	r22, r18
    1600:	73 9f       	mul	r23, r19
    1602:	b0 0d       	add	r27, r0
    1604:	a1 1d       	adc	r26, r1
    1606:	62 1f       	adc	r22, r18
    1608:	83 9f       	mul	r24, r19
    160a:	a0 0d       	add	r26, r0
    160c:	61 1d       	adc	r22, r1
    160e:	22 1f       	adc	r18, r18
    1610:	74 9f       	mul	r23, r20
    1612:	33 27       	eor	r19, r19
    1614:	a0 0d       	add	r26, r0
    1616:	61 1d       	adc	r22, r1
    1618:	23 1f       	adc	r18, r19
    161a:	84 9f       	mul	r24, r20
    161c:	60 0d       	add	r22, r0
    161e:	21 1d       	adc	r18, r1
    1620:	82 2f       	mov	r24, r18
    1622:	76 2f       	mov	r23, r22
    1624:	6a 2f       	mov	r22, r26
    1626:	11 24       	eor	r1, r1
    1628:	9f 57       	subi	r25, 0x7F	; 127
    162a:	50 40       	sbci	r21, 0x00	; 0
    162c:	9a f0       	brmi	.+38     	; 0x1654 <__mulsf3_pse+0x88>
    162e:	f1 f0       	breq	.+60     	; 0x166c <__mulsf3_pse+0xa0>
    1630:	88 23       	and	r24, r24
    1632:	4a f0       	brmi	.+18     	; 0x1646 <__mulsf3_pse+0x7a>
    1634:	ee 0f       	add	r30, r30
    1636:	ff 1f       	adc	r31, r31
    1638:	bb 1f       	adc	r27, r27
    163a:	66 1f       	adc	r22, r22
    163c:	77 1f       	adc	r23, r23
    163e:	88 1f       	adc	r24, r24
    1640:	91 50       	subi	r25, 0x01	; 1
    1642:	50 40       	sbci	r21, 0x00	; 0
    1644:	a9 f7       	brne	.-22     	; 0x1630 <__mulsf3_pse+0x64>
    1646:	9e 3f       	cpi	r25, 0xFE	; 254
    1648:	51 05       	cpc	r21, r1
    164a:	80 f0       	brcs	.+32     	; 0x166c <__mulsf3_pse+0xa0>
    164c:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__fp_inf>
    1650:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__fp_szero>
    1654:	5f 3f       	cpi	r21, 0xFF	; 255
    1656:	e4 f3       	brlt	.-8      	; 0x1650 <__mulsf3_pse+0x84>
    1658:	98 3e       	cpi	r25, 0xE8	; 232
    165a:	d4 f3       	brlt	.-12     	; 0x1650 <__mulsf3_pse+0x84>
    165c:	86 95       	lsr	r24
    165e:	77 95       	ror	r23
    1660:	67 95       	ror	r22
    1662:	b7 95       	ror	r27
    1664:	f7 95       	ror	r31
    1666:	e7 95       	ror	r30
    1668:	9f 5f       	subi	r25, 0xFF	; 255
    166a:	c1 f7       	brne	.-16     	; 0x165c <__mulsf3_pse+0x90>
    166c:	fe 2b       	or	r31, r30
    166e:	88 0f       	add	r24, r24
    1670:	91 1d       	adc	r25, r1
    1672:	96 95       	lsr	r25
    1674:	87 95       	ror	r24
    1676:	97 f9       	bld	r25, 7
    1678:	08 95       	ret

0000167a <vfprintf>:
    167a:	a0 e1       	ldi	r26, 0x10	; 16
    167c:	b0 e0       	ldi	r27, 0x00	; 0
    167e:	e3 e4       	ldi	r30, 0x43	; 67
    1680:	fb e0       	ldi	r31, 0x0B	; 11
    1682:	0c 94 19 0f 	jmp	0x1e32	; 0x1e32 <__prologue_saves__>
    1686:	7c 01       	movw	r14, r24
    1688:	1b 01       	movw	r2, r22
    168a:	6a 01       	movw	r12, r20
    168c:	fc 01       	movw	r30, r24
    168e:	17 82       	std	Z+7, r1	; 0x07
    1690:	16 82       	std	Z+6, r1	; 0x06
    1692:	83 81       	ldd	r24, Z+3	; 0x03
    1694:	81 ff       	sbrs	r24, 1
    1696:	44 c3       	rjmp	.+1672   	; 0x1d20 <vfprintf+0x6a6>
    1698:	9e 01       	movw	r18, r28
    169a:	2f 5f       	subi	r18, 0xFF	; 255
    169c:	3f 4f       	sbci	r19, 0xFF	; 255
    169e:	39 01       	movw	r6, r18
    16a0:	f7 01       	movw	r30, r14
    16a2:	93 81       	ldd	r25, Z+3	; 0x03
    16a4:	f1 01       	movw	r30, r2
    16a6:	93 fd       	sbrc	r25, 3
    16a8:	85 91       	lpm	r24, Z+
    16aa:	93 ff       	sbrs	r25, 3
    16ac:	81 91       	ld	r24, Z+
    16ae:	1f 01       	movw	r2, r30
    16b0:	88 23       	and	r24, r24
    16b2:	09 f4       	brne	.+2      	; 0x16b6 <vfprintf+0x3c>
    16b4:	31 c3       	rjmp	.+1634   	; 0x1d18 <vfprintf+0x69e>
    16b6:	85 32       	cpi	r24, 0x25	; 37
    16b8:	39 f4       	brne	.+14     	; 0x16c8 <vfprintf+0x4e>
    16ba:	93 fd       	sbrc	r25, 3
    16bc:	85 91       	lpm	r24, Z+
    16be:	93 ff       	sbrs	r25, 3
    16c0:	81 91       	ld	r24, Z+
    16c2:	1f 01       	movw	r2, r30
    16c4:	85 32       	cpi	r24, 0x25	; 37
    16c6:	39 f4       	brne	.+14     	; 0x16d6 <vfprintf+0x5c>
    16c8:	b7 01       	movw	r22, r14
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    16d0:	56 01       	movw	r10, r12
    16d2:	65 01       	movw	r12, r10
    16d4:	e5 cf       	rjmp	.-54     	; 0x16a0 <vfprintf+0x26>
    16d6:	10 e0       	ldi	r17, 0x00	; 0
    16d8:	51 2c       	mov	r5, r1
    16da:	91 2c       	mov	r9, r1
    16dc:	ff e1       	ldi	r31, 0x1F	; 31
    16de:	f9 15       	cp	r31, r9
    16e0:	d8 f0       	brcs	.+54     	; 0x1718 <vfprintf+0x9e>
    16e2:	8b 32       	cpi	r24, 0x2B	; 43
    16e4:	79 f0       	breq	.+30     	; 0x1704 <vfprintf+0x8a>
    16e6:	38 f4       	brcc	.+14     	; 0x16f6 <vfprintf+0x7c>
    16e8:	80 32       	cpi	r24, 0x20	; 32
    16ea:	79 f0       	breq	.+30     	; 0x170a <vfprintf+0x90>
    16ec:	83 32       	cpi	r24, 0x23	; 35
    16ee:	a1 f4       	brne	.+40     	; 0x1718 <vfprintf+0x9e>
    16f0:	f9 2d       	mov	r31, r9
    16f2:	f0 61       	ori	r31, 0x10	; 16
    16f4:	2e c0       	rjmp	.+92     	; 0x1752 <vfprintf+0xd8>
    16f6:	8d 32       	cpi	r24, 0x2D	; 45
    16f8:	61 f0       	breq	.+24     	; 0x1712 <vfprintf+0x98>
    16fa:	80 33       	cpi	r24, 0x30	; 48
    16fc:	69 f4       	brne	.+26     	; 0x1718 <vfprintf+0x9e>
    16fe:	29 2d       	mov	r18, r9
    1700:	21 60       	ori	r18, 0x01	; 1
    1702:	2d c0       	rjmp	.+90     	; 0x175e <vfprintf+0xe4>
    1704:	39 2d       	mov	r19, r9
    1706:	32 60       	ori	r19, 0x02	; 2
    1708:	93 2e       	mov	r9, r19
    170a:	89 2d       	mov	r24, r9
    170c:	84 60       	ori	r24, 0x04	; 4
    170e:	98 2e       	mov	r9, r24
    1710:	2a c0       	rjmp	.+84     	; 0x1766 <vfprintf+0xec>
    1712:	e9 2d       	mov	r30, r9
    1714:	e8 60       	ori	r30, 0x08	; 8
    1716:	15 c0       	rjmp	.+42     	; 0x1742 <vfprintf+0xc8>
    1718:	97 fc       	sbrc	r9, 7
    171a:	2d c0       	rjmp	.+90     	; 0x1776 <vfprintf+0xfc>
    171c:	20 ed       	ldi	r18, 0xD0	; 208
    171e:	28 0f       	add	r18, r24
    1720:	2a 30       	cpi	r18, 0x0A	; 10
    1722:	88 f4       	brcc	.+34     	; 0x1746 <vfprintf+0xcc>
    1724:	96 fe       	sbrs	r9, 6
    1726:	06 c0       	rjmp	.+12     	; 0x1734 <vfprintf+0xba>
    1728:	3a e0       	ldi	r19, 0x0A	; 10
    172a:	13 9f       	mul	r17, r19
    172c:	20 0d       	add	r18, r0
    172e:	11 24       	eor	r1, r1
    1730:	12 2f       	mov	r17, r18
    1732:	19 c0       	rjmp	.+50     	; 0x1766 <vfprintf+0xec>
    1734:	8a e0       	ldi	r24, 0x0A	; 10
    1736:	58 9e       	mul	r5, r24
    1738:	20 0d       	add	r18, r0
    173a:	11 24       	eor	r1, r1
    173c:	52 2e       	mov	r5, r18
    173e:	e9 2d       	mov	r30, r9
    1740:	e0 62       	ori	r30, 0x20	; 32
    1742:	9e 2e       	mov	r9, r30
    1744:	10 c0       	rjmp	.+32     	; 0x1766 <vfprintf+0xec>
    1746:	8e 32       	cpi	r24, 0x2E	; 46
    1748:	31 f4       	brne	.+12     	; 0x1756 <vfprintf+0xdc>
    174a:	96 fc       	sbrc	r9, 6
    174c:	e5 c2       	rjmp	.+1482   	; 0x1d18 <vfprintf+0x69e>
    174e:	f9 2d       	mov	r31, r9
    1750:	f0 64       	ori	r31, 0x40	; 64
    1752:	9f 2e       	mov	r9, r31
    1754:	08 c0       	rjmp	.+16     	; 0x1766 <vfprintf+0xec>
    1756:	8c 36       	cpi	r24, 0x6C	; 108
    1758:	21 f4       	brne	.+8      	; 0x1762 <vfprintf+0xe8>
    175a:	29 2d       	mov	r18, r9
    175c:	20 68       	ori	r18, 0x80	; 128
    175e:	92 2e       	mov	r9, r18
    1760:	02 c0       	rjmp	.+4      	; 0x1766 <vfprintf+0xec>
    1762:	88 36       	cpi	r24, 0x68	; 104
    1764:	41 f4       	brne	.+16     	; 0x1776 <vfprintf+0xfc>
    1766:	f1 01       	movw	r30, r2
    1768:	93 fd       	sbrc	r25, 3
    176a:	85 91       	lpm	r24, Z+
    176c:	93 ff       	sbrs	r25, 3
    176e:	81 91       	ld	r24, Z+
    1770:	1f 01       	movw	r2, r30
    1772:	81 11       	cpse	r24, r1
    1774:	b3 cf       	rjmp	.-154    	; 0x16dc <vfprintf+0x62>
    1776:	9b eb       	ldi	r25, 0xBB	; 187
    1778:	98 0f       	add	r25, r24
    177a:	93 30       	cpi	r25, 0x03	; 3
    177c:	20 f4       	brcc	.+8      	; 0x1786 <vfprintf+0x10c>
    177e:	99 2d       	mov	r25, r9
    1780:	90 61       	ori	r25, 0x10	; 16
    1782:	80 5e       	subi	r24, 0xE0	; 224
    1784:	07 c0       	rjmp	.+14     	; 0x1794 <vfprintf+0x11a>
    1786:	9b e9       	ldi	r25, 0x9B	; 155
    1788:	98 0f       	add	r25, r24
    178a:	93 30       	cpi	r25, 0x03	; 3
    178c:	08 f0       	brcs	.+2      	; 0x1790 <vfprintf+0x116>
    178e:	66 c1       	rjmp	.+716    	; 0x1a5c <vfprintf+0x3e2>
    1790:	99 2d       	mov	r25, r9
    1792:	9f 7e       	andi	r25, 0xEF	; 239
    1794:	96 ff       	sbrs	r25, 6
    1796:	16 e0       	ldi	r17, 0x06	; 6
    1798:	9f 73       	andi	r25, 0x3F	; 63
    179a:	99 2e       	mov	r9, r25
    179c:	85 36       	cpi	r24, 0x65	; 101
    179e:	19 f4       	brne	.+6      	; 0x17a6 <vfprintf+0x12c>
    17a0:	90 64       	ori	r25, 0x40	; 64
    17a2:	99 2e       	mov	r9, r25
    17a4:	08 c0       	rjmp	.+16     	; 0x17b6 <vfprintf+0x13c>
    17a6:	86 36       	cpi	r24, 0x66	; 102
    17a8:	21 f4       	brne	.+8      	; 0x17b2 <vfprintf+0x138>
    17aa:	39 2f       	mov	r19, r25
    17ac:	30 68       	ori	r19, 0x80	; 128
    17ae:	93 2e       	mov	r9, r19
    17b0:	02 c0       	rjmp	.+4      	; 0x17b6 <vfprintf+0x13c>
    17b2:	11 11       	cpse	r17, r1
    17b4:	11 50       	subi	r17, 0x01	; 1
    17b6:	97 fe       	sbrs	r9, 7
    17b8:	07 c0       	rjmp	.+14     	; 0x17c8 <vfprintf+0x14e>
    17ba:	1c 33       	cpi	r17, 0x3C	; 60
    17bc:	50 f4       	brcc	.+20     	; 0x17d2 <vfprintf+0x158>
    17be:	44 24       	eor	r4, r4
    17c0:	43 94       	inc	r4
    17c2:	41 0e       	add	r4, r17
    17c4:	27 e0       	ldi	r18, 0x07	; 7
    17c6:	0b c0       	rjmp	.+22     	; 0x17de <vfprintf+0x164>
    17c8:	18 30       	cpi	r17, 0x08	; 8
    17ca:	38 f0       	brcs	.+14     	; 0x17da <vfprintf+0x160>
    17cc:	27 e0       	ldi	r18, 0x07	; 7
    17ce:	17 e0       	ldi	r17, 0x07	; 7
    17d0:	05 c0       	rjmp	.+10     	; 0x17dc <vfprintf+0x162>
    17d2:	27 e0       	ldi	r18, 0x07	; 7
    17d4:	9c e3       	ldi	r25, 0x3C	; 60
    17d6:	49 2e       	mov	r4, r25
    17d8:	02 c0       	rjmp	.+4      	; 0x17de <vfprintf+0x164>
    17da:	21 2f       	mov	r18, r17
    17dc:	41 2c       	mov	r4, r1
    17de:	56 01       	movw	r10, r12
    17e0:	84 e0       	ldi	r24, 0x04	; 4
    17e2:	a8 0e       	add	r10, r24
    17e4:	b1 1c       	adc	r11, r1
    17e6:	f6 01       	movw	r30, r12
    17e8:	60 81       	ld	r22, Z
    17ea:	71 81       	ldd	r23, Z+1	; 0x01
    17ec:	82 81       	ldd	r24, Z+2	; 0x02
    17ee:	93 81       	ldd	r25, Z+3	; 0x03
    17f0:	04 2d       	mov	r16, r4
    17f2:	a3 01       	movw	r20, r6
    17f4:	0e 94 93 0f 	call	0x1f26	; 0x1f26 <__ftoa_engine>
    17f8:	6c 01       	movw	r12, r24
    17fa:	f9 81       	ldd	r31, Y+1	; 0x01
    17fc:	fc 87       	std	Y+12, r31	; 0x0c
    17fe:	f0 ff       	sbrs	r31, 0
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <vfprintf+0x18c>
    1802:	f3 ff       	sbrs	r31, 3
    1804:	06 c0       	rjmp	.+12     	; 0x1812 <vfprintf+0x198>
    1806:	91 fc       	sbrc	r9, 1
    1808:	06 c0       	rjmp	.+12     	; 0x1816 <vfprintf+0x19c>
    180a:	92 fe       	sbrs	r9, 2
    180c:	06 c0       	rjmp	.+12     	; 0x181a <vfprintf+0x1a0>
    180e:	00 e2       	ldi	r16, 0x20	; 32
    1810:	05 c0       	rjmp	.+10     	; 0x181c <vfprintf+0x1a2>
    1812:	0d e2       	ldi	r16, 0x2D	; 45
    1814:	03 c0       	rjmp	.+6      	; 0x181c <vfprintf+0x1a2>
    1816:	0b e2       	ldi	r16, 0x2B	; 43
    1818:	01 c0       	rjmp	.+2      	; 0x181c <vfprintf+0x1a2>
    181a:	00 e0       	ldi	r16, 0x00	; 0
    181c:	8c 85       	ldd	r24, Y+12	; 0x0c
    181e:	8c 70       	andi	r24, 0x0C	; 12
    1820:	19 f0       	breq	.+6      	; 0x1828 <vfprintf+0x1ae>
    1822:	01 11       	cpse	r16, r1
    1824:	5a c2       	rjmp	.+1204   	; 0x1cda <vfprintf+0x660>
    1826:	9b c2       	rjmp	.+1334   	; 0x1d5e <vfprintf+0x6e4>
    1828:	97 fe       	sbrs	r9, 7
    182a:	10 c0       	rjmp	.+32     	; 0x184c <vfprintf+0x1d2>
    182c:	4c 0c       	add	r4, r12
    182e:	fc 85       	ldd	r31, Y+12	; 0x0c
    1830:	f4 ff       	sbrs	r31, 4
    1832:	04 c0       	rjmp	.+8      	; 0x183c <vfprintf+0x1c2>
    1834:	8a 81       	ldd	r24, Y+2	; 0x02
    1836:	81 33       	cpi	r24, 0x31	; 49
    1838:	09 f4       	brne	.+2      	; 0x183c <vfprintf+0x1c2>
    183a:	4a 94       	dec	r4
    183c:	14 14       	cp	r1, r4
    183e:	74 f5       	brge	.+92     	; 0x189c <vfprintf+0x222>
    1840:	28 e0       	ldi	r18, 0x08	; 8
    1842:	24 15       	cp	r18, r4
    1844:	78 f5       	brcc	.+94     	; 0x18a4 <vfprintf+0x22a>
    1846:	88 e0       	ldi	r24, 0x08	; 8
    1848:	48 2e       	mov	r4, r24
    184a:	2c c0       	rjmp	.+88     	; 0x18a4 <vfprintf+0x22a>
    184c:	96 fc       	sbrc	r9, 6
    184e:	2a c0       	rjmp	.+84     	; 0x18a4 <vfprintf+0x22a>
    1850:	81 2f       	mov	r24, r17
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	8c 15       	cp	r24, r12
    1856:	9d 05       	cpc	r25, r13
    1858:	9c f0       	brlt	.+38     	; 0x1880 <vfprintf+0x206>
    185a:	3c ef       	ldi	r19, 0xFC	; 252
    185c:	c3 16       	cp	r12, r19
    185e:	3f ef       	ldi	r19, 0xFF	; 255
    1860:	d3 06       	cpc	r13, r19
    1862:	74 f0       	brlt	.+28     	; 0x1880 <vfprintf+0x206>
    1864:	89 2d       	mov	r24, r9
    1866:	80 68       	ori	r24, 0x80	; 128
    1868:	98 2e       	mov	r9, r24
    186a:	0a c0       	rjmp	.+20     	; 0x1880 <vfprintf+0x206>
    186c:	e2 e0       	ldi	r30, 0x02	; 2
    186e:	f0 e0       	ldi	r31, 0x00	; 0
    1870:	ec 0f       	add	r30, r28
    1872:	fd 1f       	adc	r31, r29
    1874:	e1 0f       	add	r30, r17
    1876:	f1 1d       	adc	r31, r1
    1878:	80 81       	ld	r24, Z
    187a:	80 33       	cpi	r24, 0x30	; 48
    187c:	19 f4       	brne	.+6      	; 0x1884 <vfprintf+0x20a>
    187e:	11 50       	subi	r17, 0x01	; 1
    1880:	11 11       	cpse	r17, r1
    1882:	f4 cf       	rjmp	.-24     	; 0x186c <vfprintf+0x1f2>
    1884:	97 fe       	sbrs	r9, 7
    1886:	0e c0       	rjmp	.+28     	; 0x18a4 <vfprintf+0x22a>
    1888:	44 24       	eor	r4, r4
    188a:	43 94       	inc	r4
    188c:	41 0e       	add	r4, r17
    188e:	81 2f       	mov	r24, r17
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	c8 16       	cp	r12, r24
    1894:	d9 06       	cpc	r13, r25
    1896:	2c f4       	brge	.+10     	; 0x18a2 <vfprintf+0x228>
    1898:	1c 19       	sub	r17, r12
    189a:	04 c0       	rjmp	.+8      	; 0x18a4 <vfprintf+0x22a>
    189c:	44 24       	eor	r4, r4
    189e:	43 94       	inc	r4
    18a0:	01 c0       	rjmp	.+2      	; 0x18a4 <vfprintf+0x22a>
    18a2:	10 e0       	ldi	r17, 0x00	; 0
    18a4:	97 fe       	sbrs	r9, 7
    18a6:	06 c0       	rjmp	.+12     	; 0x18b4 <vfprintf+0x23a>
    18a8:	1c 14       	cp	r1, r12
    18aa:	1d 04       	cpc	r1, r13
    18ac:	34 f4       	brge	.+12     	; 0x18ba <vfprintf+0x240>
    18ae:	c6 01       	movw	r24, r12
    18b0:	01 96       	adiw	r24, 0x01	; 1
    18b2:	05 c0       	rjmp	.+10     	; 0x18be <vfprintf+0x244>
    18b4:	85 e0       	ldi	r24, 0x05	; 5
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	02 c0       	rjmp	.+4      	; 0x18be <vfprintf+0x244>
    18ba:	81 e0       	ldi	r24, 0x01	; 1
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	01 11       	cpse	r16, r1
    18c0:	01 96       	adiw	r24, 0x01	; 1
    18c2:	11 23       	and	r17, r17
    18c4:	31 f0       	breq	.+12     	; 0x18d2 <vfprintf+0x258>
    18c6:	21 2f       	mov	r18, r17
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	2f 5f       	subi	r18, 0xFF	; 255
    18cc:	3f 4f       	sbci	r19, 0xFF	; 255
    18ce:	82 0f       	add	r24, r18
    18d0:	93 1f       	adc	r25, r19
    18d2:	25 2d       	mov	r18, r5
    18d4:	30 e0       	ldi	r19, 0x00	; 0
    18d6:	82 17       	cp	r24, r18
    18d8:	93 07       	cpc	r25, r19
    18da:	14 f4       	brge	.+4      	; 0x18e0 <vfprintf+0x266>
    18dc:	58 1a       	sub	r5, r24
    18de:	01 c0       	rjmp	.+2      	; 0x18e2 <vfprintf+0x268>
    18e0:	51 2c       	mov	r5, r1
    18e2:	89 2d       	mov	r24, r9
    18e4:	89 70       	andi	r24, 0x09	; 9
    18e6:	49 f4       	brne	.+18     	; 0x18fa <vfprintf+0x280>
    18e8:	55 20       	and	r5, r5
    18ea:	39 f0       	breq	.+14     	; 0x18fa <vfprintf+0x280>
    18ec:	b7 01       	movw	r22, r14
    18ee:	80 e2       	ldi	r24, 0x20	; 32
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    18f6:	5a 94       	dec	r5
    18f8:	f7 cf       	rjmp	.-18     	; 0x18e8 <vfprintf+0x26e>
    18fa:	00 23       	and	r16, r16
    18fc:	29 f0       	breq	.+10     	; 0x1908 <vfprintf+0x28e>
    18fe:	b7 01       	movw	r22, r14
    1900:	80 2f       	mov	r24, r16
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1908:	93 fc       	sbrc	r9, 3
    190a:	09 c0       	rjmp	.+18     	; 0x191e <vfprintf+0x2a4>
    190c:	55 20       	and	r5, r5
    190e:	39 f0       	breq	.+14     	; 0x191e <vfprintf+0x2a4>
    1910:	b7 01       	movw	r22, r14
    1912:	80 e3       	ldi	r24, 0x30	; 48
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    191a:	5a 94       	dec	r5
    191c:	f7 cf       	rjmp	.-18     	; 0x190c <vfprintf+0x292>
    191e:	97 fe       	sbrs	r9, 7
    1920:	4c c0       	rjmp	.+152    	; 0x19ba <vfprintf+0x340>
    1922:	46 01       	movw	r8, r12
    1924:	d7 fe       	sbrs	r13, 7
    1926:	02 c0       	rjmp	.+4      	; 0x192c <vfprintf+0x2b2>
    1928:	81 2c       	mov	r8, r1
    192a:	91 2c       	mov	r9, r1
    192c:	c6 01       	movw	r24, r12
    192e:	88 19       	sub	r24, r8
    1930:	99 09       	sbc	r25, r9
    1932:	f3 01       	movw	r30, r6
    1934:	e8 0f       	add	r30, r24
    1936:	f9 1f       	adc	r31, r25
    1938:	fe 87       	std	Y+14, r31	; 0x0e
    193a:	ed 87       	std	Y+13, r30	; 0x0d
    193c:	96 01       	movw	r18, r12
    193e:	24 19       	sub	r18, r4
    1940:	31 09       	sbc	r19, r1
    1942:	38 8b       	std	Y+16, r19	; 0x10
    1944:	2f 87       	std	Y+15, r18	; 0x0f
    1946:	01 2f       	mov	r16, r17
    1948:	10 e0       	ldi	r17, 0x00	; 0
    194a:	11 95       	neg	r17
    194c:	01 95       	neg	r16
    194e:	11 09       	sbc	r17, r1
    1950:	3f ef       	ldi	r19, 0xFF	; 255
    1952:	83 16       	cp	r8, r19
    1954:	93 06       	cpc	r9, r19
    1956:	29 f4       	brne	.+10     	; 0x1962 <vfprintf+0x2e8>
    1958:	b7 01       	movw	r22, r14
    195a:	8e e2       	ldi	r24, 0x2E	; 46
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1962:	c8 14       	cp	r12, r8
    1964:	d9 04       	cpc	r13, r9
    1966:	4c f0       	brlt	.+18     	; 0x197a <vfprintf+0x300>
    1968:	8f 85       	ldd	r24, Y+15	; 0x0f
    196a:	98 89       	ldd	r25, Y+16	; 0x10
    196c:	88 15       	cp	r24, r8
    196e:	99 05       	cpc	r25, r9
    1970:	24 f4       	brge	.+8      	; 0x197a <vfprintf+0x300>
    1972:	ed 85       	ldd	r30, Y+13	; 0x0d
    1974:	fe 85       	ldd	r31, Y+14	; 0x0e
    1976:	81 81       	ldd	r24, Z+1	; 0x01
    1978:	01 c0       	rjmp	.+2      	; 0x197c <vfprintf+0x302>
    197a:	80 e3       	ldi	r24, 0x30	; 48
    197c:	f1 e0       	ldi	r31, 0x01	; 1
    197e:	8f 1a       	sub	r8, r31
    1980:	91 08       	sbc	r9, r1
    1982:	2d 85       	ldd	r18, Y+13	; 0x0d
    1984:	3e 85       	ldd	r19, Y+14	; 0x0e
    1986:	2f 5f       	subi	r18, 0xFF	; 255
    1988:	3f 4f       	sbci	r19, 0xFF	; 255
    198a:	3e 87       	std	Y+14, r19	; 0x0e
    198c:	2d 87       	std	Y+13, r18	; 0x0d
    198e:	80 16       	cp	r8, r16
    1990:	91 06       	cpc	r9, r17
    1992:	2c f0       	brlt	.+10     	; 0x199e <vfprintf+0x324>
    1994:	b7 01       	movw	r22, r14
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    199c:	d9 cf       	rjmp	.-78     	; 0x1950 <vfprintf+0x2d6>
    199e:	c8 14       	cp	r12, r8
    19a0:	d9 04       	cpc	r13, r9
    19a2:	41 f4       	brne	.+16     	; 0x19b4 <vfprintf+0x33a>
    19a4:	9a 81       	ldd	r25, Y+2	; 0x02
    19a6:	96 33       	cpi	r25, 0x36	; 54
    19a8:	20 f4       	brcc	.+8      	; 0x19b2 <vfprintf+0x338>
    19aa:	95 33       	cpi	r25, 0x35	; 53
    19ac:	19 f4       	brne	.+6      	; 0x19b4 <vfprintf+0x33a>
    19ae:	3c 85       	ldd	r19, Y+12	; 0x0c
    19b0:	34 ff       	sbrs	r19, 4
    19b2:	81 e3       	ldi	r24, 0x31	; 49
    19b4:	b7 01       	movw	r22, r14
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	4e c0       	rjmp	.+156    	; 0x1a56 <vfprintf+0x3dc>
    19ba:	8a 81       	ldd	r24, Y+2	; 0x02
    19bc:	81 33       	cpi	r24, 0x31	; 49
    19be:	19 f0       	breq	.+6      	; 0x19c6 <vfprintf+0x34c>
    19c0:	9c 85       	ldd	r25, Y+12	; 0x0c
    19c2:	9f 7e       	andi	r25, 0xEF	; 239
    19c4:	9c 87       	std	Y+12, r25	; 0x0c
    19c6:	b7 01       	movw	r22, r14
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    19ce:	11 11       	cpse	r17, r1
    19d0:	05 c0       	rjmp	.+10     	; 0x19dc <vfprintf+0x362>
    19d2:	94 fc       	sbrc	r9, 4
    19d4:	18 c0       	rjmp	.+48     	; 0x1a06 <vfprintf+0x38c>
    19d6:	85 e6       	ldi	r24, 0x65	; 101
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	17 c0       	rjmp	.+46     	; 0x1a0a <vfprintf+0x390>
    19dc:	b7 01       	movw	r22, r14
    19de:	8e e2       	ldi	r24, 0x2E	; 46
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    19e6:	1e 5f       	subi	r17, 0xFE	; 254
    19e8:	82 e0       	ldi	r24, 0x02	; 2
    19ea:	01 e0       	ldi	r16, 0x01	; 1
    19ec:	08 0f       	add	r16, r24
    19ee:	f3 01       	movw	r30, r6
    19f0:	e8 0f       	add	r30, r24
    19f2:	f1 1d       	adc	r31, r1
    19f4:	80 81       	ld	r24, Z
    19f6:	b7 01       	movw	r22, r14
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    19fe:	80 2f       	mov	r24, r16
    1a00:	01 13       	cpse	r16, r17
    1a02:	f3 cf       	rjmp	.-26     	; 0x19ea <vfprintf+0x370>
    1a04:	e6 cf       	rjmp	.-52     	; 0x19d2 <vfprintf+0x358>
    1a06:	85 e4       	ldi	r24, 0x45	; 69
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	b7 01       	movw	r22, r14
    1a0c:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1a10:	d7 fc       	sbrc	r13, 7
    1a12:	06 c0       	rjmp	.+12     	; 0x1a20 <vfprintf+0x3a6>
    1a14:	c1 14       	cp	r12, r1
    1a16:	d1 04       	cpc	r13, r1
    1a18:	41 f4       	brne	.+16     	; 0x1a2a <vfprintf+0x3b0>
    1a1a:	ec 85       	ldd	r30, Y+12	; 0x0c
    1a1c:	e4 ff       	sbrs	r30, 4
    1a1e:	05 c0       	rjmp	.+10     	; 0x1a2a <vfprintf+0x3b0>
    1a20:	d1 94       	neg	r13
    1a22:	c1 94       	neg	r12
    1a24:	d1 08       	sbc	r13, r1
    1a26:	8d e2       	ldi	r24, 0x2D	; 45
    1a28:	01 c0       	rjmp	.+2      	; 0x1a2c <vfprintf+0x3b2>
    1a2a:	8b e2       	ldi	r24, 0x2B	; 43
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1a34:	80 e3       	ldi	r24, 0x30	; 48
    1a36:	2a e0       	ldi	r18, 0x0A	; 10
    1a38:	c2 16       	cp	r12, r18
    1a3a:	d1 04       	cpc	r13, r1
    1a3c:	2c f0       	brlt	.+10     	; 0x1a48 <vfprintf+0x3ce>
    1a3e:	8f 5f       	subi	r24, 0xFF	; 255
    1a40:	fa e0       	ldi	r31, 0x0A	; 10
    1a42:	cf 1a       	sub	r12, r31
    1a44:	d1 08       	sbc	r13, r1
    1a46:	f7 cf       	rjmp	.-18     	; 0x1a36 <vfprintf+0x3bc>
    1a48:	b7 01       	movw	r22, r14
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1a50:	b7 01       	movw	r22, r14
    1a52:	c6 01       	movw	r24, r12
    1a54:	c0 96       	adiw	r24, 0x30	; 48
    1a56:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1a5a:	54 c1       	rjmp	.+680    	; 0x1d04 <vfprintf+0x68a>
    1a5c:	83 36       	cpi	r24, 0x63	; 99
    1a5e:	31 f0       	breq	.+12     	; 0x1a6c <vfprintf+0x3f2>
    1a60:	83 37       	cpi	r24, 0x73	; 115
    1a62:	79 f0       	breq	.+30     	; 0x1a82 <vfprintf+0x408>
    1a64:	83 35       	cpi	r24, 0x53	; 83
    1a66:	09 f0       	breq	.+2      	; 0x1a6a <vfprintf+0x3f0>
    1a68:	56 c0       	rjmp	.+172    	; 0x1b16 <vfprintf+0x49c>
    1a6a:	20 c0       	rjmp	.+64     	; 0x1aac <vfprintf+0x432>
    1a6c:	56 01       	movw	r10, r12
    1a6e:	32 e0       	ldi	r19, 0x02	; 2
    1a70:	a3 0e       	add	r10, r19
    1a72:	b1 1c       	adc	r11, r1
    1a74:	f6 01       	movw	r30, r12
    1a76:	80 81       	ld	r24, Z
    1a78:	89 83       	std	Y+1, r24	; 0x01
    1a7a:	01 e0       	ldi	r16, 0x01	; 1
    1a7c:	10 e0       	ldi	r17, 0x00	; 0
    1a7e:	63 01       	movw	r12, r6
    1a80:	12 c0       	rjmp	.+36     	; 0x1aa6 <vfprintf+0x42c>
    1a82:	56 01       	movw	r10, r12
    1a84:	f2 e0       	ldi	r31, 0x02	; 2
    1a86:	af 0e       	add	r10, r31
    1a88:	b1 1c       	adc	r11, r1
    1a8a:	f6 01       	movw	r30, r12
    1a8c:	c0 80       	ld	r12, Z
    1a8e:	d1 80       	ldd	r13, Z+1	; 0x01
    1a90:	96 fe       	sbrs	r9, 6
    1a92:	03 c0       	rjmp	.+6      	; 0x1a9a <vfprintf+0x420>
    1a94:	61 2f       	mov	r22, r17
    1a96:	70 e0       	ldi	r23, 0x00	; 0
    1a98:	02 c0       	rjmp	.+4      	; 0x1a9e <vfprintf+0x424>
    1a9a:	6f ef       	ldi	r22, 0xFF	; 255
    1a9c:	7f ef       	ldi	r23, 0xFF	; 255
    1a9e:	c6 01       	movw	r24, r12
    1aa0:	0e 94 76 10 	call	0x20ec	; 0x20ec <strnlen>
    1aa4:	8c 01       	movw	r16, r24
    1aa6:	f9 2d       	mov	r31, r9
    1aa8:	ff 77       	andi	r31, 0x7F	; 127
    1aaa:	14 c0       	rjmp	.+40     	; 0x1ad4 <vfprintf+0x45a>
    1aac:	56 01       	movw	r10, r12
    1aae:	22 e0       	ldi	r18, 0x02	; 2
    1ab0:	a2 0e       	add	r10, r18
    1ab2:	b1 1c       	adc	r11, r1
    1ab4:	f6 01       	movw	r30, r12
    1ab6:	c0 80       	ld	r12, Z
    1ab8:	d1 80       	ldd	r13, Z+1	; 0x01
    1aba:	96 fe       	sbrs	r9, 6
    1abc:	03 c0       	rjmp	.+6      	; 0x1ac4 <vfprintf+0x44a>
    1abe:	61 2f       	mov	r22, r17
    1ac0:	70 e0       	ldi	r23, 0x00	; 0
    1ac2:	02 c0       	rjmp	.+4      	; 0x1ac8 <vfprintf+0x44e>
    1ac4:	6f ef       	ldi	r22, 0xFF	; 255
    1ac6:	7f ef       	ldi	r23, 0xFF	; 255
    1ac8:	c6 01       	movw	r24, r12
    1aca:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <strnlen_P>
    1ace:	8c 01       	movw	r16, r24
    1ad0:	f9 2d       	mov	r31, r9
    1ad2:	f0 68       	ori	r31, 0x80	; 128
    1ad4:	9f 2e       	mov	r9, r31
    1ad6:	f3 fd       	sbrc	r31, 3
    1ad8:	1a c0       	rjmp	.+52     	; 0x1b0e <vfprintf+0x494>
    1ada:	85 2d       	mov	r24, r5
    1adc:	90 e0       	ldi	r25, 0x00	; 0
    1ade:	08 17       	cp	r16, r24
    1ae0:	19 07       	cpc	r17, r25
    1ae2:	a8 f4       	brcc	.+42     	; 0x1b0e <vfprintf+0x494>
    1ae4:	b7 01       	movw	r22, r14
    1ae6:	80 e2       	ldi	r24, 0x20	; 32
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1aee:	5a 94       	dec	r5
    1af0:	f4 cf       	rjmp	.-24     	; 0x1ada <vfprintf+0x460>
    1af2:	f6 01       	movw	r30, r12
    1af4:	97 fc       	sbrc	r9, 7
    1af6:	85 91       	lpm	r24, Z+
    1af8:	97 fe       	sbrs	r9, 7
    1afa:	81 91       	ld	r24, Z+
    1afc:	6f 01       	movw	r12, r30
    1afe:	b7 01       	movw	r22, r14
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1b06:	51 10       	cpse	r5, r1
    1b08:	5a 94       	dec	r5
    1b0a:	01 50       	subi	r16, 0x01	; 1
    1b0c:	11 09       	sbc	r17, r1
    1b0e:	01 15       	cp	r16, r1
    1b10:	11 05       	cpc	r17, r1
    1b12:	79 f7       	brne	.-34     	; 0x1af2 <vfprintf+0x478>
    1b14:	f7 c0       	rjmp	.+494    	; 0x1d04 <vfprintf+0x68a>
    1b16:	84 36       	cpi	r24, 0x64	; 100
    1b18:	11 f0       	breq	.+4      	; 0x1b1e <vfprintf+0x4a4>
    1b1a:	89 36       	cpi	r24, 0x69	; 105
    1b1c:	61 f5       	brne	.+88     	; 0x1b76 <vfprintf+0x4fc>
    1b1e:	56 01       	movw	r10, r12
    1b20:	97 fe       	sbrs	r9, 7
    1b22:	09 c0       	rjmp	.+18     	; 0x1b36 <vfprintf+0x4bc>
    1b24:	24 e0       	ldi	r18, 0x04	; 4
    1b26:	a2 0e       	add	r10, r18
    1b28:	b1 1c       	adc	r11, r1
    1b2a:	f6 01       	movw	r30, r12
    1b2c:	60 81       	ld	r22, Z
    1b2e:	71 81       	ldd	r23, Z+1	; 0x01
    1b30:	82 81       	ldd	r24, Z+2	; 0x02
    1b32:	93 81       	ldd	r25, Z+3	; 0x03
    1b34:	0a c0       	rjmp	.+20     	; 0x1b4a <vfprintf+0x4d0>
    1b36:	f2 e0       	ldi	r31, 0x02	; 2
    1b38:	af 0e       	add	r10, r31
    1b3a:	b1 1c       	adc	r11, r1
    1b3c:	f6 01       	movw	r30, r12
    1b3e:	60 81       	ld	r22, Z
    1b40:	71 81       	ldd	r23, Z+1	; 0x01
    1b42:	07 2e       	mov	r0, r23
    1b44:	00 0c       	add	r0, r0
    1b46:	88 0b       	sbc	r24, r24
    1b48:	99 0b       	sbc	r25, r25
    1b4a:	f9 2d       	mov	r31, r9
    1b4c:	ff 76       	andi	r31, 0x6F	; 111
    1b4e:	9f 2e       	mov	r9, r31
    1b50:	97 ff       	sbrs	r25, 7
    1b52:	09 c0       	rjmp	.+18     	; 0x1b66 <vfprintf+0x4ec>
    1b54:	90 95       	com	r25
    1b56:	80 95       	com	r24
    1b58:	70 95       	com	r23
    1b5a:	61 95       	neg	r22
    1b5c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b5e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b60:	9f 4f       	sbci	r25, 0xFF	; 255
    1b62:	f0 68       	ori	r31, 0x80	; 128
    1b64:	9f 2e       	mov	r9, r31
    1b66:	2a e0       	ldi	r18, 0x0A	; 10
    1b68:	30 e0       	ldi	r19, 0x00	; 0
    1b6a:	a3 01       	movw	r20, r6
    1b6c:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <__ultoa_invert>
    1b70:	c8 2e       	mov	r12, r24
    1b72:	c6 18       	sub	r12, r6
    1b74:	3f c0       	rjmp	.+126    	; 0x1bf4 <vfprintf+0x57a>
    1b76:	09 2d       	mov	r16, r9
    1b78:	85 37       	cpi	r24, 0x75	; 117
    1b7a:	21 f4       	brne	.+8      	; 0x1b84 <vfprintf+0x50a>
    1b7c:	0f 7e       	andi	r16, 0xEF	; 239
    1b7e:	2a e0       	ldi	r18, 0x0A	; 10
    1b80:	30 e0       	ldi	r19, 0x00	; 0
    1b82:	1d c0       	rjmp	.+58     	; 0x1bbe <vfprintf+0x544>
    1b84:	09 7f       	andi	r16, 0xF9	; 249
    1b86:	8f 36       	cpi	r24, 0x6F	; 111
    1b88:	91 f0       	breq	.+36     	; 0x1bae <vfprintf+0x534>
    1b8a:	18 f4       	brcc	.+6      	; 0x1b92 <vfprintf+0x518>
    1b8c:	88 35       	cpi	r24, 0x58	; 88
    1b8e:	59 f0       	breq	.+22     	; 0x1ba6 <vfprintf+0x52c>
    1b90:	c3 c0       	rjmp	.+390    	; 0x1d18 <vfprintf+0x69e>
    1b92:	80 37       	cpi	r24, 0x70	; 112
    1b94:	19 f0       	breq	.+6      	; 0x1b9c <vfprintf+0x522>
    1b96:	88 37       	cpi	r24, 0x78	; 120
    1b98:	11 f0       	breq	.+4      	; 0x1b9e <vfprintf+0x524>
    1b9a:	be c0       	rjmp	.+380    	; 0x1d18 <vfprintf+0x69e>
    1b9c:	00 61       	ori	r16, 0x10	; 16
    1b9e:	04 ff       	sbrs	r16, 4
    1ba0:	09 c0       	rjmp	.+18     	; 0x1bb4 <vfprintf+0x53a>
    1ba2:	04 60       	ori	r16, 0x04	; 4
    1ba4:	07 c0       	rjmp	.+14     	; 0x1bb4 <vfprintf+0x53a>
    1ba6:	94 fe       	sbrs	r9, 4
    1ba8:	08 c0       	rjmp	.+16     	; 0x1bba <vfprintf+0x540>
    1baa:	06 60       	ori	r16, 0x06	; 6
    1bac:	06 c0       	rjmp	.+12     	; 0x1bba <vfprintf+0x540>
    1bae:	28 e0       	ldi	r18, 0x08	; 8
    1bb0:	30 e0       	ldi	r19, 0x00	; 0
    1bb2:	05 c0       	rjmp	.+10     	; 0x1bbe <vfprintf+0x544>
    1bb4:	20 e1       	ldi	r18, 0x10	; 16
    1bb6:	30 e0       	ldi	r19, 0x00	; 0
    1bb8:	02 c0       	rjmp	.+4      	; 0x1bbe <vfprintf+0x544>
    1bba:	20 e1       	ldi	r18, 0x10	; 16
    1bbc:	32 e0       	ldi	r19, 0x02	; 2
    1bbe:	56 01       	movw	r10, r12
    1bc0:	07 ff       	sbrs	r16, 7
    1bc2:	09 c0       	rjmp	.+18     	; 0x1bd6 <vfprintf+0x55c>
    1bc4:	84 e0       	ldi	r24, 0x04	; 4
    1bc6:	a8 0e       	add	r10, r24
    1bc8:	b1 1c       	adc	r11, r1
    1bca:	f6 01       	movw	r30, r12
    1bcc:	60 81       	ld	r22, Z
    1bce:	71 81       	ldd	r23, Z+1	; 0x01
    1bd0:	82 81       	ldd	r24, Z+2	; 0x02
    1bd2:	93 81       	ldd	r25, Z+3	; 0x03
    1bd4:	08 c0       	rjmp	.+16     	; 0x1be6 <vfprintf+0x56c>
    1bd6:	f2 e0       	ldi	r31, 0x02	; 2
    1bd8:	af 0e       	add	r10, r31
    1bda:	b1 1c       	adc	r11, r1
    1bdc:	f6 01       	movw	r30, r12
    1bde:	60 81       	ld	r22, Z
    1be0:	71 81       	ldd	r23, Z+1	; 0x01
    1be2:	80 e0       	ldi	r24, 0x00	; 0
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	a3 01       	movw	r20, r6
    1be8:	0e 94 d3 10 	call	0x21a6	; 0x21a6 <__ultoa_invert>
    1bec:	c8 2e       	mov	r12, r24
    1bee:	c6 18       	sub	r12, r6
    1bf0:	0f 77       	andi	r16, 0x7F	; 127
    1bf2:	90 2e       	mov	r9, r16
    1bf4:	96 fe       	sbrs	r9, 6
    1bf6:	0b c0       	rjmp	.+22     	; 0x1c0e <vfprintf+0x594>
    1bf8:	09 2d       	mov	r16, r9
    1bfa:	0e 7f       	andi	r16, 0xFE	; 254
    1bfc:	c1 16       	cp	r12, r17
    1bfe:	50 f4       	brcc	.+20     	; 0x1c14 <vfprintf+0x59a>
    1c00:	94 fe       	sbrs	r9, 4
    1c02:	0a c0       	rjmp	.+20     	; 0x1c18 <vfprintf+0x59e>
    1c04:	92 fc       	sbrc	r9, 2
    1c06:	08 c0       	rjmp	.+16     	; 0x1c18 <vfprintf+0x59e>
    1c08:	09 2d       	mov	r16, r9
    1c0a:	0e 7e       	andi	r16, 0xEE	; 238
    1c0c:	05 c0       	rjmp	.+10     	; 0x1c18 <vfprintf+0x59e>
    1c0e:	dc 2c       	mov	r13, r12
    1c10:	09 2d       	mov	r16, r9
    1c12:	03 c0       	rjmp	.+6      	; 0x1c1a <vfprintf+0x5a0>
    1c14:	dc 2c       	mov	r13, r12
    1c16:	01 c0       	rjmp	.+2      	; 0x1c1a <vfprintf+0x5a0>
    1c18:	d1 2e       	mov	r13, r17
    1c1a:	04 ff       	sbrs	r16, 4
    1c1c:	0d c0       	rjmp	.+26     	; 0x1c38 <vfprintf+0x5be>
    1c1e:	fe 01       	movw	r30, r28
    1c20:	ec 0d       	add	r30, r12
    1c22:	f1 1d       	adc	r31, r1
    1c24:	80 81       	ld	r24, Z
    1c26:	80 33       	cpi	r24, 0x30	; 48
    1c28:	11 f4       	brne	.+4      	; 0x1c2e <vfprintf+0x5b4>
    1c2a:	09 7e       	andi	r16, 0xE9	; 233
    1c2c:	09 c0       	rjmp	.+18     	; 0x1c40 <vfprintf+0x5c6>
    1c2e:	02 ff       	sbrs	r16, 2
    1c30:	06 c0       	rjmp	.+12     	; 0x1c3e <vfprintf+0x5c4>
    1c32:	d3 94       	inc	r13
    1c34:	d3 94       	inc	r13
    1c36:	04 c0       	rjmp	.+8      	; 0x1c40 <vfprintf+0x5c6>
    1c38:	80 2f       	mov	r24, r16
    1c3a:	86 78       	andi	r24, 0x86	; 134
    1c3c:	09 f0       	breq	.+2      	; 0x1c40 <vfprintf+0x5c6>
    1c3e:	d3 94       	inc	r13
    1c40:	03 fd       	sbrc	r16, 3
    1c42:	11 c0       	rjmp	.+34     	; 0x1c66 <vfprintf+0x5ec>
    1c44:	00 ff       	sbrs	r16, 0
    1c46:	06 c0       	rjmp	.+12     	; 0x1c54 <vfprintf+0x5da>
    1c48:	1c 2d       	mov	r17, r12
    1c4a:	d5 14       	cp	r13, r5
    1c4c:	80 f4       	brcc	.+32     	; 0x1c6e <vfprintf+0x5f4>
    1c4e:	15 0d       	add	r17, r5
    1c50:	1d 19       	sub	r17, r13
    1c52:	0d c0       	rjmp	.+26     	; 0x1c6e <vfprintf+0x5f4>
    1c54:	d5 14       	cp	r13, r5
    1c56:	58 f4       	brcc	.+22     	; 0x1c6e <vfprintf+0x5f4>
    1c58:	b7 01       	movw	r22, r14
    1c5a:	80 e2       	ldi	r24, 0x20	; 32
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1c62:	d3 94       	inc	r13
    1c64:	f7 cf       	rjmp	.-18     	; 0x1c54 <vfprintf+0x5da>
    1c66:	d5 14       	cp	r13, r5
    1c68:	10 f4       	brcc	.+4      	; 0x1c6e <vfprintf+0x5f4>
    1c6a:	5d 18       	sub	r5, r13
    1c6c:	01 c0       	rjmp	.+2      	; 0x1c70 <vfprintf+0x5f6>
    1c6e:	51 2c       	mov	r5, r1
    1c70:	04 ff       	sbrs	r16, 4
    1c72:	10 c0       	rjmp	.+32     	; 0x1c94 <vfprintf+0x61a>
    1c74:	b7 01       	movw	r22, r14
    1c76:	80 e3       	ldi	r24, 0x30	; 48
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1c7e:	02 ff       	sbrs	r16, 2
    1c80:	17 c0       	rjmp	.+46     	; 0x1cb0 <vfprintf+0x636>
    1c82:	01 fd       	sbrc	r16, 1
    1c84:	03 c0       	rjmp	.+6      	; 0x1c8c <vfprintf+0x612>
    1c86:	88 e7       	ldi	r24, 0x78	; 120
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	02 c0       	rjmp	.+4      	; 0x1c90 <vfprintf+0x616>
    1c8c:	88 e5       	ldi	r24, 0x58	; 88
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	b7 01       	movw	r22, r14
    1c92:	0c c0       	rjmp	.+24     	; 0x1cac <vfprintf+0x632>
    1c94:	80 2f       	mov	r24, r16
    1c96:	86 78       	andi	r24, 0x86	; 134
    1c98:	59 f0       	breq	.+22     	; 0x1cb0 <vfprintf+0x636>
    1c9a:	01 ff       	sbrs	r16, 1
    1c9c:	02 c0       	rjmp	.+4      	; 0x1ca2 <vfprintf+0x628>
    1c9e:	8b e2       	ldi	r24, 0x2B	; 43
    1ca0:	01 c0       	rjmp	.+2      	; 0x1ca4 <vfprintf+0x62a>
    1ca2:	80 e2       	ldi	r24, 0x20	; 32
    1ca4:	07 fd       	sbrc	r16, 7
    1ca6:	8d e2       	ldi	r24, 0x2D	; 45
    1ca8:	b7 01       	movw	r22, r14
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1cb0:	c1 16       	cp	r12, r17
    1cb2:	38 f4       	brcc	.+14     	; 0x1cc2 <vfprintf+0x648>
    1cb4:	b7 01       	movw	r22, r14
    1cb6:	80 e3       	ldi	r24, 0x30	; 48
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1cbe:	11 50       	subi	r17, 0x01	; 1
    1cc0:	f7 cf       	rjmp	.-18     	; 0x1cb0 <vfprintf+0x636>
    1cc2:	ca 94       	dec	r12
    1cc4:	f3 01       	movw	r30, r6
    1cc6:	ec 0d       	add	r30, r12
    1cc8:	f1 1d       	adc	r31, r1
    1cca:	80 81       	ld	r24, Z
    1ccc:	b7 01       	movw	r22, r14
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1cd4:	c1 10       	cpse	r12, r1
    1cd6:	f5 cf       	rjmp	.-22     	; 0x1cc2 <vfprintf+0x648>
    1cd8:	15 c0       	rjmp	.+42     	; 0x1d04 <vfprintf+0x68a>
    1cda:	f4 e0       	ldi	r31, 0x04	; 4
    1cdc:	f5 15       	cp	r31, r5
    1cde:	60 f5       	brcc	.+88     	; 0x1d38 <vfprintf+0x6be>
    1ce0:	84 e0       	ldi	r24, 0x04	; 4
    1ce2:	58 1a       	sub	r5, r24
    1ce4:	93 fe       	sbrs	r9, 3
    1ce6:	1f c0       	rjmp	.+62     	; 0x1d26 <vfprintf+0x6ac>
    1ce8:	01 11       	cpse	r16, r1
    1cea:	27 c0       	rjmp	.+78     	; 0x1d3a <vfprintf+0x6c0>
    1cec:	2c 85       	ldd	r18, Y+12	; 0x0c
    1cee:	23 ff       	sbrs	r18, 3
    1cf0:	2a c0       	rjmp	.+84     	; 0x1d46 <vfprintf+0x6cc>
    1cf2:	08 e6       	ldi	r16, 0x68	; 104
    1cf4:	10 e0       	ldi	r17, 0x00	; 0
    1cf6:	39 2d       	mov	r19, r9
    1cf8:	30 71       	andi	r19, 0x10	; 16
    1cfa:	93 2e       	mov	r9, r19
    1cfc:	f8 01       	movw	r30, r16
    1cfe:	84 91       	lpm	r24, Z
    1d00:	81 11       	cpse	r24, r1
    1d02:	24 c0       	rjmp	.+72     	; 0x1d4c <vfprintf+0x6d2>
    1d04:	55 20       	and	r5, r5
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <vfprintf+0x690>
    1d08:	e4 cc       	rjmp	.-1592   	; 0x16d2 <vfprintf+0x58>
    1d0a:	b7 01       	movw	r22, r14
    1d0c:	80 e2       	ldi	r24, 0x20	; 32
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1d14:	5a 94       	dec	r5
    1d16:	f6 cf       	rjmp	.-20     	; 0x1d04 <vfprintf+0x68a>
    1d18:	f7 01       	movw	r30, r14
    1d1a:	86 81       	ldd	r24, Z+6	; 0x06
    1d1c:	97 81       	ldd	r25, Z+7	; 0x07
    1d1e:	26 c0       	rjmp	.+76     	; 0x1d6c <vfprintf+0x6f2>
    1d20:	8f ef       	ldi	r24, 0xFF	; 255
    1d22:	9f ef       	ldi	r25, 0xFF	; 255
    1d24:	23 c0       	rjmp	.+70     	; 0x1d6c <vfprintf+0x6f2>
    1d26:	b7 01       	movw	r22, r14
    1d28:	80 e2       	ldi	r24, 0x20	; 32
    1d2a:	90 e0       	ldi	r25, 0x00	; 0
    1d2c:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1d30:	5a 94       	dec	r5
    1d32:	51 10       	cpse	r5, r1
    1d34:	f8 cf       	rjmp	.-16     	; 0x1d26 <vfprintf+0x6ac>
    1d36:	d8 cf       	rjmp	.-80     	; 0x1ce8 <vfprintf+0x66e>
    1d38:	51 2c       	mov	r5, r1
    1d3a:	b7 01       	movw	r22, r14
    1d3c:	80 2f       	mov	r24, r16
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1d44:	d3 cf       	rjmp	.-90     	; 0x1cec <vfprintf+0x672>
    1d46:	0c e6       	ldi	r16, 0x6C	; 108
    1d48:	10 e0       	ldi	r17, 0x00	; 0
    1d4a:	d5 cf       	rjmp	.-86     	; 0x1cf6 <vfprintf+0x67c>
    1d4c:	91 10       	cpse	r9, r1
    1d4e:	80 52       	subi	r24, 0x20	; 32
    1d50:	b7 01       	movw	r22, r14
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	0e 94 81 10 	call	0x2102	; 0x2102 <fputc>
    1d58:	0f 5f       	subi	r16, 0xFF	; 255
    1d5a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d5c:	cf cf       	rjmp	.-98     	; 0x1cfc <vfprintf+0x682>
    1d5e:	23 e0       	ldi	r18, 0x03	; 3
    1d60:	25 15       	cp	r18, r5
    1d62:	10 f4       	brcc	.+4      	; 0x1d68 <vfprintf+0x6ee>
    1d64:	83 e0       	ldi	r24, 0x03	; 3
    1d66:	bd cf       	rjmp	.-134    	; 0x1ce2 <vfprintf+0x668>
    1d68:	51 2c       	mov	r5, r1
    1d6a:	c0 cf       	rjmp	.-128    	; 0x1cec <vfprintf+0x672>
    1d6c:	60 96       	adiw	r28, 0x10	; 16
    1d6e:	e2 e1       	ldi	r30, 0x12	; 18
    1d70:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <__epilogue_restores__>

00001d74 <__umoddi3>:
    1d74:	68 94       	set
    1d76:	01 c0       	rjmp	.+2      	; 0x1d7a <__udivdi3_umoddi3>

00001d78 <__udivdi3>:
    1d78:	e8 94       	clt

00001d7a <__udivdi3_umoddi3>:
    1d7a:	8f 92       	push	r8
    1d7c:	9f 92       	push	r9
    1d7e:	cf 93       	push	r28
    1d80:	df 93       	push	r29
    1d82:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__udivmod64>
    1d86:	df 91       	pop	r29
    1d88:	cf 91       	pop	r28
    1d8a:	9f 90       	pop	r9
    1d8c:	8f 90       	pop	r8
    1d8e:	08 95       	ret

00001d90 <__udivmod64>:
    1d90:	88 24       	eor	r8, r8
    1d92:	99 24       	eor	r9, r9
    1d94:	f4 01       	movw	r30, r8
    1d96:	e4 01       	movw	r28, r8
    1d98:	b0 e4       	ldi	r27, 0x40	; 64
    1d9a:	9f 93       	push	r25
    1d9c:	aa 27       	eor	r26, r26
    1d9e:	9a 15       	cp	r25, r10
    1da0:	8b 04       	cpc	r8, r11
    1da2:	9c 04       	cpc	r9, r12
    1da4:	ed 05       	cpc	r30, r13
    1da6:	fe 05       	cpc	r31, r14
    1da8:	cf 05       	cpc	r28, r15
    1daa:	d0 07       	cpc	r29, r16
    1dac:	a1 07       	cpc	r26, r17
    1dae:	98 f4       	brcc	.+38     	; 0x1dd6 <__udivmod64+0x46>
    1db0:	ad 2f       	mov	r26, r29
    1db2:	dc 2f       	mov	r29, r28
    1db4:	cf 2f       	mov	r28, r31
    1db6:	fe 2f       	mov	r31, r30
    1db8:	e9 2d       	mov	r30, r9
    1dba:	98 2c       	mov	r9, r8
    1dbc:	89 2e       	mov	r8, r25
    1dbe:	98 2f       	mov	r25, r24
    1dc0:	87 2f       	mov	r24, r23
    1dc2:	76 2f       	mov	r23, r22
    1dc4:	65 2f       	mov	r22, r21
    1dc6:	54 2f       	mov	r21, r20
    1dc8:	43 2f       	mov	r20, r19
    1dca:	32 2f       	mov	r19, r18
    1dcc:	22 27       	eor	r18, r18
    1dce:	b8 50       	subi	r27, 0x08	; 8
    1dd0:	31 f7       	brne	.-52     	; 0x1d9e <__udivmod64+0xe>
    1dd2:	bf 91       	pop	r27
    1dd4:	27 c0       	rjmp	.+78     	; 0x1e24 <__udivmod64+0x94>
    1dd6:	1b 2e       	mov	r1, r27
    1dd8:	bf 91       	pop	r27
    1dda:	bb 27       	eor	r27, r27
    1ddc:	22 0f       	add	r18, r18
    1dde:	33 1f       	adc	r19, r19
    1de0:	44 1f       	adc	r20, r20
    1de2:	55 1f       	adc	r21, r21
    1de4:	66 1f       	adc	r22, r22
    1de6:	77 1f       	adc	r23, r23
    1de8:	88 1f       	adc	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	88 1c       	adc	r8, r8
    1dee:	99 1c       	adc	r9, r9
    1df0:	ee 1f       	adc	r30, r30
    1df2:	ff 1f       	adc	r31, r31
    1df4:	cc 1f       	adc	r28, r28
    1df6:	dd 1f       	adc	r29, r29
    1df8:	aa 1f       	adc	r26, r26
    1dfa:	bb 1f       	adc	r27, r27
    1dfc:	8a 14       	cp	r8, r10
    1dfe:	9b 04       	cpc	r9, r11
    1e00:	ec 05       	cpc	r30, r12
    1e02:	fd 05       	cpc	r31, r13
    1e04:	ce 05       	cpc	r28, r14
    1e06:	df 05       	cpc	r29, r15
    1e08:	a0 07       	cpc	r26, r16
    1e0a:	b1 07       	cpc	r27, r17
    1e0c:	48 f0       	brcs	.+18     	; 0x1e20 <__udivmod64+0x90>
    1e0e:	8a 18       	sub	r8, r10
    1e10:	9b 08       	sbc	r9, r11
    1e12:	ec 09       	sbc	r30, r12
    1e14:	fd 09       	sbc	r31, r13
    1e16:	ce 09       	sbc	r28, r14
    1e18:	df 09       	sbc	r29, r15
    1e1a:	a0 0b       	sbc	r26, r16
    1e1c:	b1 0b       	sbc	r27, r17
    1e1e:	21 60       	ori	r18, 0x01	; 1
    1e20:	1a 94       	dec	r1
    1e22:	e1 f6       	brne	.-72     	; 0x1ddc <__udivmod64+0x4c>
    1e24:	2e f4       	brtc	.+10     	; 0x1e30 <__udivmod64+0xa0>
    1e26:	94 01       	movw	r18, r8
    1e28:	af 01       	movw	r20, r30
    1e2a:	be 01       	movw	r22, r28
    1e2c:	cd 01       	movw	r24, r26
    1e2e:	00 0c       	add	r0, r0
    1e30:	08 95       	ret

00001e32 <__prologue_saves__>:
    1e32:	2f 92       	push	r2
    1e34:	3f 92       	push	r3
    1e36:	4f 92       	push	r4
    1e38:	5f 92       	push	r5
    1e3a:	6f 92       	push	r6
    1e3c:	7f 92       	push	r7
    1e3e:	8f 92       	push	r8
    1e40:	9f 92       	push	r9
    1e42:	af 92       	push	r10
    1e44:	bf 92       	push	r11
    1e46:	cf 92       	push	r12
    1e48:	df 92       	push	r13
    1e4a:	ef 92       	push	r14
    1e4c:	ff 92       	push	r15
    1e4e:	0f 93       	push	r16
    1e50:	1f 93       	push	r17
    1e52:	cf 93       	push	r28
    1e54:	df 93       	push	r29
    1e56:	cd b7       	in	r28, 0x3d	; 61
    1e58:	de b7       	in	r29, 0x3e	; 62
    1e5a:	ca 1b       	sub	r28, r26
    1e5c:	db 0b       	sbc	r29, r27
    1e5e:	0f b6       	in	r0, 0x3f	; 63
    1e60:	f8 94       	cli
    1e62:	de bf       	out	0x3e, r29	; 62
    1e64:	0f be       	out	0x3f, r0	; 63
    1e66:	cd bf       	out	0x3d, r28	; 61
    1e68:	09 94       	ijmp

00001e6a <__epilogue_restores__>:
    1e6a:	2a 88       	ldd	r2, Y+18	; 0x12
    1e6c:	39 88       	ldd	r3, Y+17	; 0x11
    1e6e:	48 88       	ldd	r4, Y+16	; 0x10
    1e70:	5f 84       	ldd	r5, Y+15	; 0x0f
    1e72:	6e 84       	ldd	r6, Y+14	; 0x0e
    1e74:	7d 84       	ldd	r7, Y+13	; 0x0d
    1e76:	8c 84       	ldd	r8, Y+12	; 0x0c
    1e78:	9b 84       	ldd	r9, Y+11	; 0x0b
    1e7a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1e7c:	b9 84       	ldd	r11, Y+9	; 0x09
    1e7e:	c8 84       	ldd	r12, Y+8	; 0x08
    1e80:	df 80       	ldd	r13, Y+7	; 0x07
    1e82:	ee 80       	ldd	r14, Y+6	; 0x06
    1e84:	fd 80       	ldd	r15, Y+5	; 0x05
    1e86:	0c 81       	ldd	r16, Y+4	; 0x04
    1e88:	1b 81       	ldd	r17, Y+3	; 0x03
    1e8a:	aa 81       	ldd	r26, Y+2	; 0x02
    1e8c:	b9 81       	ldd	r27, Y+1	; 0x01
    1e8e:	ce 0f       	add	r28, r30
    1e90:	d1 1d       	adc	r29, r1
    1e92:	0f b6       	in	r0, 0x3f	; 63
    1e94:	f8 94       	cli
    1e96:	de bf       	out	0x3e, r29	; 62
    1e98:	0f be       	out	0x3f, r0	; 63
    1e9a:	cd bf       	out	0x3d, r28	; 61
    1e9c:	ed 01       	movw	r28, r26
    1e9e:	08 95       	ret

00001ea0 <__ashldi3>:
    1ea0:	0f 93       	push	r16
    1ea2:	08 30       	cpi	r16, 0x08	; 8
    1ea4:	90 f0       	brcs	.+36     	; 0x1eca <__ashldi3+0x2a>
    1ea6:	98 2f       	mov	r25, r24
    1ea8:	87 2f       	mov	r24, r23
    1eaa:	76 2f       	mov	r23, r22
    1eac:	65 2f       	mov	r22, r21
    1eae:	54 2f       	mov	r21, r20
    1eb0:	43 2f       	mov	r20, r19
    1eb2:	32 2f       	mov	r19, r18
    1eb4:	22 27       	eor	r18, r18
    1eb6:	08 50       	subi	r16, 0x08	; 8
    1eb8:	f4 cf       	rjmp	.-24     	; 0x1ea2 <__ashldi3+0x2>
    1eba:	22 0f       	add	r18, r18
    1ebc:	33 1f       	adc	r19, r19
    1ebe:	44 1f       	adc	r20, r20
    1ec0:	55 1f       	adc	r21, r21
    1ec2:	66 1f       	adc	r22, r22
    1ec4:	77 1f       	adc	r23, r23
    1ec6:	88 1f       	adc	r24, r24
    1ec8:	99 1f       	adc	r25, r25
    1eca:	0a 95       	dec	r16
    1ecc:	b2 f7       	brpl	.-20     	; 0x1eba <__ashldi3+0x1a>
    1ece:	0f 91       	pop	r16
    1ed0:	08 95       	ret

00001ed2 <__adddi3>:
    1ed2:	2a 0d       	add	r18, r10
    1ed4:	3b 1d       	adc	r19, r11
    1ed6:	4c 1d       	adc	r20, r12
    1ed8:	5d 1d       	adc	r21, r13
    1eda:	6e 1d       	adc	r22, r14
    1edc:	7f 1d       	adc	r23, r15
    1ede:	80 1f       	adc	r24, r16
    1ee0:	91 1f       	adc	r25, r17
    1ee2:	08 95       	ret

00001ee4 <__adddi3_s8>:
    1ee4:	00 24       	eor	r0, r0
    1ee6:	a7 fd       	sbrc	r26, 7
    1ee8:	00 94       	com	r0
    1eea:	2a 0f       	add	r18, r26
    1eec:	30 1d       	adc	r19, r0
    1eee:	40 1d       	adc	r20, r0
    1ef0:	50 1d       	adc	r21, r0
    1ef2:	60 1d       	adc	r22, r0
    1ef4:	70 1d       	adc	r23, r0
    1ef6:	80 1d       	adc	r24, r0
    1ef8:	90 1d       	adc	r25, r0
    1efa:	08 95       	ret

00001efc <__subdi3>:
    1efc:	2a 19       	sub	r18, r10
    1efe:	3b 09       	sbc	r19, r11
    1f00:	4c 09       	sbc	r20, r12
    1f02:	5d 09       	sbc	r21, r13
    1f04:	6e 09       	sbc	r22, r14
    1f06:	7f 09       	sbc	r23, r15
    1f08:	80 0b       	sbc	r24, r16
    1f0a:	91 0b       	sbc	r25, r17
    1f0c:	08 95       	ret

00001f0e <__cmpdi2_s8>:
    1f0e:	00 24       	eor	r0, r0
    1f10:	a7 fd       	sbrc	r26, 7
    1f12:	00 94       	com	r0
    1f14:	2a 17       	cp	r18, r26
    1f16:	30 05       	cpc	r19, r0
    1f18:	40 05       	cpc	r20, r0
    1f1a:	50 05       	cpc	r21, r0
    1f1c:	60 05       	cpc	r22, r0
    1f1e:	70 05       	cpc	r23, r0
    1f20:	80 05       	cpc	r24, r0
    1f22:	90 05       	cpc	r25, r0
    1f24:	08 95       	ret

00001f26 <__ftoa_engine>:
    1f26:	28 30       	cpi	r18, 0x08	; 8
    1f28:	08 f0       	brcs	.+2      	; 0x1f2c <__ftoa_engine+0x6>
    1f2a:	27 e0       	ldi	r18, 0x07	; 7
    1f2c:	33 27       	eor	r19, r19
    1f2e:	da 01       	movw	r26, r20
    1f30:	99 0f       	add	r25, r25
    1f32:	31 1d       	adc	r19, r1
    1f34:	87 fd       	sbrc	r24, 7
    1f36:	91 60       	ori	r25, 0x01	; 1
    1f38:	00 96       	adiw	r24, 0x00	; 0
    1f3a:	61 05       	cpc	r22, r1
    1f3c:	71 05       	cpc	r23, r1
    1f3e:	39 f4       	brne	.+14     	; 0x1f4e <__ftoa_engine+0x28>
    1f40:	32 60       	ori	r19, 0x02	; 2
    1f42:	2e 5f       	subi	r18, 0xFE	; 254
    1f44:	3d 93       	st	X+, r19
    1f46:	30 e3       	ldi	r19, 0x30	; 48
    1f48:	2a 95       	dec	r18
    1f4a:	e1 f7       	brne	.-8      	; 0x1f44 <__ftoa_engine+0x1e>
    1f4c:	08 95       	ret
    1f4e:	9f 3f       	cpi	r25, 0xFF	; 255
    1f50:	30 f0       	brcs	.+12     	; 0x1f5e <__ftoa_engine+0x38>
    1f52:	80 38       	cpi	r24, 0x80	; 128
    1f54:	71 05       	cpc	r23, r1
    1f56:	61 05       	cpc	r22, r1
    1f58:	09 f0       	breq	.+2      	; 0x1f5c <__ftoa_engine+0x36>
    1f5a:	3c 5f       	subi	r19, 0xFC	; 252
    1f5c:	3c 5f       	subi	r19, 0xFC	; 252
    1f5e:	3d 93       	st	X+, r19
    1f60:	91 30       	cpi	r25, 0x01	; 1
    1f62:	08 f0       	brcs	.+2      	; 0x1f66 <__ftoa_engine+0x40>
    1f64:	80 68       	ori	r24, 0x80	; 128
    1f66:	91 1d       	adc	r25, r1
    1f68:	df 93       	push	r29
    1f6a:	cf 93       	push	r28
    1f6c:	1f 93       	push	r17
    1f6e:	0f 93       	push	r16
    1f70:	ff 92       	push	r15
    1f72:	ef 92       	push	r14
    1f74:	19 2f       	mov	r17, r25
    1f76:	98 7f       	andi	r25, 0xF8	; 248
    1f78:	96 95       	lsr	r25
    1f7a:	e9 2f       	mov	r30, r25
    1f7c:	96 95       	lsr	r25
    1f7e:	96 95       	lsr	r25
    1f80:	e9 0f       	add	r30, r25
    1f82:	ff 27       	eor	r31, r31
    1f84:	e6 53       	subi	r30, 0x36	; 54
    1f86:	ff 4f       	sbci	r31, 0xFF	; 255
    1f88:	99 27       	eor	r25, r25
    1f8a:	33 27       	eor	r19, r19
    1f8c:	ee 24       	eor	r14, r14
    1f8e:	ff 24       	eor	r15, r15
    1f90:	a7 01       	movw	r20, r14
    1f92:	e7 01       	movw	r28, r14
    1f94:	05 90       	lpm	r0, Z+
    1f96:	08 94       	sec
    1f98:	07 94       	ror	r0
    1f9a:	28 f4       	brcc	.+10     	; 0x1fa6 <__ftoa_engine+0x80>
    1f9c:	36 0f       	add	r19, r22
    1f9e:	e7 1e       	adc	r14, r23
    1fa0:	f8 1e       	adc	r15, r24
    1fa2:	49 1f       	adc	r20, r25
    1fa4:	51 1d       	adc	r21, r1
    1fa6:	66 0f       	add	r22, r22
    1fa8:	77 1f       	adc	r23, r23
    1faa:	88 1f       	adc	r24, r24
    1fac:	99 1f       	adc	r25, r25
    1fae:	06 94       	lsr	r0
    1fb0:	a1 f7       	brne	.-24     	; 0x1f9a <__ftoa_engine+0x74>
    1fb2:	05 90       	lpm	r0, Z+
    1fb4:	07 94       	ror	r0
    1fb6:	28 f4       	brcc	.+10     	; 0x1fc2 <__ftoa_engine+0x9c>
    1fb8:	e7 0e       	add	r14, r23
    1fba:	f8 1e       	adc	r15, r24
    1fbc:	49 1f       	adc	r20, r25
    1fbe:	56 1f       	adc	r21, r22
    1fc0:	c1 1d       	adc	r28, r1
    1fc2:	77 0f       	add	r23, r23
    1fc4:	88 1f       	adc	r24, r24
    1fc6:	99 1f       	adc	r25, r25
    1fc8:	66 1f       	adc	r22, r22
    1fca:	06 94       	lsr	r0
    1fcc:	a1 f7       	brne	.-24     	; 0x1fb6 <__ftoa_engine+0x90>
    1fce:	05 90       	lpm	r0, Z+
    1fd0:	07 94       	ror	r0
    1fd2:	28 f4       	brcc	.+10     	; 0x1fde <__ftoa_engine+0xb8>
    1fd4:	f8 0e       	add	r15, r24
    1fd6:	49 1f       	adc	r20, r25
    1fd8:	56 1f       	adc	r21, r22
    1fda:	c7 1f       	adc	r28, r23
    1fdc:	d1 1d       	adc	r29, r1
    1fde:	88 0f       	add	r24, r24
    1fe0:	99 1f       	adc	r25, r25
    1fe2:	66 1f       	adc	r22, r22
    1fe4:	77 1f       	adc	r23, r23
    1fe6:	06 94       	lsr	r0
    1fe8:	a1 f7       	brne	.-24     	; 0x1fd2 <__ftoa_engine+0xac>
    1fea:	05 90       	lpm	r0, Z+
    1fec:	07 94       	ror	r0
    1fee:	20 f4       	brcc	.+8      	; 0x1ff8 <__ftoa_engine+0xd2>
    1ff0:	49 0f       	add	r20, r25
    1ff2:	56 1f       	adc	r21, r22
    1ff4:	c7 1f       	adc	r28, r23
    1ff6:	d8 1f       	adc	r29, r24
    1ff8:	99 0f       	add	r25, r25
    1ffa:	66 1f       	adc	r22, r22
    1ffc:	77 1f       	adc	r23, r23
    1ffe:	88 1f       	adc	r24, r24
    2000:	06 94       	lsr	r0
    2002:	a9 f7       	brne	.-22     	; 0x1fee <__ftoa_engine+0xc8>
    2004:	84 91       	lpm	r24, Z
    2006:	10 95       	com	r17
    2008:	17 70       	andi	r17, 0x07	; 7
    200a:	41 f0       	breq	.+16     	; 0x201c <__ftoa_engine+0xf6>
    200c:	d6 95       	lsr	r29
    200e:	c7 95       	ror	r28
    2010:	57 95       	ror	r21
    2012:	47 95       	ror	r20
    2014:	f7 94       	ror	r15
    2016:	e7 94       	ror	r14
    2018:	1a 95       	dec	r17
    201a:	c1 f7       	brne	.-16     	; 0x200c <__ftoa_engine+0xe6>
    201c:	e0 e7       	ldi	r30, 0x70	; 112
    201e:	f0 e0       	ldi	r31, 0x00	; 0
    2020:	68 94       	set
    2022:	15 90       	lpm	r1, Z+
    2024:	15 91       	lpm	r17, Z+
    2026:	35 91       	lpm	r19, Z+
    2028:	65 91       	lpm	r22, Z+
    202a:	95 91       	lpm	r25, Z+
    202c:	05 90       	lpm	r0, Z+
    202e:	7f e2       	ldi	r23, 0x2F	; 47
    2030:	73 95       	inc	r23
    2032:	e1 18       	sub	r14, r1
    2034:	f1 0a       	sbc	r15, r17
    2036:	43 0b       	sbc	r20, r19
    2038:	56 0b       	sbc	r21, r22
    203a:	c9 0b       	sbc	r28, r25
    203c:	d0 09       	sbc	r29, r0
    203e:	c0 f7       	brcc	.-16     	; 0x2030 <__ftoa_engine+0x10a>
    2040:	e1 0c       	add	r14, r1
    2042:	f1 1e       	adc	r15, r17
    2044:	43 1f       	adc	r20, r19
    2046:	56 1f       	adc	r21, r22
    2048:	c9 1f       	adc	r28, r25
    204a:	d0 1d       	adc	r29, r0
    204c:	7e f4       	brtc	.+30     	; 0x206c <__ftoa_engine+0x146>
    204e:	70 33       	cpi	r23, 0x30	; 48
    2050:	11 f4       	brne	.+4      	; 0x2056 <__ftoa_engine+0x130>
    2052:	8a 95       	dec	r24
    2054:	e6 cf       	rjmp	.-52     	; 0x2022 <__ftoa_engine+0xfc>
    2056:	e8 94       	clt
    2058:	01 50       	subi	r16, 0x01	; 1
    205a:	30 f0       	brcs	.+12     	; 0x2068 <__ftoa_engine+0x142>
    205c:	08 0f       	add	r16, r24
    205e:	0a f4       	brpl	.+2      	; 0x2062 <__ftoa_engine+0x13c>
    2060:	00 27       	eor	r16, r16
    2062:	02 17       	cp	r16, r18
    2064:	08 f4       	brcc	.+2      	; 0x2068 <__ftoa_engine+0x142>
    2066:	20 2f       	mov	r18, r16
    2068:	23 95       	inc	r18
    206a:	02 2f       	mov	r16, r18
    206c:	7a 33       	cpi	r23, 0x3A	; 58
    206e:	28 f0       	brcs	.+10     	; 0x207a <__ftoa_engine+0x154>
    2070:	79 e3       	ldi	r23, 0x39	; 57
    2072:	7d 93       	st	X+, r23
    2074:	2a 95       	dec	r18
    2076:	e9 f7       	brne	.-6      	; 0x2072 <__ftoa_engine+0x14c>
    2078:	10 c0       	rjmp	.+32     	; 0x209a <__ftoa_engine+0x174>
    207a:	7d 93       	st	X+, r23
    207c:	2a 95       	dec	r18
    207e:	89 f6       	brne	.-94     	; 0x2022 <__ftoa_engine+0xfc>
    2080:	06 94       	lsr	r0
    2082:	97 95       	ror	r25
    2084:	67 95       	ror	r22
    2086:	37 95       	ror	r19
    2088:	17 95       	ror	r17
    208a:	17 94       	ror	r1
    208c:	e1 18       	sub	r14, r1
    208e:	f1 0a       	sbc	r15, r17
    2090:	43 0b       	sbc	r20, r19
    2092:	56 0b       	sbc	r21, r22
    2094:	c9 0b       	sbc	r28, r25
    2096:	d0 09       	sbc	r29, r0
    2098:	98 f0       	brcs	.+38     	; 0x20c0 <__ftoa_engine+0x19a>
    209a:	23 95       	inc	r18
    209c:	7e 91       	ld	r23, -X
    209e:	73 95       	inc	r23
    20a0:	7a 33       	cpi	r23, 0x3A	; 58
    20a2:	08 f0       	brcs	.+2      	; 0x20a6 <__ftoa_engine+0x180>
    20a4:	70 e3       	ldi	r23, 0x30	; 48
    20a6:	7c 93       	st	X, r23
    20a8:	20 13       	cpse	r18, r16
    20aa:	b8 f7       	brcc	.-18     	; 0x209a <__ftoa_engine+0x174>
    20ac:	7e 91       	ld	r23, -X
    20ae:	70 61       	ori	r23, 0x10	; 16
    20b0:	7d 93       	st	X+, r23
    20b2:	30 f0       	brcs	.+12     	; 0x20c0 <__ftoa_engine+0x19a>
    20b4:	83 95       	inc	r24
    20b6:	71 e3       	ldi	r23, 0x31	; 49
    20b8:	7d 93       	st	X+, r23
    20ba:	70 e3       	ldi	r23, 0x30	; 48
    20bc:	2a 95       	dec	r18
    20be:	e1 f7       	brne	.-8      	; 0x20b8 <__ftoa_engine+0x192>
    20c0:	11 24       	eor	r1, r1
    20c2:	ef 90       	pop	r14
    20c4:	ff 90       	pop	r15
    20c6:	0f 91       	pop	r16
    20c8:	1f 91       	pop	r17
    20ca:	cf 91       	pop	r28
    20cc:	df 91       	pop	r29
    20ce:	99 27       	eor	r25, r25
    20d0:	87 fd       	sbrc	r24, 7
    20d2:	90 95       	com	r25
    20d4:	08 95       	ret

000020d6 <strnlen_P>:
    20d6:	fc 01       	movw	r30, r24
    20d8:	05 90       	lpm	r0, Z+
    20da:	61 50       	subi	r22, 0x01	; 1
    20dc:	70 40       	sbci	r23, 0x00	; 0
    20de:	01 10       	cpse	r0, r1
    20e0:	d8 f7       	brcc	.-10     	; 0x20d8 <strnlen_P+0x2>
    20e2:	80 95       	com	r24
    20e4:	90 95       	com	r25
    20e6:	8e 0f       	add	r24, r30
    20e8:	9f 1f       	adc	r25, r31
    20ea:	08 95       	ret

000020ec <strnlen>:
    20ec:	fc 01       	movw	r30, r24
    20ee:	61 50       	subi	r22, 0x01	; 1
    20f0:	70 40       	sbci	r23, 0x00	; 0
    20f2:	01 90       	ld	r0, Z+
    20f4:	01 10       	cpse	r0, r1
    20f6:	d8 f7       	brcc	.-10     	; 0x20ee <strnlen+0x2>
    20f8:	80 95       	com	r24
    20fa:	90 95       	com	r25
    20fc:	8e 0f       	add	r24, r30
    20fe:	9f 1f       	adc	r25, r31
    2100:	08 95       	ret

00002102 <fputc>:
    2102:	0f 93       	push	r16
    2104:	1f 93       	push	r17
    2106:	cf 93       	push	r28
    2108:	df 93       	push	r29
    210a:	fb 01       	movw	r30, r22
    210c:	23 81       	ldd	r18, Z+3	; 0x03
    210e:	21 fd       	sbrc	r18, 1
    2110:	03 c0       	rjmp	.+6      	; 0x2118 <fputc+0x16>
    2112:	8f ef       	ldi	r24, 0xFF	; 255
    2114:	9f ef       	ldi	r25, 0xFF	; 255
    2116:	2c c0       	rjmp	.+88     	; 0x2170 <fputc+0x6e>
    2118:	22 ff       	sbrs	r18, 2
    211a:	16 c0       	rjmp	.+44     	; 0x2148 <fputc+0x46>
    211c:	46 81       	ldd	r20, Z+6	; 0x06
    211e:	57 81       	ldd	r21, Z+7	; 0x07
    2120:	24 81       	ldd	r18, Z+4	; 0x04
    2122:	35 81       	ldd	r19, Z+5	; 0x05
    2124:	42 17       	cp	r20, r18
    2126:	53 07       	cpc	r21, r19
    2128:	44 f4       	brge	.+16     	; 0x213a <fputc+0x38>
    212a:	a0 81       	ld	r26, Z
    212c:	b1 81       	ldd	r27, Z+1	; 0x01
    212e:	9d 01       	movw	r18, r26
    2130:	2f 5f       	subi	r18, 0xFF	; 255
    2132:	3f 4f       	sbci	r19, 0xFF	; 255
    2134:	31 83       	std	Z+1, r19	; 0x01
    2136:	20 83       	st	Z, r18
    2138:	8c 93       	st	X, r24
    213a:	26 81       	ldd	r18, Z+6	; 0x06
    213c:	37 81       	ldd	r19, Z+7	; 0x07
    213e:	2f 5f       	subi	r18, 0xFF	; 255
    2140:	3f 4f       	sbci	r19, 0xFF	; 255
    2142:	37 83       	std	Z+7, r19	; 0x07
    2144:	26 83       	std	Z+6, r18	; 0x06
    2146:	14 c0       	rjmp	.+40     	; 0x2170 <fputc+0x6e>
    2148:	8b 01       	movw	r16, r22
    214a:	ec 01       	movw	r28, r24
    214c:	fb 01       	movw	r30, r22
    214e:	00 84       	ldd	r0, Z+8	; 0x08
    2150:	f1 85       	ldd	r31, Z+9	; 0x09
    2152:	e0 2d       	mov	r30, r0
    2154:	09 95       	icall
    2156:	89 2b       	or	r24, r25
    2158:	e1 f6       	brne	.-72     	; 0x2112 <fputc+0x10>
    215a:	d8 01       	movw	r26, r16
    215c:	16 96       	adiw	r26, 0x06	; 6
    215e:	8d 91       	ld	r24, X+
    2160:	9c 91       	ld	r25, X
    2162:	17 97       	sbiw	r26, 0x07	; 7
    2164:	01 96       	adiw	r24, 0x01	; 1
    2166:	17 96       	adiw	r26, 0x07	; 7
    2168:	9c 93       	st	X, r25
    216a:	8e 93       	st	-X, r24
    216c:	16 97       	sbiw	r26, 0x06	; 6
    216e:	ce 01       	movw	r24, r28
    2170:	df 91       	pop	r29
    2172:	cf 91       	pop	r28
    2174:	1f 91       	pop	r17
    2176:	0f 91       	pop	r16
    2178:	08 95       	ret

0000217a <printf>:
    217a:	a0 e0       	ldi	r26, 0x00	; 0
    217c:	b0 e0       	ldi	r27, 0x00	; 0
    217e:	e3 ec       	ldi	r30, 0xC3	; 195
    2180:	f0 e1       	ldi	r31, 0x10	; 16
    2182:	0c 94 29 0f 	jmp	0x1e52	; 0x1e52 <__prologue_saves__+0x20>
    2186:	ae 01       	movw	r20, r28
    2188:	4b 5f       	subi	r20, 0xFB	; 251
    218a:	5f 4f       	sbci	r21, 0xFF	; 255
    218c:	fa 01       	movw	r30, r20
    218e:	61 91       	ld	r22, Z+
    2190:	71 91       	ld	r23, Z+
    2192:	af 01       	movw	r20, r30
    2194:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <__iob+0x2>
    2198:	90 91 cf 01 	lds	r25, 0x01CF	; 0x8001cf <__iob+0x3>
    219c:	0e 94 3d 0b 	call	0x167a	; 0x167a <vfprintf>
    21a0:	e2 e0       	ldi	r30, 0x02	; 2
    21a2:	0c 94 45 0f 	jmp	0x1e8a	; 0x1e8a <__epilogue_restores__+0x20>

000021a6 <__ultoa_invert>:
    21a6:	fa 01       	movw	r30, r20
    21a8:	aa 27       	eor	r26, r26
    21aa:	28 30       	cpi	r18, 0x08	; 8
    21ac:	51 f1       	breq	.+84     	; 0x2202 <__ultoa_invert+0x5c>
    21ae:	20 31       	cpi	r18, 0x10	; 16
    21b0:	81 f1       	breq	.+96     	; 0x2212 <__ultoa_invert+0x6c>
    21b2:	e8 94       	clt
    21b4:	6f 93       	push	r22
    21b6:	6e 7f       	andi	r22, 0xFE	; 254
    21b8:	6e 5f       	subi	r22, 0xFE	; 254
    21ba:	7f 4f       	sbci	r23, 0xFF	; 255
    21bc:	8f 4f       	sbci	r24, 0xFF	; 255
    21be:	9f 4f       	sbci	r25, 0xFF	; 255
    21c0:	af 4f       	sbci	r26, 0xFF	; 255
    21c2:	b1 e0       	ldi	r27, 0x01	; 1
    21c4:	3e d0       	rcall	.+124    	; 0x2242 <__ultoa_invert+0x9c>
    21c6:	b4 e0       	ldi	r27, 0x04	; 4
    21c8:	3c d0       	rcall	.+120    	; 0x2242 <__ultoa_invert+0x9c>
    21ca:	67 0f       	add	r22, r23
    21cc:	78 1f       	adc	r23, r24
    21ce:	89 1f       	adc	r24, r25
    21d0:	9a 1f       	adc	r25, r26
    21d2:	a1 1d       	adc	r26, r1
    21d4:	68 0f       	add	r22, r24
    21d6:	79 1f       	adc	r23, r25
    21d8:	8a 1f       	adc	r24, r26
    21da:	91 1d       	adc	r25, r1
    21dc:	a1 1d       	adc	r26, r1
    21de:	6a 0f       	add	r22, r26
    21e0:	71 1d       	adc	r23, r1
    21e2:	81 1d       	adc	r24, r1
    21e4:	91 1d       	adc	r25, r1
    21e6:	a1 1d       	adc	r26, r1
    21e8:	20 d0       	rcall	.+64     	; 0x222a <__ultoa_invert+0x84>
    21ea:	09 f4       	brne	.+2      	; 0x21ee <__ultoa_invert+0x48>
    21ec:	68 94       	set
    21ee:	3f 91       	pop	r19
    21f0:	2a e0       	ldi	r18, 0x0A	; 10
    21f2:	26 9f       	mul	r18, r22
    21f4:	11 24       	eor	r1, r1
    21f6:	30 19       	sub	r19, r0
    21f8:	30 5d       	subi	r19, 0xD0	; 208
    21fa:	31 93       	st	Z+, r19
    21fc:	de f6       	brtc	.-74     	; 0x21b4 <__ultoa_invert+0xe>
    21fe:	cf 01       	movw	r24, r30
    2200:	08 95       	ret
    2202:	46 2f       	mov	r20, r22
    2204:	47 70       	andi	r20, 0x07	; 7
    2206:	40 5d       	subi	r20, 0xD0	; 208
    2208:	41 93       	st	Z+, r20
    220a:	b3 e0       	ldi	r27, 0x03	; 3
    220c:	0f d0       	rcall	.+30     	; 0x222c <__ultoa_invert+0x86>
    220e:	c9 f7       	brne	.-14     	; 0x2202 <__ultoa_invert+0x5c>
    2210:	f6 cf       	rjmp	.-20     	; 0x21fe <__ultoa_invert+0x58>
    2212:	46 2f       	mov	r20, r22
    2214:	4f 70       	andi	r20, 0x0F	; 15
    2216:	40 5d       	subi	r20, 0xD0	; 208
    2218:	4a 33       	cpi	r20, 0x3A	; 58
    221a:	18 f0       	brcs	.+6      	; 0x2222 <__ultoa_invert+0x7c>
    221c:	49 5d       	subi	r20, 0xD9	; 217
    221e:	31 fd       	sbrc	r19, 1
    2220:	40 52       	subi	r20, 0x20	; 32
    2222:	41 93       	st	Z+, r20
    2224:	02 d0       	rcall	.+4      	; 0x222a <__ultoa_invert+0x84>
    2226:	a9 f7       	brne	.-22     	; 0x2212 <__ultoa_invert+0x6c>
    2228:	ea cf       	rjmp	.-44     	; 0x21fe <__ultoa_invert+0x58>
    222a:	b4 e0       	ldi	r27, 0x04	; 4
    222c:	a6 95       	lsr	r26
    222e:	97 95       	ror	r25
    2230:	87 95       	ror	r24
    2232:	77 95       	ror	r23
    2234:	67 95       	ror	r22
    2236:	ba 95       	dec	r27
    2238:	c9 f7       	brne	.-14     	; 0x222c <__ultoa_invert+0x86>
    223a:	00 97       	sbiw	r24, 0x00	; 0
    223c:	61 05       	cpc	r22, r1
    223e:	71 05       	cpc	r23, r1
    2240:	08 95       	ret
    2242:	9b 01       	movw	r18, r22
    2244:	ac 01       	movw	r20, r24
    2246:	0a 2e       	mov	r0, r26
    2248:	06 94       	lsr	r0
    224a:	57 95       	ror	r21
    224c:	47 95       	ror	r20
    224e:	37 95       	ror	r19
    2250:	27 95       	ror	r18
    2252:	ba 95       	dec	r27
    2254:	c9 f7       	brne	.-14     	; 0x2248 <__ultoa_invert+0xa2>
    2256:	62 0f       	add	r22, r18
    2258:	73 1f       	adc	r23, r19
    225a:	84 1f       	adc	r24, r20
    225c:	95 1f       	adc	r25, r21
    225e:	a0 1d       	adc	r26, r0
    2260:	08 95       	ret

00002262 <_exit>:
    2262:	f8 94       	cli

00002264 <__stop_program>:
    2264:	ff cf       	rjmp	.-2      	; 0x2264 <__stop_program>
