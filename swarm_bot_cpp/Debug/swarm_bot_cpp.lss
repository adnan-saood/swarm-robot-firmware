
swarm_bot_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00001c3c  00001cd0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c3c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006a  00800128  00800128  00001cf8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cf8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  00001d94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000268a  00000000  00000000  0000202c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015b3  00000000  00000000  000046b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000404d  00000000  00000000  00005c69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000820  00000000  00000000  00009cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000110ad  00000000  00000000  0000a4d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001720  00000000  00000000  0001b585  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0001cca5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000052f9  00000000  00000000  0001ce7d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 3c 02 	jmp	0x478	; 0x478 <__vector_1>
       8:	0c 94 38 03 	jmp	0x670	; 0x670 <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__vector_13>
      38:	0c 94 6e 05 	jmp	0xadc	; 0xadc <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e3       	ldi	r30, 0x3C	; 60
      7c:	fc e1       	ldi	r31, 0x1C	; 28
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a8 32       	cpi	r26, 0x28	; 40
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a8 e2       	ldi	r26, 0x28	; 40
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a2 39       	cpi	r26, 0x92	; 146
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 85 07 	call	0xf0a	; 0xf0a <main>
      9e:	0c 94 1c 0e 	jmp	0x1c38	; 0x1c38 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <pid_Init>:
 *  \param d_factor  Derivate term.
 *  \param pid  Struct with PID status.
 */
void pid_Init(int16_t p_factor, int16_t i_factor, int16_t d_factor, struct PID_DATA *pid)
// Set up PID controller parameters
{
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	fb 01       	movw	r30, r22
      ac:	e9 01       	movw	r28, r18
  // Start values for PID controller
  pid->sumError = 0;
      ae:	1a 82       	std	Y+2, r1	; 0x02
      b0:	1b 82       	std	Y+3, r1	; 0x03
      b2:	1c 82       	std	Y+4, r1	; 0x04
      b4:	1d 82       	std	Y+5, r1	; 0x05
  pid->lastProcessValue = 0;
      b6:	19 82       	std	Y+1, r1	; 0x01
      b8:	18 82       	st	Y, r1
  // Tuning constants for PID loop
  pid->P_Factor = p_factor;
      ba:	9f 83       	std	Y+7, r25	; 0x07
      bc:	8e 83       	std	Y+6, r24	; 0x06
  pid->I_Factor = i_factor;
      be:	79 87       	std	Y+9, r23	; 0x09
      c0:	68 87       	std	Y+8, r22	; 0x08
  pid->D_Factor = d_factor;
      c2:	5b 87       	std	Y+11, r21	; 0x0b
      c4:	4a 87       	std	Y+10, r20	; 0x0a
  // Limits to avoid overflow
  pid->maxError = MAX_INT / (pid->P_Factor + 1);
      c6:	bc 01       	movw	r22, r24
      c8:	6f 5f       	subi	r22, 0xFF	; 255
      ca:	7f 4f       	sbci	r23, 0xFF	; 255
      cc:	8f ef       	ldi	r24, 0xFF	; 255
      ce:	9f e7       	ldi	r25, 0x7F	; 127
      d0:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__divmodhi4>
      d4:	7d 87       	std	Y+13, r23	; 0x0d
      d6:	6c 87       	std	Y+12, r22	; 0x0c
  pid->maxSumError = MAX_I_TERM / (pid->I_Factor + 1);
      d8:	9f 01       	movw	r18, r30
      da:	2f 5f       	subi	r18, 0xFF	; 255
      dc:	3f 4f       	sbci	r19, 0xFF	; 255
      de:	03 2e       	mov	r0, r19
      e0:	00 0c       	add	r0, r0
      e2:	44 0b       	sbc	r20, r20
      e4:	55 0b       	sbc	r21, r21
      e6:	6f ef       	ldi	r22, 0xFF	; 255
      e8:	7f ef       	ldi	r23, 0xFF	; 255
      ea:	8f ef       	ldi	r24, 0xFF	; 255
      ec:	9f e3       	ldi	r25, 0x3F	; 63
      ee:	0e 94 85 09 	call	0x130a	; 0x130a <__divmodsi4>
      f2:	2e 87       	std	Y+14, r18	; 0x0e
      f4:	3f 87       	std	Y+15, r19	; 0x0f
      f6:	48 8b       	std	Y+16, r20	; 0x10
      f8:	59 8b       	std	Y+17, r21	; 0x11
}
      fa:	df 91       	pop	r29
      fc:	cf 91       	pop	r28
      fe:	08 95       	ret

00000100 <pid_Controller>:
 *  \param setPoint  Desired value.
 *  \param processValue  Measured value.
 *  \param pid_st  PID status struct.
 */
int16_t pid_Controller(int16_t setPoint, int16_t processValue, struct PID_DATA *pid_st)
{
     100:	ef 92       	push	r14
     102:	ff 92       	push	r15
     104:	0f 93       	push	r16
     106:	1f 93       	push	r17
     108:	cf 93       	push	r28
     10a:	df 93       	push	r29
     10c:	8b 01       	movw	r16, r22
     10e:	fa 01       	movw	r30, r20
  int16_t error, p_term, d_term;
  int32_t i_term, ret, temp;

  error = setPoint - processValue;
     110:	86 1b       	sub	r24, r22
     112:	97 0b       	sbc	r25, r23

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
     114:	24 85       	ldd	r18, Z+12	; 0x0c
     116:	35 85       	ldd	r19, Z+13	; 0x0d
     118:	28 17       	cp	r18, r24
     11a:	39 07       	cpc	r19, r25
     11c:	84 f0       	brlt	.+32     	; 0x13e <pid_Controller+0x3e>
    p_term = MAX_INT;
  }
  else if (error < -pid_st->maxError){
     11e:	31 95       	neg	r19
     120:	21 95       	neg	r18
     122:	31 09       	sbc	r19, r1
     124:	82 17       	cp	r24, r18
     126:	93 07       	cpc	r25, r19
     128:	6c f0       	brlt	.+26     	; 0x144 <pid_Controller+0x44>
    p_term = -MAX_INT;
  }
  else{
    p_term = pid_st->P_Factor * error;
     12a:	26 81       	ldd	r18, Z+6	; 0x06
     12c:	37 81       	ldd	r19, Z+7	; 0x07
     12e:	82 9f       	mul	r24, r18
     130:	e0 01       	movw	r28, r0
     132:	83 9f       	mul	r24, r19
     134:	d0 0d       	add	r29, r0
     136:	92 9f       	mul	r25, r18
     138:	d0 0d       	add	r29, r0
     13a:	11 24       	eor	r1, r1
     13c:	05 c0       	rjmp	.+10     	; 0x148 <pid_Controller+0x48>

  error = setPoint - processValue;

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
    p_term = MAX_INT;
     13e:	cf ef       	ldi	r28, 0xFF	; 255
     140:	df e7       	ldi	r29, 0x7F	; 127
     142:	02 c0       	rjmp	.+4      	; 0x148 <pid_Controller+0x48>
  }
  else if (error < -pid_st->maxError){
    p_term = -MAX_INT;
     144:	c1 e0       	ldi	r28, 0x01	; 1
     146:	d0 e8       	ldi	r29, 0x80	; 128
  else{
    p_term = pid_st->P_Factor * error;
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
     148:	09 2e       	mov	r0, r25
     14a:	00 0c       	add	r0, r0
     14c:	aa 0b       	sbc	r26, r26
     14e:	bb 0b       	sbc	r27, r27
     150:	42 81       	ldd	r20, Z+2	; 0x02
     152:	53 81       	ldd	r21, Z+3	; 0x03
     154:	64 81       	ldd	r22, Z+4	; 0x04
     156:	75 81       	ldd	r23, Z+5	; 0x05
     158:	9a 01       	movw	r18, r20
     15a:	ab 01       	movw	r20, r22
     15c:	28 0f       	add	r18, r24
     15e:	39 1f       	adc	r19, r25
     160:	4a 1f       	adc	r20, r26
     162:	5b 1f       	adc	r21, r27
  if(temp > pid_st->maxSumError){
     164:	86 85       	ldd	r24, Z+14	; 0x0e
     166:	97 85       	ldd	r25, Z+15	; 0x0f
     168:	a0 89       	ldd	r26, Z+16	; 0x10
     16a:	b1 89       	ldd	r27, Z+17	; 0x11
     16c:	82 17       	cp	r24, r18
     16e:	93 07       	cpc	r25, r19
     170:	a4 07       	cpc	r26, r20
     172:	b5 07       	cpc	r27, r21
     174:	4c f4       	brge	.+18     	; 0x188 <pid_Controller+0x88>
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
     176:	82 83       	std	Z+2, r24	; 0x02
     178:	93 83       	std	Z+3, r25	; 0x03
     17a:	a4 83       	std	Z+4, r26	; 0x04
     17c:	b5 83       	std	Z+5, r27	; 0x05
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
     17e:	6f ef       	ldi	r22, 0xFF	; 255
     180:	7f ef       	ldi	r23, 0xFF	; 255
     182:	8f ef       	ldi	r24, 0xFF	; 255
     184:	9f e3       	ldi	r25, 0x3F	; 63
     186:	1d c0       	rjmp	.+58     	; 0x1c2 <pid_Controller+0xc2>
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
     188:	b0 95       	com	r27
     18a:	a0 95       	com	r26
     18c:	90 95       	com	r25
     18e:	81 95       	neg	r24
     190:	9f 4f       	sbci	r25, 0xFF	; 255
     192:	af 4f       	sbci	r26, 0xFF	; 255
     194:	bf 4f       	sbci	r27, 0xFF	; 255
     196:	28 17       	cp	r18, r24
     198:	39 07       	cpc	r19, r25
     19a:	4a 07       	cpc	r20, r26
     19c:	5b 07       	cpc	r21, r27
     19e:	4c f4       	brge	.+18     	; 0x1b2 <pid_Controller+0xb2>
    i_term = -MAX_I_TERM;
    pid_st->sumError = -pid_st->maxSumError;
     1a0:	82 83       	std	Z+2, r24	; 0x02
     1a2:	93 83       	std	Z+3, r25	; 0x03
     1a4:	a4 83       	std	Z+4, r26	; 0x04
     1a6:	b5 83       	std	Z+5, r27	; 0x05
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
    i_term = -MAX_I_TERM;
     1a8:	61 e0       	ldi	r22, 0x01	; 1
     1aa:	70 e0       	ldi	r23, 0x00	; 0
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 ec       	ldi	r25, 0xC0	; 192
     1b0:	08 c0       	rjmp	.+16     	; 0x1c2 <pid_Controller+0xc2>
    pid_st->sumError = -pid_st->maxSumError;
  }
  else{
    pid_st->sumError = temp;
     1b2:	22 83       	std	Z+2, r18	; 0x02
     1b4:	33 83       	std	Z+3, r19	; 0x03
     1b6:	44 83       	std	Z+4, r20	; 0x04
     1b8:	55 83       	std	Z+5, r21	; 0x05
    i_term = pid_st->I_Factor * pid_st->sumError;
     1ba:	a0 85       	ldd	r26, Z+8	; 0x08
     1bc:	b1 85       	ldd	r27, Z+9	; 0x09
     1be:	0e 94 a4 09 	call	0x1348	; 0x1348 <__mulshisi3>
  }

  // Calculate Dterm
  d_term = pid_st->D_Factor * (pid_st->lastProcessValue - processValue);
     1c2:	20 81       	ld	r18, Z
     1c4:	31 81       	ldd	r19, Z+1	; 0x01
     1c6:	20 1b       	sub	r18, r16
     1c8:	31 0b       	sbc	r19, r17
     1ca:	a2 85       	ldd	r26, Z+10	; 0x0a
     1cc:	b3 85       	ldd	r27, Z+11	; 0x0b
     1ce:	2a 9f       	mul	r18, r26
     1d0:	70 01       	movw	r14, r0
     1d2:	2b 9f       	mul	r18, r27
     1d4:	f0 0c       	add	r15, r0
     1d6:	3a 9f       	mul	r19, r26
     1d8:	f0 0c       	add	r15, r0
     1da:	11 24       	eor	r1, r1

  pid_st->lastProcessValue = processValue;
     1dc:	11 83       	std	Z+1, r17	; 0x01
     1de:	00 83       	st	Z, r16

  ret = (p_term + i_term + d_term) / SCALING_FACTOR;
     1e0:	8e 01       	movw	r16, r28
     1e2:	dd 0f       	add	r29, r29
     1e4:	22 0b       	sbc	r18, r18
     1e6:	33 0b       	sbc	r19, r19
     1e8:	ab 01       	movw	r20, r22
     1ea:	bc 01       	movw	r22, r24
     1ec:	40 0f       	add	r20, r16
     1ee:	51 1f       	adc	r21, r17
     1f0:	62 1f       	adc	r22, r18
     1f2:	73 1f       	adc	r23, r19
     1f4:	c7 01       	movw	r24, r14
     1f6:	ff 0c       	add	r15, r15
     1f8:	aa 0b       	sbc	r26, r26
     1fa:	bb 0b       	sbc	r27, r27
     1fc:	48 0f       	add	r20, r24
     1fe:	59 1f       	adc	r21, r25
     200:	6a 1f       	adc	r22, r26
     202:	7b 1f       	adc	r23, r27
     204:	db 01       	movw	r26, r22
     206:	ca 01       	movw	r24, r20
     208:	77 23       	and	r23, r23
     20a:	24 f4       	brge	.+8      	; 0x214 <pid_Controller+0x114>
     20c:	81 58       	subi	r24, 0x81	; 129
     20e:	9f 4f       	sbci	r25, 0xFF	; 255
     210:	af 4f       	sbci	r26, 0xFF	; 255
     212:	bf 4f       	sbci	r27, 0xFF	; 255
     214:	68 94       	set
     216:	16 f8       	bld	r1, 6
     218:	b5 95       	asr	r27
     21a:	a7 95       	ror	r26
     21c:	97 95       	ror	r25
     21e:	87 95       	ror	r24
     220:	16 94       	lsr	r1
     222:	d1 f7       	brne	.-12     	; 0x218 <pid_Controller+0x118>
     224:	81 30       	cpi	r24, 0x01	; 1
     226:	20 e8       	ldi	r18, 0x80	; 128
     228:	92 07       	cpc	r25, r18
     22a:	2f ef       	ldi	r18, 0xFF	; 255
     22c:	a2 07       	cpc	r26, r18
     22e:	b2 07       	cpc	r27, r18
     230:	24 f4       	brge	.+8      	; 0x23a <pid_Controller+0x13a>
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	90 e8       	ldi	r25, 0x80	; 128
     236:	af ef       	ldi	r26, 0xFF	; 255
     238:	bf ef       	ldi	r27, 0xFF	; 255
  }
  else if(ret < -MAX_INT){
    ret = -MAX_INT;
  }

  return((int16_t)ret);
     23a:	81 15       	cp	r24, r1
     23c:	20 e8       	ldi	r18, 0x80	; 128
     23e:	92 07       	cpc	r25, r18
     240:	a1 05       	cpc	r26, r1
     242:	b1 05       	cpc	r27, r1
     244:	24 f0       	brlt	.+8      	; 0x24e <pid_Controller+0x14e>
     246:	8f ef       	ldi	r24, 0xFF	; 255
     248:	9f e7       	ldi	r25, 0x7F	; 127
     24a:	a0 e0       	ldi	r26, 0x00	; 0
     24c:	b0 e0       	ldi	r27, 0x00	; 0
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	1f 91       	pop	r17
     254:	0f 91       	pop	r16
     256:	ff 90       	pop	r15
     258:	ef 90       	pop	r14
     25a:	08 95       	ret

0000025c <_adc_init>:
#include <__adc__.h>

void _adc_init(void)
{
	ADMUX = (1 << REFS0); // AVCC
     25c:	ec e7       	ldi	r30, 0x7C	; 124
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 e4       	ldi	r24, 0x40	; 64
     262:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) | (1 << REFS1); //1v1
	
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN); // Turn ADC On sample: 16M/128 = 125KHz
     264:	aa e7       	ldi	r26, 0x7A	; 122
     266:	b0 e0       	ldi	r27, 0x00	; 0
     268:	8c 91       	ld	r24, X
     26a:	87 68       	ori	r24, 0x87	; 135
     26c:	8c 93       	st	X, r24
	ADMUX |= (0 << ADLAR);
     26e:	80 81       	ld	r24, Z
     270:	80 83       	st	Z, r24
     272:	08 95       	ret

00000274 <_adc_read>:
	//ADMUX |= (1 << ADLAR); 8 bit
}

int _adc_read(uint8_t channel)
{
	ADMUX |= channel & 0x0f;
     274:	ec e7       	ldi	r30, 0x7C	; 124
     276:	f0 e0       	ldi	r31, 0x00	; 0
     278:	90 81       	ld	r25, Z
     27a:	8f 70       	andi	r24, 0x0F	; 15
     27c:	98 2b       	or	r25, r24
     27e:	90 83       	st	Z, r25
	ADCSRA |= (1 << ADSC);
     280:	ea e7       	ldi	r30, 0x7A	; 122
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	80 64       	ori	r24, 0x40	; 64
     288:	80 83       	st	Z, r24
	while(ADCSRA & (1 << ADSC));
     28a:	80 81       	ld	r24, Z
     28c:	86 fd       	sbrc	r24, 6
     28e:	fd cf       	rjmp	.-6      	; 0x28a <_adc_read+0x16>
	return ADCW;
     290:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     294:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     298:	08 95       	ret

0000029a <_ref>:
	return 0;
}

void _command(uint8_t motor, int16_t inputValue)
{
	_set_speed(motor,inputValue);
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	29 f0       	breq	.+10     	; 0x2a8 <_ref+0xe>
     29e:	82 30       	cpi	r24, 0x02	; 2
     2a0:	31 f0       	breq	.+12     	; 0x2ae <_ref+0x14>
     2a2:	80 e0       	ldi	r24, 0x00	; 0
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	08 95       	ret
     2a8:	84 e1       	ldi	r24, 0x14	; 20
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	08 95       	ret
     2ae:	8e e1       	ldi	r24, 0x1E	; 30
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	08 95       	ret

000002b4 <_sens>:
     2b4:	81 30       	cpi	r24, 0x01	; 1
     2b6:	49 f4       	brne	.+18     	; 0x2ca <_sens+0x16>
     2b8:	0e 94 34 04 	call	0x868	; 0x868 <_omega_from_encA>
     2bc:	2d ec       	ldi	r18, 0xCD	; 205
     2be:	3c ec       	ldi	r19, 0xCC	; 204
     2c0:	48 e1       	ldi	r20, 0x18	; 24
     2c2:	51 e4       	ldi	r21, 0x41	; 65
     2c4:	0e 94 04 09 	call	0x1208	; 0x1208 <__mulsf3>
     2c8:	08 95       	ret
     2ca:	82 30       	cpi	r24, 0x02	; 2
     2cc:	49 f4       	brne	.+18     	; 0x2e0 <_sens+0x2c>
     2ce:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_omega_from_encB>
     2d2:	2d ec       	ldi	r18, 0xCD	; 205
     2d4:	3c ec       	ldi	r19, 0xCC	; 204
     2d6:	48 e1       	ldi	r20, 0x18	; 24
     2d8:	51 e4       	ldi	r21, 0x41	; 65
     2da:	0e 94 04 09 	call	0x1208	; 0x1208 <__mulsf3>
     2de:	08 95       	ret
     2e0:	60 e0       	ldi	r22, 0x00	; 0
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	80 e8       	ldi	r24, 0x80	; 128
     2e6:	9f eb       	ldi	r25, 0xBF	; 191
     2e8:	08 95       	ret

000002ea <_break_motor>:
     2ea:	81 30       	cpi	r24, 0x01	; 1
     2ec:	49 f4       	brne	.+18     	; 0x300 <_break_motor+0x16>
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	0e 94 07 06 	call	0xc0e	; 0xc0e <_set_pwm_0A>
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 1f 06 	call	0xc3e	; 0xc3e <_set_pwm_1A>
     2fe:	08 95       	ret
     300:	82 30       	cpi	r24, 0x02	; 2
     302:	41 f4       	brne	.+16     	; 0x314 <_break_motor+0x2a>
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	0e 94 13 06 	call	0xc26	; 0xc26 <_set_pwm_0B>
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	0e 94 2e 06 	call	0xc5c	; 0xc5c <_set_pwm_1B>
     314:	08 95       	ret

00000316 <_set_speed>:
     316:	cf 93       	push	r28
     318:	df 93       	push	r29
     31a:	eb 01       	movw	r28, r22
     31c:	20 97       	sbiw	r28, 0x00	; 0
     31e:	19 f4       	brne	.+6      	; 0x326 <_set_speed+0x10>
     320:	0e 94 75 01 	call	0x2ea	; 0x2ea <_break_motor>
     324:	32 c0       	rjmp	.+100    	; 0x38a <_set_speed+0x74>
     326:	dd 23       	and	r29, r29
     328:	d4 f4       	brge	.+52     	; 0x35e <_set_speed+0x48>
     32a:	81 30       	cpi	r24, 0x01	; 1
     32c:	59 f4       	brne	.+22     	; 0x344 <_set_speed+0x2e>
     32e:	88 27       	eor	r24, r24
     330:	99 27       	eor	r25, r25
     332:	86 1b       	sub	r24, r22
     334:	97 0b       	sbc	r25, r23
     336:	0e 94 07 06 	call	0xc0e	; 0xc0e <_set_pwm_0A>
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 1f 06 	call	0xc3e	; 0xc3e <_set_pwm_1A>
     342:	23 c0       	rjmp	.+70     	; 0x38a <_set_speed+0x74>
     344:	82 30       	cpi	r24, 0x02	; 2
     346:	09 f5       	brne	.+66     	; 0x38a <_set_speed+0x74>
     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 13 06 	call	0xc26	; 0xc26 <_set_pwm_0B>
     350:	88 27       	eor	r24, r24
     352:	99 27       	eor	r25, r25
     354:	8c 1b       	sub	r24, r28
     356:	9d 0b       	sbc	r25, r29
     358:	0e 94 2e 06 	call	0xc5c	; 0xc5c <_set_pwm_1B>
     35c:	16 c0       	rjmp	.+44     	; 0x38a <_set_speed+0x74>
     35e:	1c 16       	cp	r1, r28
     360:	1d 06       	cpc	r1, r29
     362:	9c f4       	brge	.+38     	; 0x38a <_set_speed+0x74>
     364:	81 30       	cpi	r24, 0x01	; 1
     366:	41 f4       	brne	.+16     	; 0x378 <_set_speed+0x62>
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 07 06 	call	0xc0e	; 0xc0e <_set_pwm_0A>
     370:	ce 01       	movw	r24, r28
     372:	0e 94 1f 06 	call	0xc3e	; 0xc3e <_set_pwm_1A>
     376:	09 c0       	rjmp	.+18     	; 0x38a <_set_speed+0x74>
     378:	82 30       	cpi	r24, 0x02	; 2
     37a:	39 f4       	brne	.+14     	; 0x38a <_set_speed+0x74>
     37c:	cb 01       	movw	r24, r22
     37e:	0e 94 13 06 	call	0xc26	; 0xc26 <_set_pwm_0B>
     382:	80 e0       	ldi	r24, 0x00	; 0
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 2e 06 	call	0xc5c	; 0xc5c <_set_pwm_1B>
     38a:	ce 01       	movw	r24, r28
     38c:	df 91       	pop	r29
     38e:	cf 91       	pop	r28
     390:	08 95       	ret

00000392 <_init_dc_control>:
	}
}

void _init_dc_control(void)
{
	pid_Init(K_P * SCALING_FACTOR, K_I * SCALING_FACTOR , K_D * SCALING_FACTOR , &pidData);
     392:	28 e2       	ldi	r18, 0x28	; 40
     394:	31 e0       	ldi	r19, 0x01	; 1
     396:	40 e4       	ldi	r20, 0x40	; 64
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	66 e2       	ldi	r22, 0x26	; 38
     39c:	70 e0       	ldi	r23, 0x00	; 0
     39e:	80 e0       	ldi	r24, 0x00	; 0
     3a0:	92 e0       	ldi	r25, 0x02	; 2
     3a2:	0e 94 53 00 	call	0xa6	; 0xa6 <pid_Init>
	sei();
     3a6:	78 94       	sei
     3a8:	08 95       	ret

000003aa <_update_controller>:
}

int16_t _update_controller(uint8_t motor)
{
     3aa:	df 92       	push	r13
     3ac:	ef 92       	push	r14
     3ae:	ff 92       	push	r15
     3b0:	0f 93       	push	r16
     3b2:	1f 93       	push	r17
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	18 2f       	mov	r17, r24
	int16_t ref, sen,u;
	ref = _ref(motor);
     3ba:	0e 94 4d 01 	call	0x29a	; 0x29a <_ref>
     3be:	08 2f       	mov	r16, r24
     3c0:	f9 2e       	mov	r15, r25
	sen =   (int16_t) _sens(motor);
     3c2:	81 2f       	mov	r24, r17
     3c4:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_sens>
     3c8:	0e 94 02 08 	call	0x1004	; 0x1004 <__fixsfsi>
     3cc:	e6 2e       	mov	r14, r22
     3ce:	d7 2e       	mov	r13, r23
	u = pid_Controller(ref,sen, &pidData);
     3d0:	48 e2       	ldi	r20, 0x28	; 40
     3d2:	51 e0       	ldi	r21, 0x01	; 1
     3d4:	80 2f       	mov	r24, r16
     3d6:	9f 2d       	mov	r25, r15
     3d8:	0e 94 80 00 	call	0x100	; 0x100 <pid_Controller>
     3dc:	d8 2f       	mov	r29, r24
     3de:	c9 2f       	mov	r28, r25
	return 0;
}

void _command(uint8_t motor, int16_t inputValue)
{
	_set_speed(motor,inputValue);
     3e0:	68 2f       	mov	r22, r24
     3e2:	79 2f       	mov	r23, r25
     3e4:	81 2f       	mov	r24, r17
     3e6:	0e 94 8b 01 	call	0x316	; 0x316 <_set_speed>
	sen =   (int16_t) _sens(motor);
	u = pid_Controller(ref,sen, &pidData);
	_command(motor, u);
	if (DEBUG_CONTROLLER)
	{
		printf("%d - %d - %d\n",ref, sen, u);
     3ea:	cf 93       	push	r28
     3ec:	df 93       	push	r29
     3ee:	df 92       	push	r13
     3f0:	ef 92       	push	r14
     3f2:	ff 92       	push	r15
     3f4:	0f 93       	push	r16
     3f6:	8a e1       	ldi	r24, 0x1A	; 26
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	9f 93       	push	r25
     3fc:	8f 93       	push	r24
     3fe:	0e 94 3e 0b 	call	0x167c	; 0x167c <printf>
	}
	return u;
     402:	8d b7       	in	r24, 0x3d	; 61
     404:	9e b7       	in	r25, 0x3e	; 62
     406:	08 96       	adiw	r24, 0x08	; 8
     408:	0f b6       	in	r0, 0x3f	; 63
     40a:	f8 94       	cli
     40c:	9e bf       	out	0x3e, r25	; 62
     40e:	0f be       	out	0x3f, r0	; 63
     410:	8d bf       	out	0x3d, r24	; 61
}
     412:	8d 2f       	mov	r24, r29
     414:	9c 2f       	mov	r25, r28
     416:	df 91       	pop	r29
     418:	cf 91       	pop	r28
     41a:	1f 91       	pop	r17
     41c:	0f 91       	pop	r16
     41e:	ff 90       	pop	r15
     420:	ef 90       	pop	r14
     422:	df 90       	pop	r13
     424:	08 95       	ret

00000426 <_dc_controller_loop>:

int16_t _dc_controller_loop(void)
{
	if(_controler_flag_A)
     426:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <_controler_flag_A>
     42a:	88 23       	and	r24, r24
     42c:	29 f0       	breq	.+10     	; 0x438 <_dc_controller_loop+0x12>
	{
		 _update_controller(MA);
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_update_controller>
		 _controler_flag_A = 0;
     434:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <_controler_flag_A>
	}
	if(_controler_flag_B)
     438:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_controler_flag_B>
     43c:	88 23       	and	r24, r24
     43e:	29 f0       	breq	.+10     	; 0x44a <_dc_controller_loop+0x24>
	{
		_update_controller(MB);
     440:	82 e0       	ldi	r24, 0x02	; 2
     442:	0e 94 d5 01 	call	0x3aa	; 0x3aa <_update_controller>
		_controler_flag_B = 0;
     446:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <_controler_flag_B>
	}
	return 0;
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	08 95       	ret

00000450 <_interrupt0_enable>:

#include <__INT_0_1__.h>

void _interrupt0_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT0);
     450:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1 << ISC00) | (1 << ISC01);
     452:	e9 e6       	ldi	r30, 0x69	; 105
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 81       	ld	r24, Z
     458:	83 60       	ori	r24, 0x03	; 3
     45a:	80 83       	st	Z, r24
	sei();
     45c:	78 94       	sei
     45e:	08 95       	ret

00000460 <_interrupt1_enable>:
}
void _interrupt1_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT1);
     460:	e9 9a       	sbi	0x1d, 1	; 29
	EICRA |= (trigger << ISC10);
     462:	e9 e6       	ldi	r30, 0x69	; 105
     464:	f0 e0       	ldi	r31, 0x00	; 0
     466:	20 81       	ld	r18, Z
     468:	34 e0       	ldi	r19, 0x04	; 4
     46a:	83 9f       	mul	r24, r19
     46c:	c0 01       	movw	r24, r0
     46e:	11 24       	eor	r1, r1
     470:	82 2b       	or	r24, r18
     472:	80 83       	st	Z, r24
	sei();
     474:	78 94       	sei
     476:	08 95       	ret

00000478 <__vector_1>:
	return _omega_from_PMA() * 0.3f + _omega_from_encA() * 0.7f;
}
float _omega_comp_B(void)
{
	return _omega_from_PMB() * 0.3f + _omega_from_encB() * 0.7f;
}
     478:	1f 92       	push	r1
     47a:	0f 92       	push	r0
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	0f 92       	push	r0
     480:	11 24       	eor	r1, r1
     482:	2f 92       	push	r2
     484:	3f 92       	push	r3
     486:	4f 92       	push	r4
     488:	5f 92       	push	r5
     48a:	6f 92       	push	r6
     48c:	7f 92       	push	r7
     48e:	8f 92       	push	r8
     490:	9f 92       	push	r9
     492:	af 92       	push	r10
     494:	bf 92       	push	r11
     496:	cf 92       	push	r12
     498:	df 92       	push	r13
     49a:	ef 92       	push	r14
     49c:	ff 92       	push	r15
     49e:	0f 93       	push	r16
     4a0:	1f 93       	push	r17
     4a2:	2f 93       	push	r18
     4a4:	3f 93       	push	r19
     4a6:	4f 93       	push	r20
     4a8:	5f 93       	push	r21
     4aa:	6f 93       	push	r22
     4ac:	7f 93       	push	r23
     4ae:	8f 93       	push	r24
     4b0:	9f 93       	push	r25
     4b2:	af 93       	push	r26
     4b4:	bf 93       	push	r27
     4b6:	cf 93       	push	r28
     4b8:	df 93       	push	r29
     4ba:	ef 93       	push	r30
     4bc:	ff 93       	push	r31
     4be:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <_enca_count>
     4c2:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <_enca_count+0x1>
     4c6:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <_enca_count+0x2>
     4ca:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <_enca_count+0x3>
     4ce:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <_enca_count+0x4>
     4d2:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <_enca_count+0x5>
     4d6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <_enca_count+0x6>
     4da:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <_enca_count+0x7>
     4de:	a0 e0       	ldi	r26, 0x00	; 0
     4e0:	0e 94 c1 09 	call	0x1382	; 0x1382 <__cmpdi2_s8>
     4e4:	a9 f4       	brne	.+42     	; 0x510 <__vector_1+0x98>
     4e6:	0e 94 4c 06 	call	0xc98	; 0xc98 <_micros0>
     4ea:	dc 01       	movw	r26, r24
     4ec:	cb 01       	movw	r24, r22
     4ee:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <_prev_tick_timeA>
     4f2:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <_prev_tick_timeA+0x1>
     4f6:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <_prev_tick_timeA+0x2>
     4fa:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <_prev_tick_timeA+0x3>
     4fe:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <_prev_tick_timeA+0x4>
     502:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <_prev_tick_timeA+0x5>
     506:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <_prev_tick_timeA+0x6>
     50a:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_prev_tick_timeA+0x7>
     50e:	3e c0       	rjmp	.+124    	; 0x58c <__vector_1+0x114>
     510:	0e 94 4c 06 	call	0xc98	; 0xc98 <_micros0>
     514:	1b 01       	movw	r2, r22
     516:	2c 01       	movw	r4, r24
     518:	a0 90 5e 01 	lds	r10, 0x015E	; 0x80015e <_prev_tick_timeA>
     51c:	b0 90 5f 01 	lds	r11, 0x015F	; 0x80015f <_prev_tick_timeA+0x1>
     520:	c0 90 60 01 	lds	r12, 0x0160	; 0x800160 <_prev_tick_timeA+0x2>
     524:	d0 90 61 01 	lds	r13, 0x0161	; 0x800161 <_prev_tick_timeA+0x3>
     528:	e0 90 62 01 	lds	r14, 0x0162	; 0x800162 <_prev_tick_timeA+0x4>
     52c:	f0 90 63 01 	lds	r15, 0x0163	; 0x800163 <_prev_tick_timeA+0x5>
     530:	00 91 64 01 	lds	r16, 0x0164	; 0x800164 <_prev_tick_timeA+0x6>
     534:	10 91 65 01 	lds	r17, 0x0165	; 0x800165 <_prev_tick_timeA+0x7>
     538:	26 2f       	mov	r18, r22
     53a:	33 2d       	mov	r19, r3
     53c:	44 2d       	mov	r20, r4
     53e:	55 2d       	mov	r21, r5
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	80 e0       	ldi	r24, 0x00	; 0
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subdi3>
     54c:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <_tick_timeA>
     550:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <_tick_timeA+0x1>
     554:	40 93 70 01 	sts	0x0170, r20	; 0x800170 <_tick_timeA+0x2>
     558:	50 93 71 01 	sts	0x0171, r21	; 0x800171 <_tick_timeA+0x3>
     55c:	60 93 72 01 	sts	0x0172, r22	; 0x800172 <_tick_timeA+0x4>
     560:	70 93 73 01 	sts	0x0173, r23	; 0x800173 <_tick_timeA+0x5>
     564:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <_tick_timeA+0x6>
     568:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <_tick_timeA+0x7>
     56c:	20 92 5e 01 	sts	0x015E, r2	; 0x80015e <_prev_tick_timeA>
     570:	30 92 5f 01 	sts	0x015F, r3	; 0x80015f <_prev_tick_timeA+0x1>
     574:	40 92 60 01 	sts	0x0160, r4	; 0x800160 <_prev_tick_timeA+0x2>
     578:	50 92 61 01 	sts	0x0161, r5	; 0x800161 <_prev_tick_timeA+0x3>
     57c:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <_prev_tick_timeA+0x4>
     580:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <_prev_tick_timeA+0x5>
     584:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <_prev_tick_timeA+0x6>
     588:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_prev_tick_timeA+0x7>
     58c:	4c 9b       	sbis	0x09, 4	; 9
     58e:	27 c0       	rjmp	.+78     	; 0x5de <__vector_1+0x166>
     590:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <_enca_count>
     594:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <_enca_count+0x1>
     598:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <_enca_count+0x2>
     59c:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <_enca_count+0x3>
     5a0:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <_enca_count+0x4>
     5a4:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <_enca_count+0x5>
     5a8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <_enca_count+0x6>
     5ac:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <_enca_count+0x7>
     5b0:	a1 e0       	ldi	r26, 0x01	; 1
     5b2:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     5b6:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <_enca_count>
     5ba:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <_enca_count+0x1>
     5be:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <_enca_count+0x2>
     5c2:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <_enca_count+0x3>
     5c6:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <_enca_count+0x4>
     5ca:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <_enca_count+0x5>
     5ce:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <_enca_count+0x6>
     5d2:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <_enca_count+0x7>
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_dir_a>
     5dc:	26 c0       	rjmp	.+76     	; 0x62a <__vector_1+0x1b2>
     5de:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <_enca_count>
     5e2:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <_enca_count+0x1>
     5e6:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <_enca_count+0x2>
     5ea:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <_enca_count+0x3>
     5ee:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <_enca_count+0x4>
     5f2:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <_enca_count+0x5>
     5f6:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <_enca_count+0x6>
     5fa:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <_enca_count+0x7>
     5fe:	af ef       	ldi	r26, 0xFF	; 255
     600:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     604:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <_enca_count>
     608:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <_enca_count+0x1>
     60c:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <_enca_count+0x2>
     610:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <_enca_count+0x3>
     614:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <_enca_count+0x4>
     618:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <_enca_count+0x5>
     61c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <_enca_count+0x6>
     620:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <_enca_count+0x7>
     624:	8f ef       	ldi	r24, 0xFF	; 255
     626:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_dir_a>
     62a:	ff 91       	pop	r31
     62c:	ef 91       	pop	r30
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	bf 91       	pop	r27
     634:	af 91       	pop	r26
     636:	9f 91       	pop	r25
     638:	8f 91       	pop	r24
     63a:	7f 91       	pop	r23
     63c:	6f 91       	pop	r22
     63e:	5f 91       	pop	r21
     640:	4f 91       	pop	r20
     642:	3f 91       	pop	r19
     644:	2f 91       	pop	r18
     646:	1f 91       	pop	r17
     648:	0f 91       	pop	r16
     64a:	ff 90       	pop	r15
     64c:	ef 90       	pop	r14
     64e:	df 90       	pop	r13
     650:	cf 90       	pop	r12
     652:	bf 90       	pop	r11
     654:	af 90       	pop	r10
     656:	9f 90       	pop	r9
     658:	8f 90       	pop	r8
     65a:	7f 90       	pop	r7
     65c:	6f 90       	pop	r6
     65e:	5f 90       	pop	r5
     660:	4f 90       	pop	r4
     662:	3f 90       	pop	r3
     664:	2f 90       	pop	r2
     666:	0f 90       	pop	r0
     668:	0f be       	out	0x3f, r0	; 63
     66a:	0f 90       	pop	r0
     66c:	1f 90       	pop	r1
     66e:	18 95       	reti

00000670 <__vector_2>:
     670:	1f 92       	push	r1
     672:	0f 92       	push	r0
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	0f 92       	push	r0
     678:	11 24       	eor	r1, r1
     67a:	2f 92       	push	r2
     67c:	3f 92       	push	r3
     67e:	4f 92       	push	r4
     680:	5f 92       	push	r5
     682:	6f 92       	push	r6
     684:	7f 92       	push	r7
     686:	8f 92       	push	r8
     688:	9f 92       	push	r9
     68a:	af 92       	push	r10
     68c:	bf 92       	push	r11
     68e:	cf 92       	push	r12
     690:	df 92       	push	r13
     692:	ef 92       	push	r14
     694:	ff 92       	push	r15
     696:	0f 93       	push	r16
     698:	1f 93       	push	r17
     69a:	2f 93       	push	r18
     69c:	3f 93       	push	r19
     69e:	4f 93       	push	r20
     6a0:	5f 93       	push	r21
     6a2:	6f 93       	push	r22
     6a4:	7f 93       	push	r23
     6a6:	8f 93       	push	r24
     6a8:	9f 93       	push	r25
     6aa:	af 93       	push	r26
     6ac:	bf 93       	push	r27
     6ae:	cf 93       	push	r28
     6b0:	df 93       	push	r29
     6b2:	ef 93       	push	r30
     6b4:	ff 93       	push	r31
     6b6:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <_encb_count>
     6ba:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <_encb_count+0x1>
     6be:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <_encb_count+0x2>
     6c2:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <_encb_count+0x3>
     6c6:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <_encb_count+0x4>
     6ca:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <_encb_count+0x5>
     6ce:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_encb_count+0x6>
     6d2:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <_encb_count+0x7>
     6d6:	a0 e0       	ldi	r26, 0x00	; 0
     6d8:	0e 94 c1 09 	call	0x1382	; 0x1382 <__cmpdi2_s8>
     6dc:	a9 f4       	brne	.+42     	; 0x708 <__vector_2+0x98>
     6de:	0e 94 4c 06 	call	0xc98	; 0xc98 <_micros0>
     6e2:	dc 01       	movw	r26, r24
     6e4:	cb 01       	movw	r24, r22
     6e6:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <_prev_tick_timeB>
     6ea:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <_prev_tick_timeB+0x1>
     6ee:	a0 93 58 01 	sts	0x0158, r26	; 0x800158 <_prev_tick_timeB+0x2>
     6f2:	b0 93 59 01 	sts	0x0159, r27	; 0x800159 <_prev_tick_timeB+0x3>
     6f6:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <_prev_tick_timeB+0x4>
     6fa:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <_prev_tick_timeB+0x5>
     6fe:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <_prev_tick_timeB+0x6>
     702:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <_prev_tick_timeB+0x7>
     706:	3e c0       	rjmp	.+124    	; 0x784 <__vector_2+0x114>
     708:	0e 94 4c 06 	call	0xc98	; 0xc98 <_micros0>
     70c:	1b 01       	movw	r2, r22
     70e:	2c 01       	movw	r4, r24
     710:	a0 90 56 01 	lds	r10, 0x0156	; 0x800156 <_prev_tick_timeB>
     714:	b0 90 57 01 	lds	r11, 0x0157	; 0x800157 <_prev_tick_timeB+0x1>
     718:	c0 90 58 01 	lds	r12, 0x0158	; 0x800158 <_prev_tick_timeB+0x2>
     71c:	d0 90 59 01 	lds	r13, 0x0159	; 0x800159 <_prev_tick_timeB+0x3>
     720:	e0 90 5a 01 	lds	r14, 0x015A	; 0x80015a <_prev_tick_timeB+0x4>
     724:	f0 90 5b 01 	lds	r15, 0x015B	; 0x80015b <_prev_tick_timeB+0x5>
     728:	00 91 5c 01 	lds	r16, 0x015C	; 0x80015c <_prev_tick_timeB+0x6>
     72c:	10 91 5d 01 	lds	r17, 0x015D	; 0x80015d <_prev_tick_timeB+0x7>
     730:	26 2f       	mov	r18, r22
     732:	33 2d       	mov	r19, r3
     734:	44 2d       	mov	r20, r4
     736:	55 2d       	mov	r21, r5
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 b8 09 	call	0x1370	; 0x1370 <__subdi3>
     744:	20 93 66 01 	sts	0x0166, r18	; 0x800166 <_tick_timeB>
     748:	30 93 67 01 	sts	0x0167, r19	; 0x800167 <_tick_timeB+0x1>
     74c:	40 93 68 01 	sts	0x0168, r20	; 0x800168 <_tick_timeB+0x2>
     750:	50 93 69 01 	sts	0x0169, r21	; 0x800169 <_tick_timeB+0x3>
     754:	60 93 6a 01 	sts	0x016A, r22	; 0x80016a <_tick_timeB+0x4>
     758:	70 93 6b 01 	sts	0x016B, r23	; 0x80016b <_tick_timeB+0x5>
     75c:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <_tick_timeB+0x6>
     760:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <_tick_timeB+0x7>
     764:	20 92 56 01 	sts	0x0156, r2	; 0x800156 <_prev_tick_timeB>
     768:	30 92 57 01 	sts	0x0157, r3	; 0x800157 <_prev_tick_timeB+0x1>
     76c:	40 92 58 01 	sts	0x0158, r4	; 0x800158 <_prev_tick_timeB+0x2>
     770:	50 92 59 01 	sts	0x0159, r5	; 0x800159 <_prev_tick_timeB+0x3>
     774:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <_prev_tick_timeB+0x4>
     778:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <_prev_tick_timeB+0x5>
     77c:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <_prev_tick_timeB+0x6>
     780:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <_prev_tick_timeB+0x7>
     784:	4f 9b       	sbis	0x09, 7	; 9
     786:	27 c0       	rjmp	.+78     	; 0x7d6 <__vector_2+0x166>
     788:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <_encb_count>
     78c:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <_encb_count+0x1>
     790:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <_encb_count+0x2>
     794:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <_encb_count+0x3>
     798:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <_encb_count+0x4>
     79c:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <_encb_count+0x5>
     7a0:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_encb_count+0x6>
     7a4:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <_encb_count+0x7>
     7a8:	a1 e0       	ldi	r26, 0x01	; 1
     7aa:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     7ae:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <_encb_count>
     7b2:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <_encb_count+0x1>
     7b6:	40 93 48 01 	sts	0x0148, r20	; 0x800148 <_encb_count+0x2>
     7ba:	50 93 49 01 	sts	0x0149, r21	; 0x800149 <_encb_count+0x3>
     7be:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <_encb_count+0x4>
     7c2:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <_encb_count+0x5>
     7c6:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <_encb_count+0x6>
     7ca:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <_encb_count+0x7>
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_dir_b>
     7d4:	26 c0       	rjmp	.+76     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     7d6:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <_encb_count>
     7da:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <_encb_count+0x1>
     7de:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <_encb_count+0x2>
     7e2:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <_encb_count+0x3>
     7e6:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <_encb_count+0x4>
     7ea:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <_encb_count+0x5>
     7ee:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_encb_count+0x6>
     7f2:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <_encb_count+0x7>
     7f6:	af ef       	ldi	r26, 0xFF	; 255
     7f8:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     7fc:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <_encb_count>
     800:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <_encb_count+0x1>
     804:	40 93 48 01 	sts	0x0148, r20	; 0x800148 <_encb_count+0x2>
     808:	50 93 49 01 	sts	0x0149, r21	; 0x800149 <_encb_count+0x3>
     80c:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <_encb_count+0x4>
     810:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <_encb_count+0x5>
     814:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <_encb_count+0x6>
     818:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <_encb_count+0x7>
     81c:	8f ef       	ldi	r24, 0xFF	; 255
     81e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_dir_b>
     822:	ff 91       	pop	r31
     824:	ef 91       	pop	r30
     826:	df 91       	pop	r29
     828:	cf 91       	pop	r28
     82a:	bf 91       	pop	r27
     82c:	af 91       	pop	r26
     82e:	9f 91       	pop	r25
     830:	8f 91       	pop	r24
     832:	7f 91       	pop	r23
     834:	6f 91       	pop	r22
     836:	5f 91       	pop	r21
     838:	4f 91       	pop	r20
     83a:	3f 91       	pop	r19
     83c:	2f 91       	pop	r18
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	ff 90       	pop	r15
     844:	ef 90       	pop	r14
     846:	df 90       	pop	r13
     848:	cf 90       	pop	r12
     84a:	bf 90       	pop	r11
     84c:	af 90       	pop	r10
     84e:	9f 90       	pop	r9
     850:	8f 90       	pop	r8
     852:	7f 90       	pop	r7
     854:	6f 90       	pop	r6
     856:	5f 90       	pop	r5
     858:	4f 90       	pop	r4
     85a:	3f 90       	pop	r3
     85c:	2f 90       	pop	r2
     85e:	0f 90       	pop	r0
     860:	0f be       	out	0x3f, r0	; 63
     862:	0f 90       	pop	r0
     864:	1f 90       	pop	r1
     866:	18 95       	reti

00000868 <_omega_from_encA>:
     868:	cf 92       	push	r12
     86a:	df 92       	push	r13
     86c:	ef 92       	push	r14
     86e:	ff 92       	push	r15
     870:	cf 93       	push	r28
     872:	c0 91 0b 01 	lds	r28, 0x010B	; 0x80010b <_dir_a>
     876:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <_tick_timeA>
     87a:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <_tick_timeA+0x1>
     87e:	40 91 70 01 	lds	r20, 0x0170	; 0x800170 <_tick_timeA+0x2>
     882:	50 91 71 01 	lds	r21, 0x0171	; 0x800171 <_tick_timeA+0x3>
     886:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <_tick_timeA+0x4>
     88a:	70 91 73 01 	lds	r23, 0x0173	; 0x800173 <_tick_timeA+0x5>
     88e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <_tick_timeA+0x6>
     892:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <_tick_timeA+0x7>
     896:	0e 94 75 08 	call	0x10ea	; 0x10ea <__floatundisf>
     89a:	9b 01       	movw	r18, r22
     89c:	ac 01       	movw	r20, r24
     89e:	60 ec       	ldi	r22, 0xC0	; 192
     8a0:	7f ee       	ldi	r23, 0xEF	; 239
     8a2:	89 e3       	ldi	r24, 0x39	; 57
     8a4:	98 e4       	ldi	r25, 0x48	; 72
     8a6:	0e 94 90 07 	call	0xf20	; 0xf20 <__divsf3>
     8aa:	6b 01       	movw	r12, r22
     8ac:	7c 01       	movw	r14, r24
     8ae:	6c 2f       	mov	r22, r28
     8b0:	cc 0f       	add	r28, r28
     8b2:	77 0b       	sbc	r23, r23
     8b4:	88 0b       	sbc	r24, r24
     8b6:	99 0b       	sbc	r25, r25
     8b8:	0e 94 3a 08 	call	0x1074	; 0x1074 <__floatsisf>
     8bc:	9b 01       	movw	r18, r22
     8be:	ac 01       	movw	r20, r24
     8c0:	c7 01       	movw	r24, r14
     8c2:	b6 01       	movw	r22, r12
     8c4:	0e 94 04 09 	call	0x1208	; 0x1208 <__mulsf3>
     8c8:	cf 91       	pop	r28
     8ca:	ff 90       	pop	r15
     8cc:	ef 90       	pop	r14
     8ce:	df 90       	pop	r13
     8d0:	cf 90       	pop	r12
     8d2:	08 95       	ret

000008d4 <_omega_from_encB>:
     8d4:	cf 92       	push	r12
     8d6:	df 92       	push	r13
     8d8:	ef 92       	push	r14
     8da:	ff 92       	push	r15
     8dc:	cf 93       	push	r28
     8de:	c0 91 0a 01 	lds	r28, 0x010A	; 0x80010a <_dir_b>
     8e2:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <_tick_timeB>
     8e6:	30 91 67 01 	lds	r19, 0x0167	; 0x800167 <_tick_timeB+0x1>
     8ea:	40 91 68 01 	lds	r20, 0x0168	; 0x800168 <_tick_timeB+0x2>
     8ee:	50 91 69 01 	lds	r21, 0x0169	; 0x800169 <_tick_timeB+0x3>
     8f2:	60 91 6a 01 	lds	r22, 0x016A	; 0x80016a <_tick_timeB+0x4>
     8f6:	70 91 6b 01 	lds	r23, 0x016B	; 0x80016b <_tick_timeB+0x5>
     8fa:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <_tick_timeB+0x6>
     8fe:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <_tick_timeB+0x7>
     902:	0e 94 75 08 	call	0x10ea	; 0x10ea <__floatundisf>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	60 ec       	ldi	r22, 0xC0	; 192
     90c:	7f ee       	ldi	r23, 0xEF	; 239
     90e:	89 e3       	ldi	r24, 0x39	; 57
     910:	98 e4       	ldi	r25, 0x48	; 72
     912:	0e 94 90 07 	call	0xf20	; 0xf20 <__divsf3>
     916:	6b 01       	movw	r12, r22
     918:	7c 01       	movw	r14, r24
     91a:	6c 2f       	mov	r22, r28
     91c:	cc 0f       	add	r28, r28
     91e:	77 0b       	sbc	r23, r23
     920:	88 0b       	sbc	r24, r24
     922:	99 0b       	sbc	r25, r25
     924:	0e 94 3a 08 	call	0x1074	; 0x1074 <__floatsisf>
     928:	9b 01       	movw	r18, r22
     92a:	ac 01       	movw	r20, r24
     92c:	c7 01       	movw	r24, r14
     92e:	b6 01       	movw	r22, r12
     930:	0e 94 04 09 	call	0x1208	; 0x1208 <__mulsf3>
     934:	cf 91       	pop	r28
     936:	ff 90       	pop	r15
     938:	ef 90       	pop	r14
     93a:	df 90       	pop	r13
     93c:	cf 90       	pop	r12
     93e:	08 95       	ret

00000940 <_insertion_sort>:
		}
	}
	_pmB_prev = _pmB_current;
}
void _insertion_sort(uint16_t arr[], int n)
{
     940:	0f 93       	push	r16
     942:	1f 93       	push	r17
     944:	cf 93       	push	r28
     946:	df 93       	push	r29
    int i, key, j;
    for (i = 1; i < n; i++) {
     948:	62 30       	cpi	r22, 0x02	; 2
     94a:	71 05       	cpc	r23, r1
     94c:	4c f1       	brlt	.+82     	; 0x9a0 <_insertion_sort+0x60>
     94e:	ec 01       	movw	r28, r24
     950:	8b 01       	movw	r16, r22
     952:	01 50       	subi	r16, 0x01	; 1
     954:	11 09       	sbc	r17, r1
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	70 e0       	ldi	r23, 0x00	; 0
        key = arr[i];
     95a:	aa 81       	ldd	r26, Y+2	; 0x02
     95c:	bb 81       	ldd	r27, Y+3	; 0x03
        j = i - 1;
     95e:	9b 01       	movw	r18, r22
 
        /* Move elements of arr[0..i-1], that are
          greater than key, to one position ahead
          of their current position */
        while (j >= 0 && arr[j] > key) {
     960:	77 23       	and	r23, r23
     962:	84 f0       	brlt	.+32     	; 0x984 <_insertion_sort+0x44>
     964:	48 81       	ld	r20, Y
     966:	59 81       	ldd	r21, Y+1	; 0x01
     968:	a4 17       	cp	r26, r20
     96a:	b5 07       	cpc	r27, r21
     96c:	58 f4       	brcc	.+22     	; 0x984 <_insertion_sort+0x44>
     96e:	fe 01       	movw	r30, r28
            arr[j + 1] = arr[j];
     970:	53 83       	std	Z+3, r21	; 0x03
     972:	42 83       	std	Z+2, r20	; 0x02
            j = j - 1;
     974:	21 50       	subi	r18, 0x01	; 1
     976:	31 09       	sbc	r19, r1
     978:	28 f0       	brcs	.+10     	; 0x984 <_insertion_sort+0x44>
        j = i - 1;
 
        /* Move elements of arr[0..i-1], that are
          greater than key, to one position ahead
          of their current position */
        while (j >= 0 && arr[j] > key) {
     97a:	52 91       	ld	r21, -Z
     97c:	42 91       	ld	r20, -Z
     97e:	a4 17       	cp	r26, r20
     980:	b5 07       	cpc	r27, r21
     982:	b0 f3       	brcs	.-20     	; 0x970 <_insertion_sort+0x30>
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
     984:	f9 01       	movw	r30, r18
     986:	31 96       	adiw	r30, 0x01	; 1
     988:	ee 0f       	add	r30, r30
     98a:	ff 1f       	adc	r31, r31
     98c:	e8 0f       	add	r30, r24
     98e:	f9 1f       	adc	r31, r25
     990:	b1 83       	std	Z+1, r27	; 0x01
     992:	a0 83       	st	Z, r26
     994:	6f 5f       	subi	r22, 0xFF	; 255
     996:	7f 4f       	sbci	r23, 0xFF	; 255
     998:	22 96       	adiw	r28, 0x02	; 2
	_pmB_prev = _pmB_current;
}
void _insertion_sort(uint16_t arr[], int n)
{
    int i, key, j;
    for (i = 1; i < n; i++) {
     99a:	60 17       	cp	r22, r16
     99c:	71 07       	cpc	r23, r17
     99e:	e9 f6       	brne	.-70     	; 0x95a <_insertion_sort+0x1a>
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	1f 91       	pop	r17
     9a6:	0f 91       	pop	r16
     9a8:	08 95       	ret

000009aa <__vector_9>:
{
	return _omega_from_PMB() * 0.3f + _omega_from_encB() * 0.7f;
}

ISR(TIMER2_OVF_vect)
{
     9aa:	1f 92       	push	r1
     9ac:	0f 92       	push	r0
     9ae:	0f b6       	in	r0, 0x3f	; 63
     9b0:	0f 92       	push	r0
     9b2:	11 24       	eor	r1, r1
     9b4:	ef 92       	push	r14
     9b6:	ff 92       	push	r15
     9b8:	0f 93       	push	r16
     9ba:	1f 93       	push	r17
     9bc:	2f 93       	push	r18
     9be:	3f 93       	push	r19
     9c0:	4f 93       	push	r20
     9c2:	5f 93       	push	r21
     9c4:	6f 93       	push	r22
     9c6:	7f 93       	push	r23
     9c8:	8f 93       	push	r24
     9ca:	9f 93       	push	r25
     9cc:	af 93       	push	r26
     9ce:	bf 93       	push	r27
     9d0:	cf 93       	push	r28
     9d2:	df 93       	push	r29
     9d4:	ef 93       	push	r30
     9d6:	ff 93       	push	r31
	uint16_t snap = __read_PM(PMA);
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
	if ( (snap < __PM_lower_bound) || (snap > __PM_upper_bound) )
     9de:	88 5c       	subi	r24, 0xC8	; 200
     9e0:	91 09       	sbc	r25, r1
     9e2:	89 35       	cpi	r24, 0x59	; 89
     9e4:	92 40       	sbci	r25, 0x02	; 2
     9e6:	88 f0       	brcs	.+34     	; 0xa0a <__vector_9+0x60>
	{
		_pmA_current = -1;
     9e8:	8f ef       	ldi	r24, 0xFF	; 255
     9ea:	9f ef       	ldi	r25, 0xFF	; 255
     9ec:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <_pmA_current+0x1>
     9f0:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <_pmA_current>
		_omega_pmA = _omega_from_encA();
     9f4:	0e 94 34 04 	call	0x868	; 0x868 <_omega_from_encA>
     9f8:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_omega_pmA>
     9fc:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_omega_pmA+0x1>
     a00:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_omega_pmA+0x2>
     a04:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_omega_pmA+0x3>
     a08:	4a c0       	rjmp	.+148    	; 0xa9e <__vector_9+0xf4>
	}
	else
	{
		if ( _pmA_prev == -1 )
     a0a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     a0e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     a12:	01 96       	adiw	r24, 0x01	; 1
     a14:	59 f4       	brne	.+22     	; 0xa2c <__vector_9+0x82>
		{
			_omega_pmA = _omega_from_encA();
     a16:	0e 94 34 04 	call	0x868	; 0x868 <_omega_from_encA>
     a1a:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_omega_pmA>
     a1e:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_omega_pmA+0x1>
     a22:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_omega_pmA+0x2>
     a26:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_omega_pmA+0x3>
     a2a:	39 c0       	rjmp	.+114    	; 0xa9e <__vector_9+0xf4>
		}
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
     a2c:	8a e0       	ldi	r24, 0x0A	; 10
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	0e 94 1d 0a 	call	0x143a	; 0x143a <malloc>
     a34:	7c 01       	movw	r14, r24
     a36:	ec 01       	movw	r28, r24
     a38:	8c 01       	movw	r16, r24
     a3a:	06 5f       	subi	r16, 0xF6	; 246
     a3c:	1f 4f       	sbci	r17, 0xFF	; 255
	
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
			{
				reads[i] = __read_PM(PMA);
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
     a44:	89 93       	st	Y+, r24
     a46:	99 93       	st	Y+, r25
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
	
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
     a48:	c0 17       	cp	r28, r16
     a4a:	d1 07       	cpc	r29, r17
     a4c:	c1 f7       	brne	.-16     	; 0xa3e <__vector_9+0x94>
			{
				reads[i] = __read_PM(PMA);
			}
			// Sort outcome
			_insertion_sort(reads, __PM_SAMPLE_COUNT);
     a4e:	65 e0       	ldi	r22, 0x05	; 5
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	c7 01       	movw	r24, r14
     a54:	0e 94 a0 04 	call	0x940	; 0x940 <_insertion_sort>
			_pmA_current = reads[(__PM_SAMPLE_COUNT >> 1)];
     a58:	f7 01       	movw	r30, r14
     a5a:	84 81       	ldd	r24, Z+4	; 0x04
     a5c:	95 81       	ldd	r25, Z+5	; 0x05
     a5e:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <_pmA_current+0x1>
     a62:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <_pmA_current>
			_omega_pmA = __PM_SLOPE * (float)(_pmA_current - _pmA_prev);
     a66:	60 91 44 01 	lds	r22, 0x0144	; 0x800144 <_pmA_current>
     a6a:	70 91 45 01 	lds	r23, 0x0145	; 0x800145 <_pmA_current+0x1>
     a6e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     a72:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     a76:	68 1b       	sub	r22, r24
     a78:	79 0b       	sbc	r23, r25
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	0e 94 38 08 	call	0x1070	; 0x1070 <__floatunsisf>
     a82:	20 e0       	ldi	r18, 0x00	; 0
     a84:	30 e0       	ldi	r19, 0x00	; 0
     a86:	48 e5       	ldi	r20, 0x58	; 88
     a88:	51 e4       	ldi	r21, 0x41	; 65
     a8a:	0e 94 04 09 	call	0x1208	; 0x1208 <__mulsf3>
     a8e:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_omega_pmA>
     a92:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_omega_pmA+0x1>
     a96:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_omega_pmA+0x2>
     a9a:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_omega_pmA+0x3>
		}
	}
	_pmA_prev = _pmA_current;
     a9e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <_pmA_current>
     aa2:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <_pmA_current+0x1>
     aa6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_pmA_prev+0x1>
     aaa:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_pmA_prev>
}
     aae:	ff 91       	pop	r31
     ab0:	ef 91       	pop	r30
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	bf 91       	pop	r27
     ab8:	af 91       	pop	r26
     aba:	9f 91       	pop	r25
     abc:	8f 91       	pop	r24
     abe:	7f 91       	pop	r23
     ac0:	6f 91       	pop	r22
     ac2:	5f 91       	pop	r21
     ac4:	4f 91       	pop	r20
     ac6:	3f 91       	pop	r19
     ac8:	2f 91       	pop	r18
     aca:	1f 91       	pop	r17
     acc:	0f 91       	pop	r16
     ace:	ff 90       	pop	r15
     ad0:	ef 90       	pop	r14
     ad2:	0f 90       	pop	r0
     ad4:	0f be       	out	0x3f, r0	; 63
     ad6:	0f 90       	pop	r0
     ad8:	1f 90       	pop	r1
     ada:	18 95       	reti

00000adc <__vector_14>:


ISR(TIMER0_COMPA_vect)
{
     adc:	1f 92       	push	r1
     ade:	0f 92       	push	r0
     ae0:	0f b6       	in	r0, 0x3f	; 63
     ae2:	0f 92       	push	r0
     ae4:	11 24       	eor	r1, r1
     ae6:	ef 92       	push	r14
     ae8:	ff 92       	push	r15
     aea:	0f 93       	push	r16
     aec:	1f 93       	push	r17
     aee:	2f 93       	push	r18
     af0:	3f 93       	push	r19
     af2:	4f 93       	push	r20
     af4:	5f 93       	push	r21
     af6:	6f 93       	push	r22
     af8:	7f 93       	push	r23
     afa:	8f 93       	push	r24
     afc:	9f 93       	push	r25
     afe:	af 93       	push	r26
     b00:	bf 93       	push	r27
     b02:	cf 93       	push	r28
     b04:	df 93       	push	r29
     b06:	ef 93       	push	r30
     b08:	ff 93       	push	r31
	uint16_t snap = __read_PM(PMB);
     b0a:	81 e0       	ldi	r24, 0x01	; 1
     b0c:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
	if ( (snap < __PM_lower_bound) || (snap > __PM_upper_bound) )
     b10:	88 5c       	subi	r24, 0xC8	; 200
     b12:	91 09       	sbc	r25, r1
     b14:	89 35       	cpi	r24, 0x59	; 89
     b16:	92 40       	sbci	r25, 0x02	; 2
     b18:	88 f0       	brcs	.+34     	; 0xb3c <__vector_14+0x60>
	{
		_pmB_current = -1;
     b1a:	8f ef       	ldi	r24, 0xFF	; 255
     b1c:	9f ef       	ldi	r25, 0xFF	; 255
     b1e:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <_pmB_current+0x1>
     b22:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_pmB_current>
		_omega_pmB = _omega_from_encA();
     b26:	0e 94 34 04 	call	0x868	; 0x868 <_omega_from_encA>
     b2a:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <_omega_pmB>
     b2e:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <_omega_pmB+0x1>
     b32:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_omega_pmB+0x2>
     b36:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_omega_pmB+0x3>
     b3a:	4a c0       	rjmp	.+148    	; 0xbd0 <__vector_14+0xf4>
	}
	else
	{
		if ( _pmA_prev == -1 )
     b3c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     b40:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     b44:	01 96       	adiw	r24, 0x01	; 1
     b46:	59 f4       	brne	.+22     	; 0xb5e <__vector_14+0x82>
		{
			_omega_pmB = _omega_from_encB();
     b48:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <_omega_from_encB>
     b4c:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <_omega_pmB>
     b50:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <_omega_pmB+0x1>
     b54:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_omega_pmB+0x2>
     b58:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_omega_pmB+0x3>
     b5c:	39 c0       	rjmp	.+114    	; 0xbd0 <__vector_14+0xf4>
		}
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
     b5e:	8a e0       	ldi	r24, 0x0A	; 10
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	0e 94 1d 0a 	call	0x143a	; 0x143a <malloc>
     b66:	7c 01       	movw	r14, r24
     b68:	ec 01       	movw	r28, r24
     b6a:	8c 01       	movw	r16, r24
     b6c:	06 5f       	subi	r16, 0xF6	; 246
     b6e:	1f 4f       	sbci	r17, 0xFF	; 255
			
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
			{
				reads[i] = __read_PM(PMB);
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
     b76:	89 93       	st	Y+, r24
     b78:	99 93       	st	Y+, r25
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
			
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
     b7a:	c0 17       	cp	r28, r16
     b7c:	d1 07       	cpc	r29, r17
     b7e:	c1 f7       	brne	.-16     	; 0xb70 <__vector_14+0x94>
			{
				reads[i] = __read_PM(PMB);
			}
			// Sort outcome
			_insertion_sort(reads, __PM_SAMPLE_COUNT);
     b80:	65 e0       	ldi	r22, 0x05	; 5
     b82:	70 e0       	ldi	r23, 0x00	; 0
     b84:	c7 01       	movw	r24, r14
     b86:	0e 94 a0 04 	call	0x940	; 0x940 <_insertion_sort>
			_pmB_current = reads[(__PM_SAMPLE_COUNT >> 1)];
     b8a:	f7 01       	movw	r30, r14
     b8c:	84 81       	ldd	r24, Z+4	; 0x04
     b8e:	95 81       	ldd	r25, Z+5	; 0x05
     b90:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <_pmB_current+0x1>
     b94:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_pmB_current>
			_omega_pmB = __PM_SLOPE * (float)(_pmB_current - _pmB_prev);
     b98:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <_pmB_current>
     b9c:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <_pmB_current+0x1>
     ba0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_pmB_prev>
     ba4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_pmB_prev+0x1>
     ba8:	68 1b       	sub	r22, r24
     baa:	79 0b       	sbc	r23, r25
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	0e 94 38 08 	call	0x1070	; 0x1070 <__floatunsisf>
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	48 e5       	ldi	r20, 0x58	; 88
     bba:	51 e4       	ldi	r21, 0x41	; 65
     bbc:	0e 94 04 09 	call	0x1208	; 0x1208 <__mulsf3>
     bc0:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <_omega_pmB>
     bc4:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <_omega_pmB+0x1>
     bc8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_omega_pmB+0x2>
     bcc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_omega_pmB+0x3>
		}
	}
	_pmB_prev = _pmB_current;
     bd0:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <_pmB_current>
     bd4:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <_pmB_current+0x1>
     bd8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_pmB_prev+0x1>
     bdc:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_pmB_prev>
}
     be0:	ff 91       	pop	r31
     be2:	ef 91       	pop	r30
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	bf 91       	pop	r27
     bea:	af 91       	pop	r26
     bec:	9f 91       	pop	r25
     bee:	8f 91       	pop	r24
     bf0:	7f 91       	pop	r23
     bf2:	6f 91       	pop	r22
     bf4:	5f 91       	pop	r21
     bf6:	4f 91       	pop	r20
     bf8:	3f 91       	pop	r19
     bfa:	2f 91       	pop	r18
     bfc:	1f 91       	pop	r17
     bfe:	0f 91       	pop	r16
     c00:	ff 90       	pop	r15
     c02:	ef 90       	pop	r14
     c04:	0f 90       	pop	r0
     c06:	0f be       	out	0x3f, r0	; 63
     c08:	0f 90       	pop	r0
     c0a:	1f 90       	pop	r1
     c0c:	18 95       	reti

00000c0e <_set_pwm_0A>:
 */ 
#include <__pwm__.h>


void _set_pwm_0A(int input)
{
     c0e:	99 23       	and	r25, r25
     c10:	14 f4       	brge	.+4      	; 0xc16 <_set_pwm_0A+0x8>
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR0A = (uint8_t)input;
     c16:	8f 3f       	cpi	r24, 0xFF	; 255
     c18:	91 05       	cpc	r25, r1
     c1a:	19 f0       	breq	.+6      	; 0xc22 <_set_pwm_0A+0x14>
     c1c:	14 f0       	brlt	.+4      	; 0xc22 <_set_pwm_0A+0x14>
     c1e:	8f ef       	ldi	r24, 0xFF	; 255
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	87 bd       	out	0x27, r24	; 39
     c24:	08 95       	ret

00000c26 <_set_pwm_0B>:
}
void _set_pwm_0B(int input)
{
     c26:	99 23       	and	r25, r25
     c28:	14 f4       	brge	.+4      	; 0xc2e <_set_pwm_0B+0x8>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	90 e0       	ldi	r25, 0x00	; 0
	if (input > 255)
		{input = 255;}
	else if (input < 0)
		{input = 0;}
		
	OCR0B = (uint8_t)input;
     c2e:	8f 3f       	cpi	r24, 0xFF	; 255
     c30:	91 05       	cpc	r25, r1
     c32:	19 f0       	breq	.+6      	; 0xc3a <_set_pwm_0B+0x14>
     c34:	14 f0       	brlt	.+4      	; 0xc3a <_set_pwm_0B+0x14>
     c36:	8f ef       	ldi	r24, 0xFF	; 255
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	88 bd       	out	0x28, r24	; 40
     c3c:	08 95       	ret

00000c3e <_set_pwm_1A>:
}
void _set_pwm_1A(int input)
{
     c3e:	99 23       	and	r25, r25
     c40:	14 f4       	brge	.+4      	; 0xc46 <_set_pwm_1A+0x8>
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1AH = (uint8_t)(input);
     c46:	8f 3f       	cpi	r24, 0xFF	; 255
     c48:	91 05       	cpc	r25, r1
     c4a:	19 f0       	breq	.+6      	; 0xc52 <_set_pwm_1A+0x14>
     c4c:	14 f0       	brlt	.+4      	; 0xc52 <_set_pwm_1A+0x14>
     c4e:	8f ef       	ldi	r24, 0xFF	; 255
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0;
     c56:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     c5a:	08 95       	ret

00000c5c <_set_pwm_1B>:
}
void _set_pwm_1B(int input)
{
     c5c:	99 23       	and	r25, r25
     c5e:	14 f4       	brge	.+4      	; 0xc64 <_set_pwm_1B+0x8>
     c60:	80 e0       	ldi	r24, 0x00	; 0
     c62:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1BH = (uint8_t)(input);
     c64:	8f 3f       	cpi	r24, 0xFF	; 255
     c66:	91 05       	cpc	r25, r1
     c68:	19 f0       	breq	.+6      	; 0xc70 <_set_pwm_1B+0x14>
     c6a:	14 f0       	brlt	.+4      	; 0xc70 <_set_pwm_1B+0x14>
     c6c:	8f ef       	ldi	r24, 0xFF	; 255
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
	OCR1BL = 0;
     c74:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     c78:	08 95       	ret

00000c7a <_timer0_init>:
	if ((TIFR0 & (1 << TOV0)) && (TCNT0 < 255))
	{
		_timer0_ovf_cnt++;
	}
	return ((_timer0_ovf_cnt << 8) + TCNT0)/1000;
}
     c7a:	84 b5       	in	r24, 0x24	; 36
     c7c:	80 6a       	ori	r24, 0xA0	; 160
     c7e:	84 bd       	out	0x24, r24	; 36
     c80:	84 b5       	in	r24, 0x24	; 36
     c82:	83 60       	ori	r24, 0x03	; 3
     c84:	84 bd       	out	0x24, r24	; 36
     c86:	85 b5       	in	r24, 0x25	; 37
     c88:	81 60       	ori	r24, 0x01	; 1
     c8a:	85 bd       	out	0x25, r24	; 37
     c8c:	ee e6       	ldi	r30, 0x6E	; 110
     c8e:	f0 e0       	ldi	r31, 0x00	; 0
     c90:	80 81       	ld	r24, Z
     c92:	81 60       	ori	r24, 0x01	; 1
     c94:	80 83       	st	Z, r24
     c96:	08 95       	ret

00000c98 <_micros0>:
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	a8 9b       	sbis	0x15, 0	; 21
     c9e:	26 c0       	rjmp	.+76     	; 0xcec <_micros0+0x54>
     ca0:	86 b5       	in	r24, 0x26	; 38
     ca2:	8f 3f       	cpi	r24, 0xFF	; 255
     ca4:	19 f1       	breq	.+70     	; 0xcec <_micros0+0x54>
     ca6:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <_timer0_ovf_cnt>
     caa:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <_timer0_ovf_cnt+0x1>
     cae:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <_timer0_ovf_cnt+0x2>
     cb2:	50 91 79 01 	lds	r21, 0x0179	; 0x800179 <_timer0_ovf_cnt+0x3>
     cb6:	60 91 7a 01 	lds	r22, 0x017A	; 0x80017a <_timer0_ovf_cnt+0x4>
     cba:	70 91 7b 01 	lds	r23, 0x017B	; 0x80017b <_timer0_ovf_cnt+0x5>
     cbe:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <_timer0_ovf_cnt+0x6>
     cc2:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <_timer0_ovf_cnt+0x7>
     cc6:	a1 e0       	ldi	r26, 0x01	; 1
     cc8:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     ccc:	20 93 76 01 	sts	0x0176, r18	; 0x800176 <_timer0_ovf_cnt>
     cd0:	30 93 77 01 	sts	0x0177, r19	; 0x800177 <_timer0_ovf_cnt+0x1>
     cd4:	40 93 78 01 	sts	0x0178, r20	; 0x800178 <_timer0_ovf_cnt+0x2>
     cd8:	50 93 79 01 	sts	0x0179, r21	; 0x800179 <_timer0_ovf_cnt+0x3>
     cdc:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <_timer0_ovf_cnt+0x4>
     ce0:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <_timer0_ovf_cnt+0x5>
     ce4:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <_timer0_ovf_cnt+0x6>
     ce8:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <_timer0_ovf_cnt+0x7>
     cec:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <_timer0_ovf_cnt>
     cf0:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <_timer0_ovf_cnt+0x1>
     cf4:	a0 91 78 01 	lds	r26, 0x0178	; 0x800178 <_timer0_ovf_cnt+0x2>
     cf8:	b0 91 79 01 	lds	r27, 0x0179	; 0x800179 <_timer0_ovf_cnt+0x3>
     cfc:	c0 91 7a 01 	lds	r28, 0x017A	; 0x80017a <_timer0_ovf_cnt+0x4>
     d00:	d0 91 7b 01 	lds	r29, 0x017B	; 0x80017b <_timer0_ovf_cnt+0x5>
     d04:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <_timer0_ovf_cnt+0x6>
     d08:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <_timer0_ovf_cnt+0x7>
     d0c:	26 b5       	in	r18, 0x26	; 38
     d0e:	ba 2f       	mov	r27, r26
     d10:	a9 2f       	mov	r26, r25
     d12:	98 2f       	mov	r25, r24
     d14:	88 27       	eor	r24, r24
     d16:	bc 01       	movw	r22, r24
     d18:	cd 01       	movw	r24, r26
     d1a:	62 0f       	add	r22, r18
     d1c:	71 1d       	adc	r23, r1
     d1e:	81 1d       	adc	r24, r1
     d20:	91 1d       	adc	r25, r1
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	08 95       	ret

00000d28 <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     d28:	1f 92       	push	r1
     d2a:	0f 92       	push	r0
     d2c:	0f b6       	in	r0, 0x3f	; 63
     d2e:	0f 92       	push	r0
     d30:	11 24       	eor	r1, r1
     d32:	2f 93       	push	r18
     d34:	3f 93       	push	r19
     d36:	4f 93       	push	r20
     d38:	5f 93       	push	r21
     d3a:	6f 93       	push	r22
     d3c:	7f 93       	push	r23
     d3e:	8f 93       	push	r24
     d40:	9f 93       	push	r25
     d42:	af 93       	push	r26
	_timer0_ovf_cnt++;
     d44:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <_timer0_ovf_cnt>
     d48:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <_timer0_ovf_cnt+0x1>
     d4c:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <_timer0_ovf_cnt+0x2>
     d50:	50 91 79 01 	lds	r21, 0x0179	; 0x800179 <_timer0_ovf_cnt+0x3>
     d54:	60 91 7a 01 	lds	r22, 0x017A	; 0x80017a <_timer0_ovf_cnt+0x4>
     d58:	70 91 7b 01 	lds	r23, 0x017B	; 0x80017b <_timer0_ovf_cnt+0x5>
     d5c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <_timer0_ovf_cnt+0x6>
     d60:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <_timer0_ovf_cnt+0x7>
     d64:	a1 e0       	ldi	r26, 0x01	; 1
     d66:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     d6a:	20 93 76 01 	sts	0x0176, r18	; 0x800176 <_timer0_ovf_cnt>
     d6e:	30 93 77 01 	sts	0x0177, r19	; 0x800177 <_timer0_ovf_cnt+0x1>
     d72:	40 93 78 01 	sts	0x0178, r20	; 0x800178 <_timer0_ovf_cnt+0x2>
     d76:	50 93 79 01 	sts	0x0179, r21	; 0x800179 <_timer0_ovf_cnt+0x3>
     d7a:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <_timer0_ovf_cnt+0x4>
     d7e:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <_timer0_ovf_cnt+0x5>
     d82:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <_timer0_ovf_cnt+0x6>
     d86:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <_timer0_ovf_cnt+0x7>
     d8a:	af 91       	pop	r26
     d8c:	9f 91       	pop	r25
     d8e:	8f 91       	pop	r24
     d90:	7f 91       	pop	r23
     d92:	6f 91       	pop	r22
     d94:	5f 91       	pop	r21
     d96:	4f 91       	pop	r20
     d98:	3f 91       	pop	r19
     d9a:	2f 91       	pop	r18
     d9c:	0f 90       	pop	r0
     d9e:	0f be       	out	0x3f, r0	; 63
     da0:	0f 90       	pop	r0
     da2:	1f 90       	pop	r1
     da4:	18 95       	reti

00000da6 <_timer1_init>:
uint64_t _millis1(void)
{
	uint16_t tmr = TCNT1L;
	tmr |= (TCNT1H << 8);
	return _TICK_MS*(tmr + ( _tmr_overflow_count << 16));
}
     da6:	e0 e8       	ldi	r30, 0x80	; 128
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	80 81       	ld	r24, Z
     dac:	80 6a       	ori	r24, 0xA0	; 160
     dae:	80 83       	st	Z, r24
     db0:	80 81       	ld	r24, Z
     db2:	82 60       	ori	r24, 0x02	; 2
     db4:	80 83       	st	Z, r24
     db6:	8f ef       	ldi	r24, 0xFF	; 255
     db8:	9f ef       	ldi	r25, 0xFF	; 255
     dba:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     dbe:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     dc2:	e1 e8       	ldi	r30, 0x81	; 129
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	88 61       	ori	r24, 0x18	; 24
     dca:	80 83       	st	Z, r24
     dcc:	80 81       	ld	r24, Z
     dce:	81 60       	ori	r24, 0x01	; 1
     dd0:	80 83       	st	Z, r24
     dd2:	ef e6       	ldi	r30, 0x6F	; 111
     dd4:	f0 e0       	ldi	r31, 0x00	; 0
     dd6:	80 81       	ld	r24, Z
     dd8:	81 60       	ori	r24, 0x01	; 1
     dda:	80 83       	st	Z, r24
     ddc:	08 95       	ret

00000dde <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     dde:	1f 92       	push	r1
     de0:	0f 92       	push	r0
     de2:	0f b6       	in	r0, 0x3f	; 63
     de4:	0f 92       	push	r0
     de6:	11 24       	eor	r1, r1
     de8:	2f 93       	push	r18
     dea:	3f 93       	push	r19
     dec:	4f 93       	push	r20
     dee:	5f 93       	push	r21
     df0:	6f 93       	push	r22
     df2:	7f 93       	push	r23
     df4:	8f 93       	push	r24
     df6:	9f 93       	push	r25
     df8:	af 93       	push	r26
	_tmr_overflow_count++;
     dfa:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <_tmr_overflow_count>
     dfe:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <_tmr_overflow_count+0x1>
     e02:	40 91 82 01 	lds	r20, 0x0182	; 0x800182 <_tmr_overflow_count+0x2>
     e06:	50 91 83 01 	lds	r21, 0x0183	; 0x800183 <_tmr_overflow_count+0x3>
     e0a:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <_tmr_overflow_count+0x4>
     e0e:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <_tmr_overflow_count+0x5>
     e12:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_tmr_overflow_count+0x6>
     e16:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <_tmr_overflow_count+0x7>
     e1a:	a1 e0       	ldi	r26, 0x01	; 1
     e1c:	0e 94 ac 09 	call	0x1358	; 0x1358 <__adddi3_s8>
     e20:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <_tmr_overflow_count>
     e24:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <_tmr_overflow_count+0x1>
     e28:	40 93 82 01 	sts	0x0182, r20	; 0x800182 <_tmr_overflow_count+0x2>
     e2c:	50 93 83 01 	sts	0x0183, r21	; 0x800183 <_tmr_overflow_count+0x3>
     e30:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <_tmr_overflow_count+0x4>
     e34:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <_tmr_overflow_count+0x5>
     e38:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_tmr_overflow_count+0x6>
     e3c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_tmr_overflow_count+0x7>
	_controler_flag_A = 1;
     e40:	81 e0       	ldi	r24, 0x01	; 1
     e42:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <_controler_flag_A>
	_controler_flag_B = 1;
     e46:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <_controler_flag_B>
     e4a:	af 91       	pop	r26
     e4c:	9f 91       	pop	r25
     e4e:	8f 91       	pop	r24
     e50:	7f 91       	pop	r23
     e52:	6f 91       	pop	r22
     e54:	5f 91       	pop	r21
     e56:	4f 91       	pop	r20
     e58:	3f 91       	pop	r19
     e5a:	2f 91       	pop	r18
     e5c:	0f 90       	pop	r0
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	0f 90       	pop	r0
     e62:	1f 90       	pop	r1
     e64:	18 95       	reti

00000e66 <_timer2_init>:

#include <__timer2__.h>

void _timer2_init(void)
{
	TCCR2A = 0;
     e66:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	OCR2A = 128;
     e6a:	80 e8       	ldi	r24, 0x80	; 128
     e6c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2B |=(1 << CS22) | (1 << CS21) | (1 << CS20);
     e70:	e1 eb       	ldi	r30, 0xB1	; 177
     e72:	f0 e0       	ldi	r31, 0x00	; 0
     e74:	80 81       	ld	r24, Z
     e76:	87 60       	ori	r24, 0x07	; 7
     e78:	80 83       	st	Z, r24
	TIMSK2 |= (1 << OCIE2A) | (1 << TOIE2);
     e7a:	e0 e7       	ldi	r30, 0x70	; 112
     e7c:	f0 e0       	ldi	r31, 0x00	; 0
     e7e:	80 81       	ld	r24, Z
     e80:	83 60       	ori	r24, 0x03	; 3
     e82:	80 83       	st	Z, r24
     e84:	08 95       	ret

00000e86 <_uart_put_char>:
#include <__usart__.h>

static int _uart_put_char(char input, FILE *stream)
{
     e86:	cf 93       	push	r28
     e88:	c8 2f       	mov	r28, r24
	if (input == '\n')
     e8a:	8a 30       	cpi	r24, 0x0A	; 10
     e8c:	19 f4       	brne	.+6      	; 0xe94 <_uart_put_char+0xe>
	_uart_put_char('\r', stream);
     e8e:	8d e0       	ldi	r24, 0x0D	; 13
     e90:	0e 94 43 07 	call	0xe86	; 0xe86 <_uart_put_char>
	
	while(!((UCSR0A >> UDRE0) & 1)); // wait until buffer is ready for data
     e94:	e0 ec       	ldi	r30, 0xC0	; 192
     e96:	f0 e0       	ldi	r31, 0x00	; 0
     e98:	80 81       	ld	r24, Z
     e9a:	85 ff       	sbrs	r24, 5
     e9c:	fd cf       	rjmp	.-6      	; 0xe98 <_uart_put_char+0x12>
	UDR0 = input;
     e9e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	cf 91       	pop	r28
     ea8:	08 95       	ret

00000eaa <_uart_get_char>:

static int _uart_get_char(FILE *stream)
{
	uint8_t c;
	while(!(UCSR0A&(1<<RXC0)));
     eaa:	e0 ec       	ldi	r30, 0xC0	; 192
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	88 23       	and	r24, r24
     eb2:	ec f7       	brge	.-6      	; 0xeae <_uart_get_char+0x4>
	c = UDR0;
     eb4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//_uart_put_char(c,stream); // for debug only
	return c;
}
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	08 95       	ret

00000ebc <usart_init>:

void usart_init(void)
{
	UBRR0H = (uint8_t) (BRC >> 8); // baud
     ebc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t) BRC; // baud
     ec0:	8c e0       	ldi	r24, 0x0C	; 12
     ec2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	UCSR0B = (1 << TXEN0) | (1 << RXEN0); // enable rx and tx
     ec6:	88 e1       	ldi	r24, 0x18	; 24
     ec8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // clock
     ecc:	86 e0       	ldi	r24, 0x06	; 6
     ece:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	//UCSR0A |= (1 << U2X0); // double speed
	
	stdin = stdout = &uart_str; // link stdin and stdout to uart
     ed2:	ec e8       	ldi	r30, 0x8C	; 140
     ed4:	f1 e0       	ldi	r31, 0x01	; 1
     ed6:	8c e0       	ldi	r24, 0x0C	; 12
     ed8:	91 e0       	ldi	r25, 0x01	; 1
     eda:	93 83       	std	Z+3, r25	; 0x03
     edc:	82 83       	std	Z+2, r24	; 0x02
     ede:	91 83       	std	Z+1, r25	; 0x01
     ee0:	80 83       	st	Z, r24
     ee2:	08 95       	ret

00000ee4 <board_init>:
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
	
	usart_init();
     ee4:	0e 94 5e 07 	call	0xebc	; 0xebc <usart_init>
	_adc_init();
     ee8:	0e 94 2e 01 	call	0x25c	; 0x25c <_adc_init>
	_timer1_init();
     eec:	0e 94 d3 06 	call	0xda6	; 0xda6 <_timer1_init>
	_timer0_init();
     ef0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <_timer0_init>
	_timer2_init();
     ef4:	0e 94 33 07 	call	0xe66	; 0xe66 <_timer2_init>
	_init_dc_control();
     ef8:	0e 94 c9 01 	call	0x392	; 0x392 <_init_dc_control>
	_interrupt0_enable(_INT_RISING_EDGE);
     efc:	83 e0       	ldi	r24, 0x03	; 3
     efe:	0e 94 28 02 	call	0x450	; 0x450 <_interrupt0_enable>
	_interrupt1_enable(_INT_RISING_EDGE);
     f02:	83 e0       	ldi	r24, 0x03	; 3
     f04:	0e 94 30 02 	call	0x460	; 0x460 <_interrupt1_enable>
     f08:	08 95       	ret

00000f0a <main>:


int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */
	cli();
     f0a:	f8 94       	cli
	board_init();
     f0c:	0e 94 72 07 	call	0xee4	; 0xee4 <board_init>
	DDRB = 0xFF;
     f10:	8f ef       	ldi	r24, 0xFF	; 255
     f12:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b01100011;
     f14:	83 e6       	ldi	r24, 0x63	; 99
     f16:	8a b9       	out	0x0a, r24	; 10
	sei();
     f18:	78 94       	sei
	while (1)
	{
		_dc_controller_loop();
     f1a:	0e 94 13 02 	call	0x426	; 0x426 <_dc_controller_loop>
     f1e:	fd cf       	rjmp	.-6      	; 0xf1a <main+0x10>

00000f20 <__divsf3>:
     f20:	0e 94 a4 07 	call	0xf48	; 0xf48 <__divsf3x>
     f24:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__fp_round>
     f28:	0e 94 c3 08 	call	0x1186	; 0x1186 <__fp_pscB>
     f2c:	58 f0       	brcs	.+22     	; 0xf44 <__divsf3+0x24>
     f2e:	0e 94 bc 08 	call	0x1178	; 0x1178 <__fp_pscA>
     f32:	40 f0       	brcs	.+16     	; 0xf44 <__divsf3+0x24>
     f34:	29 f4       	brne	.+10     	; 0xf40 <__divsf3+0x20>
     f36:	5f 3f       	cpi	r21, 0xFF	; 255
     f38:	29 f0       	breq	.+10     	; 0xf44 <__divsf3+0x24>
     f3a:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_inf>
     f3e:	51 11       	cpse	r21, r1
     f40:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_szero>
     f44:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__fp_nan>

00000f48 <__divsf3x>:
     f48:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__fp_split3>
     f4c:	68 f3       	brcs	.-38     	; 0xf28 <__divsf3+0x8>

00000f4e <__divsf3_pse>:
     f4e:	99 23       	and	r25, r25
     f50:	b1 f3       	breq	.-20     	; 0xf3e <__divsf3+0x1e>
     f52:	55 23       	and	r21, r21
     f54:	91 f3       	breq	.-28     	; 0xf3a <__divsf3+0x1a>
     f56:	95 1b       	sub	r25, r21
     f58:	55 0b       	sbc	r21, r21
     f5a:	bb 27       	eor	r27, r27
     f5c:	aa 27       	eor	r26, r26
     f5e:	62 17       	cp	r22, r18
     f60:	73 07       	cpc	r23, r19
     f62:	84 07       	cpc	r24, r20
     f64:	38 f0       	brcs	.+14     	; 0xf74 <__divsf3_pse+0x26>
     f66:	9f 5f       	subi	r25, 0xFF	; 255
     f68:	5f 4f       	sbci	r21, 0xFF	; 255
     f6a:	22 0f       	add	r18, r18
     f6c:	33 1f       	adc	r19, r19
     f6e:	44 1f       	adc	r20, r20
     f70:	aa 1f       	adc	r26, r26
     f72:	a9 f3       	breq	.-22     	; 0xf5e <__divsf3_pse+0x10>
     f74:	35 d0       	rcall	.+106    	; 0xfe0 <__divsf3_pse+0x92>
     f76:	0e 2e       	mov	r0, r30
     f78:	3a f0       	brmi	.+14     	; 0xf88 <__divsf3_pse+0x3a>
     f7a:	e0 e8       	ldi	r30, 0x80	; 128
     f7c:	32 d0       	rcall	.+100    	; 0xfe2 <__divsf3_pse+0x94>
     f7e:	91 50       	subi	r25, 0x01	; 1
     f80:	50 40       	sbci	r21, 0x00	; 0
     f82:	e6 95       	lsr	r30
     f84:	00 1c       	adc	r0, r0
     f86:	ca f7       	brpl	.-14     	; 0xf7a <__divsf3_pse+0x2c>
     f88:	2b d0       	rcall	.+86     	; 0xfe0 <__divsf3_pse+0x92>
     f8a:	fe 2f       	mov	r31, r30
     f8c:	29 d0       	rcall	.+82     	; 0xfe0 <__divsf3_pse+0x92>
     f8e:	66 0f       	add	r22, r22
     f90:	77 1f       	adc	r23, r23
     f92:	88 1f       	adc	r24, r24
     f94:	bb 1f       	adc	r27, r27
     f96:	26 17       	cp	r18, r22
     f98:	37 07       	cpc	r19, r23
     f9a:	48 07       	cpc	r20, r24
     f9c:	ab 07       	cpc	r26, r27
     f9e:	b0 e8       	ldi	r27, 0x80	; 128
     fa0:	09 f0       	breq	.+2      	; 0xfa4 <__divsf3_pse+0x56>
     fa2:	bb 0b       	sbc	r27, r27
     fa4:	80 2d       	mov	r24, r0
     fa6:	bf 01       	movw	r22, r30
     fa8:	ff 27       	eor	r31, r31
     faa:	93 58       	subi	r25, 0x83	; 131
     fac:	5f 4f       	sbci	r21, 0xFF	; 255
     fae:	3a f0       	brmi	.+14     	; 0xfbe <__divsf3_pse+0x70>
     fb0:	9e 3f       	cpi	r25, 0xFE	; 254
     fb2:	51 05       	cpc	r21, r1
     fb4:	78 f0       	brcs	.+30     	; 0xfd4 <__divsf3_pse+0x86>
     fb6:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_inf>
     fba:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_szero>
     fbe:	5f 3f       	cpi	r21, 0xFF	; 255
     fc0:	e4 f3       	brlt	.-8      	; 0xfba <__divsf3_pse+0x6c>
     fc2:	98 3e       	cpi	r25, 0xE8	; 232
     fc4:	d4 f3       	brlt	.-12     	; 0xfba <__divsf3_pse+0x6c>
     fc6:	86 95       	lsr	r24
     fc8:	77 95       	ror	r23
     fca:	67 95       	ror	r22
     fcc:	b7 95       	ror	r27
     fce:	f7 95       	ror	r31
     fd0:	9f 5f       	subi	r25, 0xFF	; 255
     fd2:	c9 f7       	brne	.-14     	; 0xfc6 <__divsf3_pse+0x78>
     fd4:	88 0f       	add	r24, r24
     fd6:	91 1d       	adc	r25, r1
     fd8:	96 95       	lsr	r25
     fda:	87 95       	ror	r24
     fdc:	97 f9       	bld	r25, 7
     fde:	08 95       	ret
     fe0:	e1 e0       	ldi	r30, 0x01	; 1
     fe2:	66 0f       	add	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	88 1f       	adc	r24, r24
     fe8:	bb 1f       	adc	r27, r27
     fea:	62 17       	cp	r22, r18
     fec:	73 07       	cpc	r23, r19
     fee:	84 07       	cpc	r24, r20
     ff0:	ba 07       	cpc	r27, r26
     ff2:	20 f0       	brcs	.+8      	; 0xffc <__divsf3_pse+0xae>
     ff4:	62 1b       	sub	r22, r18
     ff6:	73 0b       	sbc	r23, r19
     ff8:	84 0b       	sbc	r24, r20
     ffa:	ba 0b       	sbc	r27, r26
     ffc:	ee 1f       	adc	r30, r30
     ffe:	88 f7       	brcc	.-30     	; 0xfe2 <__divsf3_pse+0x94>
    1000:	e0 95       	com	r30
    1002:	08 95       	ret

00001004 <__fixsfsi>:
    1004:	0e 94 09 08 	call	0x1012	; 0x1012 <__fixunssfsi>
    1008:	68 94       	set
    100a:	b1 11       	cpse	r27, r1
    100c:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_szero>
    1010:	08 95       	ret

00001012 <__fixunssfsi>:
    1012:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__fp_splitA>
    1016:	88 f0       	brcs	.+34     	; 0x103a <__fixunssfsi+0x28>
    1018:	9f 57       	subi	r25, 0x7F	; 127
    101a:	98 f0       	brcs	.+38     	; 0x1042 <__fixunssfsi+0x30>
    101c:	b9 2f       	mov	r27, r25
    101e:	99 27       	eor	r25, r25
    1020:	b7 51       	subi	r27, 0x17	; 23
    1022:	b0 f0       	brcs	.+44     	; 0x1050 <__fixunssfsi+0x3e>
    1024:	e1 f0       	breq	.+56     	; 0x105e <__fixunssfsi+0x4c>
    1026:	66 0f       	add	r22, r22
    1028:	77 1f       	adc	r23, r23
    102a:	88 1f       	adc	r24, r24
    102c:	99 1f       	adc	r25, r25
    102e:	1a f0       	brmi	.+6      	; 0x1036 <__fixunssfsi+0x24>
    1030:	ba 95       	dec	r27
    1032:	c9 f7       	brne	.-14     	; 0x1026 <__fixunssfsi+0x14>
    1034:	14 c0       	rjmp	.+40     	; 0x105e <__fixunssfsi+0x4c>
    1036:	b1 30       	cpi	r27, 0x01	; 1
    1038:	91 f0       	breq	.+36     	; 0x105e <__fixunssfsi+0x4c>
    103a:	0e 94 fd 08 	call	0x11fa	; 0x11fa <__fp_zero>
    103e:	b1 e0       	ldi	r27, 0x01	; 1
    1040:	08 95       	ret
    1042:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <__fp_zero>
    1046:	67 2f       	mov	r22, r23
    1048:	78 2f       	mov	r23, r24
    104a:	88 27       	eor	r24, r24
    104c:	b8 5f       	subi	r27, 0xF8	; 248
    104e:	39 f0       	breq	.+14     	; 0x105e <__fixunssfsi+0x4c>
    1050:	b9 3f       	cpi	r27, 0xF9	; 249
    1052:	cc f3       	brlt	.-14     	; 0x1046 <__fixunssfsi+0x34>
    1054:	86 95       	lsr	r24
    1056:	77 95       	ror	r23
    1058:	67 95       	ror	r22
    105a:	b3 95       	inc	r27
    105c:	d9 f7       	brne	.-10     	; 0x1054 <__fixunssfsi+0x42>
    105e:	3e f4       	brtc	.+14     	; 0x106e <__fixunssfsi+0x5c>
    1060:	90 95       	com	r25
    1062:	80 95       	com	r24
    1064:	70 95       	com	r23
    1066:	61 95       	neg	r22
    1068:	7f 4f       	sbci	r23, 0xFF	; 255
    106a:	8f 4f       	sbci	r24, 0xFF	; 255
    106c:	9f 4f       	sbci	r25, 0xFF	; 255
    106e:	08 95       	ret

00001070 <__floatunsisf>:
    1070:	e8 94       	clt
    1072:	09 c0       	rjmp	.+18     	; 0x1086 <__floatsisf+0x12>

00001074 <__floatsisf>:
    1074:	97 fb       	bst	r25, 7
    1076:	3e f4       	brtc	.+14     	; 0x1086 <__floatsisf+0x12>
    1078:	90 95       	com	r25
    107a:	80 95       	com	r24
    107c:	70 95       	com	r23
    107e:	61 95       	neg	r22
    1080:	7f 4f       	sbci	r23, 0xFF	; 255
    1082:	8f 4f       	sbci	r24, 0xFF	; 255
    1084:	9f 4f       	sbci	r25, 0xFF	; 255
    1086:	99 23       	and	r25, r25
    1088:	a9 f0       	breq	.+42     	; 0x10b4 <__floatsisf+0x40>
    108a:	f9 2f       	mov	r31, r25
    108c:	96 e9       	ldi	r25, 0x96	; 150
    108e:	bb 27       	eor	r27, r27
    1090:	93 95       	inc	r25
    1092:	f6 95       	lsr	r31
    1094:	87 95       	ror	r24
    1096:	77 95       	ror	r23
    1098:	67 95       	ror	r22
    109a:	b7 95       	ror	r27
    109c:	f1 11       	cpse	r31, r1
    109e:	f8 cf       	rjmp	.-16     	; 0x1090 <__floatsisf+0x1c>
    10a0:	fa f4       	brpl	.+62     	; 0x10e0 <__floatsisf+0x6c>
    10a2:	bb 0f       	add	r27, r27
    10a4:	11 f4       	brne	.+4      	; 0x10aa <__floatsisf+0x36>
    10a6:	60 ff       	sbrs	r22, 0
    10a8:	1b c0       	rjmp	.+54     	; 0x10e0 <__floatsisf+0x6c>
    10aa:	6f 5f       	subi	r22, 0xFF	; 255
    10ac:	7f 4f       	sbci	r23, 0xFF	; 255
    10ae:	8f 4f       	sbci	r24, 0xFF	; 255
    10b0:	9f 4f       	sbci	r25, 0xFF	; 255
    10b2:	16 c0       	rjmp	.+44     	; 0x10e0 <__floatsisf+0x6c>
    10b4:	88 23       	and	r24, r24
    10b6:	11 f0       	breq	.+4      	; 0x10bc <__floatsisf+0x48>
    10b8:	96 e9       	ldi	r25, 0x96	; 150
    10ba:	11 c0       	rjmp	.+34     	; 0x10de <__floatsisf+0x6a>
    10bc:	77 23       	and	r23, r23
    10be:	21 f0       	breq	.+8      	; 0x10c8 <__floatsisf+0x54>
    10c0:	9e e8       	ldi	r25, 0x8E	; 142
    10c2:	87 2f       	mov	r24, r23
    10c4:	76 2f       	mov	r23, r22
    10c6:	05 c0       	rjmp	.+10     	; 0x10d2 <__floatsisf+0x5e>
    10c8:	66 23       	and	r22, r22
    10ca:	71 f0       	breq	.+28     	; 0x10e8 <__floatsisf+0x74>
    10cc:	96 e8       	ldi	r25, 0x86	; 134
    10ce:	86 2f       	mov	r24, r22
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	2a f0       	brmi	.+10     	; 0x10e0 <__floatsisf+0x6c>
    10d6:	9a 95       	dec	r25
    10d8:	66 0f       	add	r22, r22
    10da:	77 1f       	adc	r23, r23
    10dc:	88 1f       	adc	r24, r24
    10de:	da f7       	brpl	.-10     	; 0x10d6 <__floatsisf+0x62>
    10e0:	88 0f       	add	r24, r24
    10e2:	96 95       	lsr	r25
    10e4:	87 95       	ror	r24
    10e6:	97 f9       	bld	r25, 7
    10e8:	08 95       	ret

000010ea <__floatundisf>:
    10ea:	e8 94       	clt

000010ec <__fp_di2sf>:
    10ec:	f9 2f       	mov	r31, r25
    10ee:	96 eb       	ldi	r25, 0xB6	; 182
    10f0:	ff 23       	and	r31, r31
    10f2:	81 f0       	breq	.+32     	; 0x1114 <__fp_di2sf+0x28>
    10f4:	12 16       	cp	r1, r18
    10f6:	13 06       	cpc	r1, r19
    10f8:	14 06       	cpc	r1, r20
    10fa:	44 0b       	sbc	r20, r20
    10fc:	93 95       	inc	r25
    10fe:	f6 95       	lsr	r31
    1100:	87 95       	ror	r24
    1102:	77 95       	ror	r23
    1104:	67 95       	ror	r22
    1106:	57 95       	ror	r21
    1108:	40 40       	sbci	r20, 0x00	; 0
    110a:	ff 23       	and	r31, r31
    110c:	b9 f7       	brne	.-18     	; 0x10fc <__fp_di2sf+0x10>
    110e:	1b c0       	rjmp	.+54     	; 0x1146 <__fp_di2sf+0x5a>
    1110:	99 27       	eor	r25, r25
    1112:	08 95       	ret
    1114:	88 23       	and	r24, r24
    1116:	51 f4       	brne	.+20     	; 0x112c <__fp_di2sf+0x40>
    1118:	98 50       	subi	r25, 0x08	; 8
    111a:	d2 f7       	brpl	.-12     	; 0x1110 <__fp_di2sf+0x24>
    111c:	87 2b       	or	r24, r23
    111e:	76 2f       	mov	r23, r22
    1120:	65 2f       	mov	r22, r21
    1122:	54 2f       	mov	r21, r20
    1124:	43 2f       	mov	r20, r19
    1126:	32 2f       	mov	r19, r18
    1128:	20 e0       	ldi	r18, 0x00	; 0
    112a:	b1 f3       	breq	.-20     	; 0x1118 <__fp_di2sf+0x2c>
    112c:	12 16       	cp	r1, r18
    112e:	13 06       	cpc	r1, r19
    1130:	14 06       	cpc	r1, r20
    1132:	44 0b       	sbc	r20, r20
    1134:	88 23       	and	r24, r24
    1136:	3a f0       	brmi	.+14     	; 0x1146 <__fp_di2sf+0x5a>
    1138:	9a 95       	dec	r25
    113a:	44 0f       	add	r20, r20
    113c:	55 1f       	adc	r21, r21
    113e:	66 1f       	adc	r22, r22
    1140:	77 1f       	adc	r23, r23
    1142:	88 1f       	adc	r24, r24
    1144:	ca f7       	brpl	.-14     	; 0x1138 <__fp_di2sf+0x4c>
    1146:	55 23       	and	r21, r21
    1148:	4a f4       	brpl	.+18     	; 0x115c <__fp_di2sf+0x70>
    114a:	44 0f       	add	r20, r20
    114c:	55 1f       	adc	r21, r21
    114e:	11 f4       	brne	.+4      	; 0x1154 <__fp_di2sf+0x68>
    1150:	60 ff       	sbrs	r22, 0
    1152:	04 c0       	rjmp	.+8      	; 0x115c <__fp_di2sf+0x70>
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	8f 4f       	sbci	r24, 0xFF	; 255
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	88 0f       	add	r24, r24
    115e:	96 95       	lsr	r25
    1160:	87 95       	ror	r24
    1162:	97 f9       	bld	r25, 7
    1164:	08 95       	ret

00001166 <__fp_inf>:
    1166:	97 f9       	bld	r25, 7
    1168:	9f 67       	ori	r25, 0x7F	; 127
    116a:	80 e8       	ldi	r24, 0x80	; 128
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	08 95       	ret

00001172 <__fp_nan>:
    1172:	9f ef       	ldi	r25, 0xFF	; 255
    1174:	80 ec       	ldi	r24, 0xC0	; 192
    1176:	08 95       	ret

00001178 <__fp_pscA>:
    1178:	00 24       	eor	r0, r0
    117a:	0a 94       	dec	r0
    117c:	16 16       	cp	r1, r22
    117e:	17 06       	cpc	r1, r23
    1180:	18 06       	cpc	r1, r24
    1182:	09 06       	cpc	r0, r25
    1184:	08 95       	ret

00001186 <__fp_pscB>:
    1186:	00 24       	eor	r0, r0
    1188:	0a 94       	dec	r0
    118a:	12 16       	cp	r1, r18
    118c:	13 06       	cpc	r1, r19
    118e:	14 06       	cpc	r1, r20
    1190:	05 06       	cpc	r0, r21
    1192:	08 95       	ret

00001194 <__fp_round>:
    1194:	09 2e       	mov	r0, r25
    1196:	03 94       	inc	r0
    1198:	00 0c       	add	r0, r0
    119a:	11 f4       	brne	.+4      	; 0x11a0 <__fp_round+0xc>
    119c:	88 23       	and	r24, r24
    119e:	52 f0       	brmi	.+20     	; 0x11b4 <__fp_round+0x20>
    11a0:	bb 0f       	add	r27, r27
    11a2:	40 f4       	brcc	.+16     	; 0x11b4 <__fp_round+0x20>
    11a4:	bf 2b       	or	r27, r31
    11a6:	11 f4       	brne	.+4      	; 0x11ac <__fp_round+0x18>
    11a8:	60 ff       	sbrs	r22, 0
    11aa:	04 c0       	rjmp	.+8      	; 0x11b4 <__fp_round+0x20>
    11ac:	6f 5f       	subi	r22, 0xFF	; 255
    11ae:	7f 4f       	sbci	r23, 0xFF	; 255
    11b0:	8f 4f       	sbci	r24, 0xFF	; 255
    11b2:	9f 4f       	sbci	r25, 0xFF	; 255
    11b4:	08 95       	ret

000011b6 <__fp_split3>:
    11b6:	57 fd       	sbrc	r21, 7
    11b8:	90 58       	subi	r25, 0x80	; 128
    11ba:	44 0f       	add	r20, r20
    11bc:	55 1f       	adc	r21, r21
    11be:	59 f0       	breq	.+22     	; 0x11d6 <__fp_splitA+0x10>
    11c0:	5f 3f       	cpi	r21, 0xFF	; 255
    11c2:	71 f0       	breq	.+28     	; 0x11e0 <__fp_splitA+0x1a>
    11c4:	47 95       	ror	r20

000011c6 <__fp_splitA>:
    11c6:	88 0f       	add	r24, r24
    11c8:	97 fb       	bst	r25, 7
    11ca:	99 1f       	adc	r25, r25
    11cc:	61 f0       	breq	.+24     	; 0x11e6 <__fp_splitA+0x20>
    11ce:	9f 3f       	cpi	r25, 0xFF	; 255
    11d0:	79 f0       	breq	.+30     	; 0x11f0 <__fp_splitA+0x2a>
    11d2:	87 95       	ror	r24
    11d4:	08 95       	ret
    11d6:	12 16       	cp	r1, r18
    11d8:	13 06       	cpc	r1, r19
    11da:	14 06       	cpc	r1, r20
    11dc:	55 1f       	adc	r21, r21
    11de:	f2 cf       	rjmp	.-28     	; 0x11c4 <__fp_split3+0xe>
    11e0:	46 95       	lsr	r20
    11e2:	f1 df       	rcall	.-30     	; 0x11c6 <__fp_splitA>
    11e4:	08 c0       	rjmp	.+16     	; 0x11f6 <__fp_splitA+0x30>
    11e6:	16 16       	cp	r1, r22
    11e8:	17 06       	cpc	r1, r23
    11ea:	18 06       	cpc	r1, r24
    11ec:	99 1f       	adc	r25, r25
    11ee:	f1 cf       	rjmp	.-30     	; 0x11d2 <__fp_splitA+0xc>
    11f0:	86 95       	lsr	r24
    11f2:	71 05       	cpc	r23, r1
    11f4:	61 05       	cpc	r22, r1
    11f6:	08 94       	sec
    11f8:	08 95       	ret

000011fa <__fp_zero>:
    11fa:	e8 94       	clt

000011fc <__fp_szero>:
    11fc:	bb 27       	eor	r27, r27
    11fe:	66 27       	eor	r22, r22
    1200:	77 27       	eor	r23, r23
    1202:	cb 01       	movw	r24, r22
    1204:	97 f9       	bld	r25, 7
    1206:	08 95       	ret

00001208 <__mulsf3>:
    1208:	0e 94 17 09 	call	0x122e	; 0x122e <__mulsf3x>
    120c:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__fp_round>
    1210:	0e 94 bc 08 	call	0x1178	; 0x1178 <__fp_pscA>
    1214:	38 f0       	brcs	.+14     	; 0x1224 <__mulsf3+0x1c>
    1216:	0e 94 c3 08 	call	0x1186	; 0x1186 <__fp_pscB>
    121a:	20 f0       	brcs	.+8      	; 0x1224 <__mulsf3+0x1c>
    121c:	95 23       	and	r25, r21
    121e:	11 f0       	breq	.+4      	; 0x1224 <__mulsf3+0x1c>
    1220:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_inf>
    1224:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__fp_nan>
    1228:	11 24       	eor	r1, r1
    122a:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_szero>

0000122e <__mulsf3x>:
    122e:	0e 94 db 08 	call	0x11b6	; 0x11b6 <__fp_split3>
    1232:	70 f3       	brcs	.-36     	; 0x1210 <__mulsf3+0x8>

00001234 <__mulsf3_pse>:
    1234:	95 9f       	mul	r25, r21
    1236:	c1 f3       	breq	.-16     	; 0x1228 <__mulsf3+0x20>
    1238:	95 0f       	add	r25, r21
    123a:	50 e0       	ldi	r21, 0x00	; 0
    123c:	55 1f       	adc	r21, r21
    123e:	62 9f       	mul	r22, r18
    1240:	f0 01       	movw	r30, r0
    1242:	72 9f       	mul	r23, r18
    1244:	bb 27       	eor	r27, r27
    1246:	f0 0d       	add	r31, r0
    1248:	b1 1d       	adc	r27, r1
    124a:	63 9f       	mul	r22, r19
    124c:	aa 27       	eor	r26, r26
    124e:	f0 0d       	add	r31, r0
    1250:	b1 1d       	adc	r27, r1
    1252:	aa 1f       	adc	r26, r26
    1254:	64 9f       	mul	r22, r20
    1256:	66 27       	eor	r22, r22
    1258:	b0 0d       	add	r27, r0
    125a:	a1 1d       	adc	r26, r1
    125c:	66 1f       	adc	r22, r22
    125e:	82 9f       	mul	r24, r18
    1260:	22 27       	eor	r18, r18
    1262:	b0 0d       	add	r27, r0
    1264:	a1 1d       	adc	r26, r1
    1266:	62 1f       	adc	r22, r18
    1268:	73 9f       	mul	r23, r19
    126a:	b0 0d       	add	r27, r0
    126c:	a1 1d       	adc	r26, r1
    126e:	62 1f       	adc	r22, r18
    1270:	83 9f       	mul	r24, r19
    1272:	a0 0d       	add	r26, r0
    1274:	61 1d       	adc	r22, r1
    1276:	22 1f       	adc	r18, r18
    1278:	74 9f       	mul	r23, r20
    127a:	33 27       	eor	r19, r19
    127c:	a0 0d       	add	r26, r0
    127e:	61 1d       	adc	r22, r1
    1280:	23 1f       	adc	r18, r19
    1282:	84 9f       	mul	r24, r20
    1284:	60 0d       	add	r22, r0
    1286:	21 1d       	adc	r18, r1
    1288:	82 2f       	mov	r24, r18
    128a:	76 2f       	mov	r23, r22
    128c:	6a 2f       	mov	r22, r26
    128e:	11 24       	eor	r1, r1
    1290:	9f 57       	subi	r25, 0x7F	; 127
    1292:	50 40       	sbci	r21, 0x00	; 0
    1294:	9a f0       	brmi	.+38     	; 0x12bc <__mulsf3_pse+0x88>
    1296:	f1 f0       	breq	.+60     	; 0x12d4 <__mulsf3_pse+0xa0>
    1298:	88 23       	and	r24, r24
    129a:	4a f0       	brmi	.+18     	; 0x12ae <__mulsf3_pse+0x7a>
    129c:	ee 0f       	add	r30, r30
    129e:	ff 1f       	adc	r31, r31
    12a0:	bb 1f       	adc	r27, r27
    12a2:	66 1f       	adc	r22, r22
    12a4:	77 1f       	adc	r23, r23
    12a6:	88 1f       	adc	r24, r24
    12a8:	91 50       	subi	r25, 0x01	; 1
    12aa:	50 40       	sbci	r21, 0x00	; 0
    12ac:	a9 f7       	brne	.-22     	; 0x1298 <__mulsf3_pse+0x64>
    12ae:	9e 3f       	cpi	r25, 0xFE	; 254
    12b0:	51 05       	cpc	r21, r1
    12b2:	80 f0       	brcs	.+32     	; 0x12d4 <__mulsf3_pse+0xa0>
    12b4:	0c 94 b3 08 	jmp	0x1166	; 0x1166 <__fp_inf>
    12b8:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_szero>
    12bc:	5f 3f       	cpi	r21, 0xFF	; 255
    12be:	e4 f3       	brlt	.-8      	; 0x12b8 <__mulsf3_pse+0x84>
    12c0:	98 3e       	cpi	r25, 0xE8	; 232
    12c2:	d4 f3       	brlt	.-12     	; 0x12b8 <__mulsf3_pse+0x84>
    12c4:	86 95       	lsr	r24
    12c6:	77 95       	ror	r23
    12c8:	67 95       	ror	r22
    12ca:	b7 95       	ror	r27
    12cc:	f7 95       	ror	r31
    12ce:	e7 95       	ror	r30
    12d0:	9f 5f       	subi	r25, 0xFF	; 255
    12d2:	c1 f7       	brne	.-16     	; 0x12c4 <__mulsf3_pse+0x90>
    12d4:	fe 2b       	or	r31, r30
    12d6:	88 0f       	add	r24, r24
    12d8:	91 1d       	adc	r25, r1
    12da:	96 95       	lsr	r25
    12dc:	87 95       	ror	r24
    12de:	97 f9       	bld	r25, 7
    12e0:	08 95       	ret

000012e2 <__divmodhi4>:
    12e2:	97 fb       	bst	r25, 7
    12e4:	07 2e       	mov	r0, r23
    12e6:	16 f4       	brtc	.+4      	; 0x12ec <__divmodhi4+0xa>
    12e8:	00 94       	com	r0
    12ea:	07 d0       	rcall	.+14     	; 0x12fa <__divmodhi4_neg1>
    12ec:	77 fd       	sbrc	r23, 7
    12ee:	09 d0       	rcall	.+18     	; 0x1302 <__divmodhi4_neg2>
    12f0:	0e 94 cd 09 	call	0x139a	; 0x139a <__udivmodhi4>
    12f4:	07 fc       	sbrc	r0, 7
    12f6:	05 d0       	rcall	.+10     	; 0x1302 <__divmodhi4_neg2>
    12f8:	3e f4       	brtc	.+14     	; 0x1308 <__divmodhi4_exit>

000012fa <__divmodhi4_neg1>:
    12fa:	90 95       	com	r25
    12fc:	81 95       	neg	r24
    12fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1300:	08 95       	ret

00001302 <__divmodhi4_neg2>:
    1302:	70 95       	com	r23
    1304:	61 95       	neg	r22
    1306:	7f 4f       	sbci	r23, 0xFF	; 255

00001308 <__divmodhi4_exit>:
    1308:	08 95       	ret

0000130a <__divmodsi4>:
    130a:	05 2e       	mov	r0, r21
    130c:	97 fb       	bst	r25, 7
    130e:	1e f4       	brtc	.+6      	; 0x1316 <__divmodsi4+0xc>
    1310:	00 94       	com	r0
    1312:	0e 94 9c 09 	call	0x1338	; 0x1338 <__negsi2>
    1316:	57 fd       	sbrc	r21, 7
    1318:	07 d0       	rcall	.+14     	; 0x1328 <__divmodsi4_neg2>
    131a:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__udivmodsi4>
    131e:	07 fc       	sbrc	r0, 7
    1320:	03 d0       	rcall	.+6      	; 0x1328 <__divmodsi4_neg2>
    1322:	4e f4       	brtc	.+18     	; 0x1336 <__divmodsi4_exit>
    1324:	0c 94 9c 09 	jmp	0x1338	; 0x1338 <__negsi2>

00001328 <__divmodsi4_neg2>:
    1328:	50 95       	com	r21
    132a:	40 95       	com	r20
    132c:	30 95       	com	r19
    132e:	21 95       	neg	r18
    1330:	3f 4f       	sbci	r19, 0xFF	; 255
    1332:	4f 4f       	sbci	r20, 0xFF	; 255
    1334:	5f 4f       	sbci	r21, 0xFF	; 255

00001336 <__divmodsi4_exit>:
    1336:	08 95       	ret

00001338 <__negsi2>:
    1338:	90 95       	com	r25
    133a:	80 95       	com	r24
    133c:	70 95       	com	r23
    133e:	61 95       	neg	r22
    1340:	7f 4f       	sbci	r23, 0xFF	; 255
    1342:	8f 4f       	sbci	r24, 0xFF	; 255
    1344:	9f 4f       	sbci	r25, 0xFF	; 255
    1346:	08 95       	ret

00001348 <__mulshisi3>:
    1348:	b7 ff       	sbrs	r27, 7
    134a:	0c 94 03 0a 	jmp	0x1406	; 0x1406 <__muluhisi3>

0000134e <__mulohisi3>:
    134e:	0e 94 03 0a 	call	0x1406	; 0x1406 <__muluhisi3>
    1352:	82 1b       	sub	r24, r18
    1354:	93 0b       	sbc	r25, r19
    1356:	08 95       	ret

00001358 <__adddi3_s8>:
    1358:	00 24       	eor	r0, r0
    135a:	a7 fd       	sbrc	r26, 7
    135c:	00 94       	com	r0
    135e:	2a 0f       	add	r18, r26
    1360:	30 1d       	adc	r19, r0
    1362:	40 1d       	adc	r20, r0
    1364:	50 1d       	adc	r21, r0
    1366:	60 1d       	adc	r22, r0
    1368:	70 1d       	adc	r23, r0
    136a:	80 1d       	adc	r24, r0
    136c:	90 1d       	adc	r25, r0
    136e:	08 95       	ret

00001370 <__subdi3>:
    1370:	2a 19       	sub	r18, r10
    1372:	3b 09       	sbc	r19, r11
    1374:	4c 09       	sbc	r20, r12
    1376:	5d 09       	sbc	r21, r13
    1378:	6e 09       	sbc	r22, r14
    137a:	7f 09       	sbc	r23, r15
    137c:	80 0b       	sbc	r24, r16
    137e:	91 0b       	sbc	r25, r17
    1380:	08 95       	ret

00001382 <__cmpdi2_s8>:
    1382:	00 24       	eor	r0, r0
    1384:	a7 fd       	sbrc	r26, 7
    1386:	00 94       	com	r0
    1388:	2a 17       	cp	r18, r26
    138a:	30 05       	cpc	r19, r0
    138c:	40 05       	cpc	r20, r0
    138e:	50 05       	cpc	r21, r0
    1390:	60 05       	cpc	r22, r0
    1392:	70 05       	cpc	r23, r0
    1394:	80 05       	cpc	r24, r0
    1396:	90 05       	cpc	r25, r0
    1398:	08 95       	ret

0000139a <__udivmodhi4>:
    139a:	aa 1b       	sub	r26, r26
    139c:	bb 1b       	sub	r27, r27
    139e:	51 e1       	ldi	r21, 0x11	; 17
    13a0:	07 c0       	rjmp	.+14     	; 0x13b0 <__udivmodhi4_ep>

000013a2 <__udivmodhi4_loop>:
    13a2:	aa 1f       	adc	r26, r26
    13a4:	bb 1f       	adc	r27, r27
    13a6:	a6 17       	cp	r26, r22
    13a8:	b7 07       	cpc	r27, r23
    13aa:	10 f0       	brcs	.+4      	; 0x13b0 <__udivmodhi4_ep>
    13ac:	a6 1b       	sub	r26, r22
    13ae:	b7 0b       	sbc	r27, r23

000013b0 <__udivmodhi4_ep>:
    13b0:	88 1f       	adc	r24, r24
    13b2:	99 1f       	adc	r25, r25
    13b4:	5a 95       	dec	r21
    13b6:	a9 f7       	brne	.-22     	; 0x13a2 <__udivmodhi4_loop>
    13b8:	80 95       	com	r24
    13ba:	90 95       	com	r25
    13bc:	bc 01       	movw	r22, r24
    13be:	cd 01       	movw	r24, r26
    13c0:	08 95       	ret

000013c2 <__udivmodsi4>:
    13c2:	a1 e2       	ldi	r26, 0x21	; 33
    13c4:	1a 2e       	mov	r1, r26
    13c6:	aa 1b       	sub	r26, r26
    13c8:	bb 1b       	sub	r27, r27
    13ca:	fd 01       	movw	r30, r26
    13cc:	0d c0       	rjmp	.+26     	; 0x13e8 <__udivmodsi4_ep>

000013ce <__udivmodsi4_loop>:
    13ce:	aa 1f       	adc	r26, r26
    13d0:	bb 1f       	adc	r27, r27
    13d2:	ee 1f       	adc	r30, r30
    13d4:	ff 1f       	adc	r31, r31
    13d6:	a2 17       	cp	r26, r18
    13d8:	b3 07       	cpc	r27, r19
    13da:	e4 07       	cpc	r30, r20
    13dc:	f5 07       	cpc	r31, r21
    13de:	20 f0       	brcs	.+8      	; 0x13e8 <__udivmodsi4_ep>
    13e0:	a2 1b       	sub	r26, r18
    13e2:	b3 0b       	sbc	r27, r19
    13e4:	e4 0b       	sbc	r30, r20
    13e6:	f5 0b       	sbc	r31, r21

000013e8 <__udivmodsi4_ep>:
    13e8:	66 1f       	adc	r22, r22
    13ea:	77 1f       	adc	r23, r23
    13ec:	88 1f       	adc	r24, r24
    13ee:	99 1f       	adc	r25, r25
    13f0:	1a 94       	dec	r1
    13f2:	69 f7       	brne	.-38     	; 0x13ce <__udivmodsi4_loop>
    13f4:	60 95       	com	r22
    13f6:	70 95       	com	r23
    13f8:	80 95       	com	r24
    13fa:	90 95       	com	r25
    13fc:	9b 01       	movw	r18, r22
    13fe:	ac 01       	movw	r20, r24
    1400:	bd 01       	movw	r22, r26
    1402:	cf 01       	movw	r24, r30
    1404:	08 95       	ret

00001406 <__muluhisi3>:
    1406:	0e 94 0e 0a 	call	0x141c	; 0x141c <__umulhisi3>
    140a:	a5 9f       	mul	r26, r21
    140c:	90 0d       	add	r25, r0
    140e:	b4 9f       	mul	r27, r20
    1410:	90 0d       	add	r25, r0
    1412:	a4 9f       	mul	r26, r20
    1414:	80 0d       	add	r24, r0
    1416:	91 1d       	adc	r25, r1
    1418:	11 24       	eor	r1, r1
    141a:	08 95       	ret

0000141c <__umulhisi3>:
    141c:	a2 9f       	mul	r26, r18
    141e:	b0 01       	movw	r22, r0
    1420:	b3 9f       	mul	r27, r19
    1422:	c0 01       	movw	r24, r0
    1424:	a3 9f       	mul	r26, r19
    1426:	70 0d       	add	r23, r0
    1428:	81 1d       	adc	r24, r1
    142a:	11 24       	eor	r1, r1
    142c:	91 1d       	adc	r25, r1
    142e:	b2 9f       	mul	r27, r18
    1430:	70 0d       	add	r23, r0
    1432:	81 1d       	adc	r24, r1
    1434:	11 24       	eor	r1, r1
    1436:	91 1d       	adc	r25, r1
    1438:	08 95       	ret

0000143a <malloc>:
    143a:	0f 93       	push	r16
    143c:	1f 93       	push	r17
    143e:	cf 93       	push	r28
    1440:	df 93       	push	r29
    1442:	82 30       	cpi	r24, 0x02	; 2
    1444:	91 05       	cpc	r25, r1
    1446:	10 f4       	brcc	.+4      	; 0x144c <malloc+0x12>
    1448:	82 e0       	ldi	r24, 0x02	; 2
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	e0 91 8a 01 	lds	r30, 0x018A	; 0x80018a <__flp>
    1450:	f0 91 8b 01 	lds	r31, 0x018B	; 0x80018b <__flp+0x1>
    1454:	20 e0       	ldi	r18, 0x00	; 0
    1456:	30 e0       	ldi	r19, 0x00	; 0
    1458:	a0 e0       	ldi	r26, 0x00	; 0
    145a:	b0 e0       	ldi	r27, 0x00	; 0
    145c:	30 97       	sbiw	r30, 0x00	; 0
    145e:	19 f1       	breq	.+70     	; 0x14a6 <malloc+0x6c>
    1460:	40 81       	ld	r20, Z
    1462:	51 81       	ldd	r21, Z+1	; 0x01
    1464:	02 81       	ldd	r16, Z+2	; 0x02
    1466:	13 81       	ldd	r17, Z+3	; 0x03
    1468:	48 17       	cp	r20, r24
    146a:	59 07       	cpc	r21, r25
    146c:	c8 f0       	brcs	.+50     	; 0x14a0 <malloc+0x66>
    146e:	84 17       	cp	r24, r20
    1470:	95 07       	cpc	r25, r21
    1472:	69 f4       	brne	.+26     	; 0x148e <malloc+0x54>
    1474:	10 97       	sbiw	r26, 0x00	; 0
    1476:	31 f0       	breq	.+12     	; 0x1484 <malloc+0x4a>
    1478:	12 96       	adiw	r26, 0x02	; 2
    147a:	0c 93       	st	X, r16
    147c:	12 97       	sbiw	r26, 0x02	; 2
    147e:	13 96       	adiw	r26, 0x03	; 3
    1480:	1c 93       	st	X, r17
    1482:	27 c0       	rjmp	.+78     	; 0x14d2 <malloc+0x98>
    1484:	00 93 8a 01 	sts	0x018A, r16	; 0x80018a <__flp>
    1488:	10 93 8b 01 	sts	0x018B, r17	; 0x80018b <__flp+0x1>
    148c:	22 c0       	rjmp	.+68     	; 0x14d2 <malloc+0x98>
    148e:	21 15       	cp	r18, r1
    1490:	31 05       	cpc	r19, r1
    1492:	19 f0       	breq	.+6      	; 0x149a <malloc+0x60>
    1494:	42 17       	cp	r20, r18
    1496:	53 07       	cpc	r21, r19
    1498:	18 f4       	brcc	.+6      	; 0x14a0 <malloc+0x66>
    149a:	9a 01       	movw	r18, r20
    149c:	bd 01       	movw	r22, r26
    149e:	ef 01       	movw	r28, r30
    14a0:	df 01       	movw	r26, r30
    14a2:	f8 01       	movw	r30, r16
    14a4:	db cf       	rjmp	.-74     	; 0x145c <malloc+0x22>
    14a6:	21 15       	cp	r18, r1
    14a8:	31 05       	cpc	r19, r1
    14aa:	f9 f0       	breq	.+62     	; 0x14ea <malloc+0xb0>
    14ac:	28 1b       	sub	r18, r24
    14ae:	39 0b       	sbc	r19, r25
    14b0:	24 30       	cpi	r18, 0x04	; 4
    14b2:	31 05       	cpc	r19, r1
    14b4:	80 f4       	brcc	.+32     	; 0x14d6 <malloc+0x9c>
    14b6:	8a 81       	ldd	r24, Y+2	; 0x02
    14b8:	9b 81       	ldd	r25, Y+3	; 0x03
    14ba:	61 15       	cp	r22, r1
    14bc:	71 05       	cpc	r23, r1
    14be:	21 f0       	breq	.+8      	; 0x14c8 <malloc+0x8e>
    14c0:	fb 01       	movw	r30, r22
    14c2:	93 83       	std	Z+3, r25	; 0x03
    14c4:	82 83       	std	Z+2, r24	; 0x02
    14c6:	04 c0       	rjmp	.+8      	; 0x14d0 <malloc+0x96>
    14c8:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <__flp+0x1>
    14cc:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <__flp>
    14d0:	fe 01       	movw	r30, r28
    14d2:	32 96       	adiw	r30, 0x02	; 2
    14d4:	44 c0       	rjmp	.+136    	; 0x155e <malloc+0x124>
    14d6:	fe 01       	movw	r30, r28
    14d8:	e2 0f       	add	r30, r18
    14da:	f3 1f       	adc	r31, r19
    14dc:	81 93       	st	Z+, r24
    14de:	91 93       	st	Z+, r25
    14e0:	22 50       	subi	r18, 0x02	; 2
    14e2:	31 09       	sbc	r19, r1
    14e4:	39 83       	std	Y+1, r19	; 0x01
    14e6:	28 83       	st	Y, r18
    14e8:	3a c0       	rjmp	.+116    	; 0x155e <malloc+0x124>
    14ea:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <__brkval>
    14ee:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <__brkval+0x1>
    14f2:	23 2b       	or	r18, r19
    14f4:	41 f4       	brne	.+16     	; 0x1506 <malloc+0xcc>
    14f6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    14fa:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    14fe:	30 93 89 01 	sts	0x0189, r19	; 0x800189 <__brkval+0x1>
    1502:	20 93 88 01 	sts	0x0188, r18	; 0x800188 <__brkval>
    1506:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    150a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    150e:	21 15       	cp	r18, r1
    1510:	31 05       	cpc	r19, r1
    1512:	41 f4       	brne	.+16     	; 0x1524 <malloc+0xea>
    1514:	2d b7       	in	r18, 0x3d	; 61
    1516:	3e b7       	in	r19, 0x3e	; 62
    1518:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    151c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1520:	24 1b       	sub	r18, r20
    1522:	35 0b       	sbc	r19, r21
    1524:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <__brkval>
    1528:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <__brkval+0x1>
    152c:	e2 17       	cp	r30, r18
    152e:	f3 07       	cpc	r31, r19
    1530:	a0 f4       	brcc	.+40     	; 0x155a <malloc+0x120>
    1532:	2e 1b       	sub	r18, r30
    1534:	3f 0b       	sbc	r19, r31
    1536:	28 17       	cp	r18, r24
    1538:	39 07       	cpc	r19, r25
    153a:	78 f0       	brcs	.+30     	; 0x155a <malloc+0x120>
    153c:	ac 01       	movw	r20, r24
    153e:	4e 5f       	subi	r20, 0xFE	; 254
    1540:	5f 4f       	sbci	r21, 0xFF	; 255
    1542:	24 17       	cp	r18, r20
    1544:	35 07       	cpc	r19, r21
    1546:	48 f0       	brcs	.+18     	; 0x155a <malloc+0x120>
    1548:	4e 0f       	add	r20, r30
    154a:	5f 1f       	adc	r21, r31
    154c:	50 93 89 01 	sts	0x0189, r21	; 0x800189 <__brkval+0x1>
    1550:	40 93 88 01 	sts	0x0188, r20	; 0x800188 <__brkval>
    1554:	81 93       	st	Z+, r24
    1556:	91 93       	st	Z+, r25
    1558:	02 c0       	rjmp	.+4      	; 0x155e <malloc+0x124>
    155a:	e0 e0       	ldi	r30, 0x00	; 0
    155c:	f0 e0       	ldi	r31, 0x00	; 0
    155e:	cf 01       	movw	r24, r30
    1560:	df 91       	pop	r29
    1562:	cf 91       	pop	r28
    1564:	1f 91       	pop	r17
    1566:	0f 91       	pop	r16
    1568:	08 95       	ret

0000156a <free>:
    156a:	cf 93       	push	r28
    156c:	df 93       	push	r29
    156e:	00 97       	sbiw	r24, 0x00	; 0
    1570:	09 f4       	brne	.+2      	; 0x1574 <free+0xa>
    1572:	81 c0       	rjmp	.+258    	; 0x1676 <free+0x10c>
    1574:	fc 01       	movw	r30, r24
    1576:	32 97       	sbiw	r30, 0x02	; 2
    1578:	13 82       	std	Z+3, r1	; 0x03
    157a:	12 82       	std	Z+2, r1	; 0x02
    157c:	a0 91 8a 01 	lds	r26, 0x018A	; 0x80018a <__flp>
    1580:	b0 91 8b 01 	lds	r27, 0x018B	; 0x80018b <__flp+0x1>
    1584:	10 97       	sbiw	r26, 0x00	; 0
    1586:	81 f4       	brne	.+32     	; 0x15a8 <free+0x3e>
    1588:	20 81       	ld	r18, Z
    158a:	31 81       	ldd	r19, Z+1	; 0x01
    158c:	82 0f       	add	r24, r18
    158e:	93 1f       	adc	r25, r19
    1590:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <__brkval>
    1594:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <__brkval+0x1>
    1598:	28 17       	cp	r18, r24
    159a:	39 07       	cpc	r19, r25
    159c:	51 f5       	brne	.+84     	; 0x15f2 <free+0x88>
    159e:	f0 93 89 01 	sts	0x0189, r31	; 0x800189 <__brkval+0x1>
    15a2:	e0 93 88 01 	sts	0x0188, r30	; 0x800188 <__brkval>
    15a6:	67 c0       	rjmp	.+206    	; 0x1676 <free+0x10c>
    15a8:	ed 01       	movw	r28, r26
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	30 e0       	ldi	r19, 0x00	; 0
    15ae:	ce 17       	cp	r28, r30
    15b0:	df 07       	cpc	r29, r31
    15b2:	40 f4       	brcc	.+16     	; 0x15c4 <free+0x5a>
    15b4:	4a 81       	ldd	r20, Y+2	; 0x02
    15b6:	5b 81       	ldd	r21, Y+3	; 0x03
    15b8:	9e 01       	movw	r18, r28
    15ba:	41 15       	cp	r20, r1
    15bc:	51 05       	cpc	r21, r1
    15be:	f1 f0       	breq	.+60     	; 0x15fc <free+0x92>
    15c0:	ea 01       	movw	r28, r20
    15c2:	f5 cf       	rjmp	.-22     	; 0x15ae <free+0x44>
    15c4:	d3 83       	std	Z+3, r29	; 0x03
    15c6:	c2 83       	std	Z+2, r28	; 0x02
    15c8:	40 81       	ld	r20, Z
    15ca:	51 81       	ldd	r21, Z+1	; 0x01
    15cc:	84 0f       	add	r24, r20
    15ce:	95 1f       	adc	r25, r21
    15d0:	c8 17       	cp	r28, r24
    15d2:	d9 07       	cpc	r29, r25
    15d4:	59 f4       	brne	.+22     	; 0x15ec <free+0x82>
    15d6:	88 81       	ld	r24, Y
    15d8:	99 81       	ldd	r25, Y+1	; 0x01
    15da:	84 0f       	add	r24, r20
    15dc:	95 1f       	adc	r25, r21
    15de:	02 96       	adiw	r24, 0x02	; 2
    15e0:	91 83       	std	Z+1, r25	; 0x01
    15e2:	80 83       	st	Z, r24
    15e4:	8a 81       	ldd	r24, Y+2	; 0x02
    15e6:	9b 81       	ldd	r25, Y+3	; 0x03
    15e8:	93 83       	std	Z+3, r25	; 0x03
    15ea:	82 83       	std	Z+2, r24	; 0x02
    15ec:	21 15       	cp	r18, r1
    15ee:	31 05       	cpc	r19, r1
    15f0:	29 f4       	brne	.+10     	; 0x15fc <free+0x92>
    15f2:	f0 93 8b 01 	sts	0x018B, r31	; 0x80018b <__flp+0x1>
    15f6:	e0 93 8a 01 	sts	0x018A, r30	; 0x80018a <__flp>
    15fa:	3d c0       	rjmp	.+122    	; 0x1676 <free+0x10c>
    15fc:	e9 01       	movw	r28, r18
    15fe:	fb 83       	std	Y+3, r31	; 0x03
    1600:	ea 83       	std	Y+2, r30	; 0x02
    1602:	49 91       	ld	r20, Y+
    1604:	59 91       	ld	r21, Y+
    1606:	c4 0f       	add	r28, r20
    1608:	d5 1f       	adc	r29, r21
    160a:	ec 17       	cp	r30, r28
    160c:	fd 07       	cpc	r31, r29
    160e:	61 f4       	brne	.+24     	; 0x1628 <free+0xbe>
    1610:	80 81       	ld	r24, Z
    1612:	91 81       	ldd	r25, Z+1	; 0x01
    1614:	84 0f       	add	r24, r20
    1616:	95 1f       	adc	r25, r21
    1618:	02 96       	adiw	r24, 0x02	; 2
    161a:	e9 01       	movw	r28, r18
    161c:	99 83       	std	Y+1, r25	; 0x01
    161e:	88 83       	st	Y, r24
    1620:	82 81       	ldd	r24, Z+2	; 0x02
    1622:	93 81       	ldd	r25, Z+3	; 0x03
    1624:	9b 83       	std	Y+3, r25	; 0x03
    1626:	8a 83       	std	Y+2, r24	; 0x02
    1628:	e0 e0       	ldi	r30, 0x00	; 0
    162a:	f0 e0       	ldi	r31, 0x00	; 0
    162c:	12 96       	adiw	r26, 0x02	; 2
    162e:	8d 91       	ld	r24, X+
    1630:	9c 91       	ld	r25, X
    1632:	13 97       	sbiw	r26, 0x03	; 3
    1634:	00 97       	sbiw	r24, 0x00	; 0
    1636:	19 f0       	breq	.+6      	; 0x163e <free+0xd4>
    1638:	fd 01       	movw	r30, r26
    163a:	dc 01       	movw	r26, r24
    163c:	f7 cf       	rjmp	.-18     	; 0x162c <free+0xc2>
    163e:	8d 91       	ld	r24, X+
    1640:	9c 91       	ld	r25, X
    1642:	11 97       	sbiw	r26, 0x01	; 1
    1644:	9d 01       	movw	r18, r26
    1646:	2e 5f       	subi	r18, 0xFE	; 254
    1648:	3f 4f       	sbci	r19, 0xFF	; 255
    164a:	82 0f       	add	r24, r18
    164c:	93 1f       	adc	r25, r19
    164e:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <__brkval>
    1652:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <__brkval+0x1>
    1656:	28 17       	cp	r18, r24
    1658:	39 07       	cpc	r19, r25
    165a:	69 f4       	brne	.+26     	; 0x1676 <free+0x10c>
    165c:	30 97       	sbiw	r30, 0x00	; 0
    165e:	29 f4       	brne	.+10     	; 0x166a <free+0x100>
    1660:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <__flp+0x1>
    1664:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <__flp>
    1668:	02 c0       	rjmp	.+4      	; 0x166e <free+0x104>
    166a:	13 82       	std	Z+3, r1	; 0x03
    166c:	12 82       	std	Z+2, r1	; 0x02
    166e:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <__brkval+0x1>
    1672:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <__brkval>
    1676:	df 91       	pop	r29
    1678:	cf 91       	pop	r28
    167a:	08 95       	ret

0000167c <printf>:
    167c:	a0 e0       	ldi	r26, 0x00	; 0
    167e:	b0 e0       	ldi	r27, 0x00	; 0
    1680:	e4 e4       	ldi	r30, 0x44	; 68
    1682:	fb e0       	ldi	r31, 0x0B	; 11
    1684:	0c 94 f5 0d 	jmp	0x1bea	; 0x1bea <__prologue_saves__+0x20>
    1688:	ae 01       	movw	r20, r28
    168a:	4b 5f       	subi	r20, 0xFB	; 251
    168c:	5f 4f       	sbci	r21, 0xFF	; 255
    168e:	fa 01       	movw	r30, r20
    1690:	61 91       	ld	r22, Z+
    1692:	71 91       	ld	r23, Z+
    1694:	af 01       	movw	r20, r30
    1696:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <__iob+0x2>
    169a:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <__iob+0x3>
    169e:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <vfprintf>
    16a2:	e2 e0       	ldi	r30, 0x02	; 2
    16a4:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__epilogue_restores__+0x20>

000016a8 <vfprintf>:
    16a8:	ab e0       	ldi	r26, 0x0B	; 11
    16aa:	b0 e0       	ldi	r27, 0x00	; 0
    16ac:	ea e5       	ldi	r30, 0x5A	; 90
    16ae:	fb e0       	ldi	r31, 0x0B	; 11
    16b0:	0c 94 e5 0d 	jmp	0x1bca	; 0x1bca <__prologue_saves__>
    16b4:	6c 01       	movw	r12, r24
    16b6:	7b 01       	movw	r14, r22
    16b8:	8a 01       	movw	r16, r20
    16ba:	fc 01       	movw	r30, r24
    16bc:	17 82       	std	Z+7, r1	; 0x07
    16be:	16 82       	std	Z+6, r1	; 0x06
    16c0:	83 81       	ldd	r24, Z+3	; 0x03
    16c2:	81 ff       	sbrs	r24, 1
    16c4:	cc c1       	rjmp	.+920    	; 0x1a5e <vfprintf+0x3b6>
    16c6:	ce 01       	movw	r24, r28
    16c8:	01 96       	adiw	r24, 0x01	; 1
    16ca:	3c 01       	movw	r6, r24
    16cc:	f6 01       	movw	r30, r12
    16ce:	93 81       	ldd	r25, Z+3	; 0x03
    16d0:	f7 01       	movw	r30, r14
    16d2:	93 fd       	sbrc	r25, 3
    16d4:	85 91       	lpm	r24, Z+
    16d6:	93 ff       	sbrs	r25, 3
    16d8:	81 91       	ld	r24, Z+
    16da:	7f 01       	movw	r14, r30
    16dc:	88 23       	and	r24, r24
    16de:	09 f4       	brne	.+2      	; 0x16e2 <vfprintf+0x3a>
    16e0:	ba c1       	rjmp	.+884    	; 0x1a56 <vfprintf+0x3ae>
    16e2:	85 32       	cpi	r24, 0x25	; 37
    16e4:	39 f4       	brne	.+14     	; 0x16f4 <vfprintf+0x4c>
    16e6:	93 fd       	sbrc	r25, 3
    16e8:	85 91       	lpm	r24, Z+
    16ea:	93 ff       	sbrs	r25, 3
    16ec:	81 91       	ld	r24, Z+
    16ee:	7f 01       	movw	r14, r30
    16f0:	85 32       	cpi	r24, 0x25	; 37
    16f2:	29 f4       	brne	.+10     	; 0x16fe <vfprintf+0x56>
    16f4:	b6 01       	movw	r22, r12
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    16fc:	e7 cf       	rjmp	.-50     	; 0x16cc <vfprintf+0x24>
    16fe:	91 2c       	mov	r9, r1
    1700:	21 2c       	mov	r2, r1
    1702:	31 2c       	mov	r3, r1
    1704:	ff e1       	ldi	r31, 0x1F	; 31
    1706:	f3 15       	cp	r31, r3
    1708:	d8 f0       	brcs	.+54     	; 0x1740 <vfprintf+0x98>
    170a:	8b 32       	cpi	r24, 0x2B	; 43
    170c:	79 f0       	breq	.+30     	; 0x172c <vfprintf+0x84>
    170e:	38 f4       	brcc	.+14     	; 0x171e <vfprintf+0x76>
    1710:	80 32       	cpi	r24, 0x20	; 32
    1712:	79 f0       	breq	.+30     	; 0x1732 <vfprintf+0x8a>
    1714:	83 32       	cpi	r24, 0x23	; 35
    1716:	a1 f4       	brne	.+40     	; 0x1740 <vfprintf+0x98>
    1718:	23 2d       	mov	r18, r3
    171a:	20 61       	ori	r18, 0x10	; 16
    171c:	1d c0       	rjmp	.+58     	; 0x1758 <vfprintf+0xb0>
    171e:	8d 32       	cpi	r24, 0x2D	; 45
    1720:	61 f0       	breq	.+24     	; 0x173a <vfprintf+0x92>
    1722:	80 33       	cpi	r24, 0x30	; 48
    1724:	69 f4       	brne	.+26     	; 0x1740 <vfprintf+0x98>
    1726:	23 2d       	mov	r18, r3
    1728:	21 60       	ori	r18, 0x01	; 1
    172a:	16 c0       	rjmp	.+44     	; 0x1758 <vfprintf+0xb0>
    172c:	83 2d       	mov	r24, r3
    172e:	82 60       	ori	r24, 0x02	; 2
    1730:	38 2e       	mov	r3, r24
    1732:	e3 2d       	mov	r30, r3
    1734:	e4 60       	ori	r30, 0x04	; 4
    1736:	3e 2e       	mov	r3, r30
    1738:	2a c0       	rjmp	.+84     	; 0x178e <vfprintf+0xe6>
    173a:	f3 2d       	mov	r31, r3
    173c:	f8 60       	ori	r31, 0x08	; 8
    173e:	1d c0       	rjmp	.+58     	; 0x177a <vfprintf+0xd2>
    1740:	37 fc       	sbrc	r3, 7
    1742:	2d c0       	rjmp	.+90     	; 0x179e <vfprintf+0xf6>
    1744:	20 ed       	ldi	r18, 0xD0	; 208
    1746:	28 0f       	add	r18, r24
    1748:	2a 30       	cpi	r18, 0x0A	; 10
    174a:	40 f0       	brcs	.+16     	; 0x175c <vfprintf+0xb4>
    174c:	8e 32       	cpi	r24, 0x2E	; 46
    174e:	b9 f4       	brne	.+46     	; 0x177e <vfprintf+0xd6>
    1750:	36 fc       	sbrc	r3, 6
    1752:	81 c1       	rjmp	.+770    	; 0x1a56 <vfprintf+0x3ae>
    1754:	23 2d       	mov	r18, r3
    1756:	20 64       	ori	r18, 0x40	; 64
    1758:	32 2e       	mov	r3, r18
    175a:	19 c0       	rjmp	.+50     	; 0x178e <vfprintf+0xe6>
    175c:	36 fe       	sbrs	r3, 6
    175e:	06 c0       	rjmp	.+12     	; 0x176c <vfprintf+0xc4>
    1760:	8a e0       	ldi	r24, 0x0A	; 10
    1762:	98 9e       	mul	r9, r24
    1764:	20 0d       	add	r18, r0
    1766:	11 24       	eor	r1, r1
    1768:	92 2e       	mov	r9, r18
    176a:	11 c0       	rjmp	.+34     	; 0x178e <vfprintf+0xe6>
    176c:	ea e0       	ldi	r30, 0x0A	; 10
    176e:	2e 9e       	mul	r2, r30
    1770:	20 0d       	add	r18, r0
    1772:	11 24       	eor	r1, r1
    1774:	22 2e       	mov	r2, r18
    1776:	f3 2d       	mov	r31, r3
    1778:	f0 62       	ori	r31, 0x20	; 32
    177a:	3f 2e       	mov	r3, r31
    177c:	08 c0       	rjmp	.+16     	; 0x178e <vfprintf+0xe6>
    177e:	8c 36       	cpi	r24, 0x6C	; 108
    1780:	21 f4       	brne	.+8      	; 0x178a <vfprintf+0xe2>
    1782:	83 2d       	mov	r24, r3
    1784:	80 68       	ori	r24, 0x80	; 128
    1786:	38 2e       	mov	r3, r24
    1788:	02 c0       	rjmp	.+4      	; 0x178e <vfprintf+0xe6>
    178a:	88 36       	cpi	r24, 0x68	; 104
    178c:	41 f4       	brne	.+16     	; 0x179e <vfprintf+0xf6>
    178e:	f7 01       	movw	r30, r14
    1790:	93 fd       	sbrc	r25, 3
    1792:	85 91       	lpm	r24, Z+
    1794:	93 ff       	sbrs	r25, 3
    1796:	81 91       	ld	r24, Z+
    1798:	7f 01       	movw	r14, r30
    179a:	81 11       	cpse	r24, r1
    179c:	b3 cf       	rjmp	.-154    	; 0x1704 <vfprintf+0x5c>
    179e:	98 2f       	mov	r25, r24
    17a0:	9f 7d       	andi	r25, 0xDF	; 223
    17a2:	95 54       	subi	r25, 0x45	; 69
    17a4:	93 30       	cpi	r25, 0x03	; 3
    17a6:	28 f4       	brcc	.+10     	; 0x17b2 <vfprintf+0x10a>
    17a8:	0c 5f       	subi	r16, 0xFC	; 252
    17aa:	1f 4f       	sbci	r17, 0xFF	; 255
    17ac:	9f e3       	ldi	r25, 0x3F	; 63
    17ae:	99 83       	std	Y+1, r25	; 0x01
    17b0:	0d c0       	rjmp	.+26     	; 0x17cc <vfprintf+0x124>
    17b2:	83 36       	cpi	r24, 0x63	; 99
    17b4:	31 f0       	breq	.+12     	; 0x17c2 <vfprintf+0x11a>
    17b6:	83 37       	cpi	r24, 0x73	; 115
    17b8:	71 f0       	breq	.+28     	; 0x17d6 <vfprintf+0x12e>
    17ba:	83 35       	cpi	r24, 0x53	; 83
    17bc:	09 f0       	breq	.+2      	; 0x17c0 <vfprintf+0x118>
    17be:	59 c0       	rjmp	.+178    	; 0x1872 <vfprintf+0x1ca>
    17c0:	21 c0       	rjmp	.+66     	; 0x1804 <vfprintf+0x15c>
    17c2:	f8 01       	movw	r30, r16
    17c4:	80 81       	ld	r24, Z
    17c6:	89 83       	std	Y+1, r24	; 0x01
    17c8:	0e 5f       	subi	r16, 0xFE	; 254
    17ca:	1f 4f       	sbci	r17, 0xFF	; 255
    17cc:	88 24       	eor	r8, r8
    17ce:	83 94       	inc	r8
    17d0:	91 2c       	mov	r9, r1
    17d2:	53 01       	movw	r10, r6
    17d4:	13 c0       	rjmp	.+38     	; 0x17fc <vfprintf+0x154>
    17d6:	28 01       	movw	r4, r16
    17d8:	f2 e0       	ldi	r31, 0x02	; 2
    17da:	4f 0e       	add	r4, r31
    17dc:	51 1c       	adc	r5, r1
    17de:	f8 01       	movw	r30, r16
    17e0:	a0 80       	ld	r10, Z
    17e2:	b1 80       	ldd	r11, Z+1	; 0x01
    17e4:	36 fe       	sbrs	r3, 6
    17e6:	03 c0       	rjmp	.+6      	; 0x17ee <vfprintf+0x146>
    17e8:	69 2d       	mov	r22, r9
    17ea:	70 e0       	ldi	r23, 0x00	; 0
    17ec:	02 c0       	rjmp	.+4      	; 0x17f2 <vfprintf+0x14a>
    17ee:	6f ef       	ldi	r22, 0xFF	; 255
    17f0:	7f ef       	ldi	r23, 0xFF	; 255
    17f2:	c5 01       	movw	r24, r10
    17f4:	0e 94 40 0d 	call	0x1a80	; 0x1a80 <strnlen>
    17f8:	4c 01       	movw	r8, r24
    17fa:	82 01       	movw	r16, r4
    17fc:	f3 2d       	mov	r31, r3
    17fe:	ff 77       	andi	r31, 0x7F	; 127
    1800:	3f 2e       	mov	r3, r31
    1802:	16 c0       	rjmp	.+44     	; 0x1830 <vfprintf+0x188>
    1804:	28 01       	movw	r4, r16
    1806:	22 e0       	ldi	r18, 0x02	; 2
    1808:	42 0e       	add	r4, r18
    180a:	51 1c       	adc	r5, r1
    180c:	f8 01       	movw	r30, r16
    180e:	a0 80       	ld	r10, Z
    1810:	b1 80       	ldd	r11, Z+1	; 0x01
    1812:	36 fe       	sbrs	r3, 6
    1814:	03 c0       	rjmp	.+6      	; 0x181c <vfprintf+0x174>
    1816:	69 2d       	mov	r22, r9
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	02 c0       	rjmp	.+4      	; 0x1820 <vfprintf+0x178>
    181c:	6f ef       	ldi	r22, 0xFF	; 255
    181e:	7f ef       	ldi	r23, 0xFF	; 255
    1820:	c5 01       	movw	r24, r10
    1822:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <strnlen_P>
    1826:	4c 01       	movw	r8, r24
    1828:	f3 2d       	mov	r31, r3
    182a:	f0 68       	ori	r31, 0x80	; 128
    182c:	3f 2e       	mov	r3, r31
    182e:	82 01       	movw	r16, r4
    1830:	33 fc       	sbrc	r3, 3
    1832:	1b c0       	rjmp	.+54     	; 0x186a <vfprintf+0x1c2>
    1834:	82 2d       	mov	r24, r2
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	88 16       	cp	r8, r24
    183a:	99 06       	cpc	r9, r25
    183c:	b0 f4       	brcc	.+44     	; 0x186a <vfprintf+0x1c2>
    183e:	b6 01       	movw	r22, r12
    1840:	80 e2       	ldi	r24, 0x20	; 32
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    1848:	2a 94       	dec	r2
    184a:	f4 cf       	rjmp	.-24     	; 0x1834 <vfprintf+0x18c>
    184c:	f5 01       	movw	r30, r10
    184e:	37 fc       	sbrc	r3, 7
    1850:	85 91       	lpm	r24, Z+
    1852:	37 fe       	sbrs	r3, 7
    1854:	81 91       	ld	r24, Z+
    1856:	5f 01       	movw	r10, r30
    1858:	b6 01       	movw	r22, r12
    185a:	90 e0       	ldi	r25, 0x00	; 0
    185c:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    1860:	21 10       	cpse	r2, r1
    1862:	2a 94       	dec	r2
    1864:	21 e0       	ldi	r18, 0x01	; 1
    1866:	82 1a       	sub	r8, r18
    1868:	91 08       	sbc	r9, r1
    186a:	81 14       	cp	r8, r1
    186c:	91 04       	cpc	r9, r1
    186e:	71 f7       	brne	.-36     	; 0x184c <vfprintf+0x1a4>
    1870:	e8 c0       	rjmp	.+464    	; 0x1a42 <vfprintf+0x39a>
    1872:	84 36       	cpi	r24, 0x64	; 100
    1874:	11 f0       	breq	.+4      	; 0x187a <vfprintf+0x1d2>
    1876:	89 36       	cpi	r24, 0x69	; 105
    1878:	41 f5       	brne	.+80     	; 0x18ca <vfprintf+0x222>
    187a:	f8 01       	movw	r30, r16
    187c:	37 fe       	sbrs	r3, 7
    187e:	07 c0       	rjmp	.+14     	; 0x188e <vfprintf+0x1e6>
    1880:	60 81       	ld	r22, Z
    1882:	71 81       	ldd	r23, Z+1	; 0x01
    1884:	82 81       	ldd	r24, Z+2	; 0x02
    1886:	93 81       	ldd	r25, Z+3	; 0x03
    1888:	0c 5f       	subi	r16, 0xFC	; 252
    188a:	1f 4f       	sbci	r17, 0xFF	; 255
    188c:	08 c0       	rjmp	.+16     	; 0x189e <vfprintf+0x1f6>
    188e:	60 81       	ld	r22, Z
    1890:	71 81       	ldd	r23, Z+1	; 0x01
    1892:	07 2e       	mov	r0, r23
    1894:	00 0c       	add	r0, r0
    1896:	88 0b       	sbc	r24, r24
    1898:	99 0b       	sbc	r25, r25
    189a:	0e 5f       	subi	r16, 0xFE	; 254
    189c:	1f 4f       	sbci	r17, 0xFF	; 255
    189e:	f3 2d       	mov	r31, r3
    18a0:	ff 76       	andi	r31, 0x6F	; 111
    18a2:	3f 2e       	mov	r3, r31
    18a4:	97 ff       	sbrs	r25, 7
    18a6:	09 c0       	rjmp	.+18     	; 0x18ba <vfprintf+0x212>
    18a8:	90 95       	com	r25
    18aa:	80 95       	com	r24
    18ac:	70 95       	com	r23
    18ae:	61 95       	neg	r22
    18b0:	7f 4f       	sbci	r23, 0xFF	; 255
    18b2:	8f 4f       	sbci	r24, 0xFF	; 255
    18b4:	9f 4f       	sbci	r25, 0xFF	; 255
    18b6:	f0 68       	ori	r31, 0x80	; 128
    18b8:	3f 2e       	mov	r3, r31
    18ba:	2a e0       	ldi	r18, 0x0A	; 10
    18bc:	30 e0       	ldi	r19, 0x00	; 0
    18be:	a3 01       	movw	r20, r6
    18c0:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <__ultoa_invert>
    18c4:	88 2e       	mov	r8, r24
    18c6:	86 18       	sub	r8, r6
    18c8:	45 c0       	rjmp	.+138    	; 0x1954 <vfprintf+0x2ac>
    18ca:	85 37       	cpi	r24, 0x75	; 117
    18cc:	31 f4       	brne	.+12     	; 0x18da <vfprintf+0x232>
    18ce:	23 2d       	mov	r18, r3
    18d0:	2f 7e       	andi	r18, 0xEF	; 239
    18d2:	b2 2e       	mov	r11, r18
    18d4:	2a e0       	ldi	r18, 0x0A	; 10
    18d6:	30 e0       	ldi	r19, 0x00	; 0
    18d8:	25 c0       	rjmp	.+74     	; 0x1924 <vfprintf+0x27c>
    18da:	93 2d       	mov	r25, r3
    18dc:	99 7f       	andi	r25, 0xF9	; 249
    18de:	b9 2e       	mov	r11, r25
    18e0:	8f 36       	cpi	r24, 0x6F	; 111
    18e2:	c1 f0       	breq	.+48     	; 0x1914 <vfprintf+0x26c>
    18e4:	18 f4       	brcc	.+6      	; 0x18ec <vfprintf+0x244>
    18e6:	88 35       	cpi	r24, 0x58	; 88
    18e8:	79 f0       	breq	.+30     	; 0x1908 <vfprintf+0x260>
    18ea:	b5 c0       	rjmp	.+362    	; 0x1a56 <vfprintf+0x3ae>
    18ec:	80 37       	cpi	r24, 0x70	; 112
    18ee:	19 f0       	breq	.+6      	; 0x18f6 <vfprintf+0x24e>
    18f0:	88 37       	cpi	r24, 0x78	; 120
    18f2:	21 f0       	breq	.+8      	; 0x18fc <vfprintf+0x254>
    18f4:	b0 c0       	rjmp	.+352    	; 0x1a56 <vfprintf+0x3ae>
    18f6:	e9 2f       	mov	r30, r25
    18f8:	e0 61       	ori	r30, 0x10	; 16
    18fa:	be 2e       	mov	r11, r30
    18fc:	b4 fe       	sbrs	r11, 4
    18fe:	0d c0       	rjmp	.+26     	; 0x191a <vfprintf+0x272>
    1900:	fb 2d       	mov	r31, r11
    1902:	f4 60       	ori	r31, 0x04	; 4
    1904:	bf 2e       	mov	r11, r31
    1906:	09 c0       	rjmp	.+18     	; 0x191a <vfprintf+0x272>
    1908:	34 fe       	sbrs	r3, 4
    190a:	0a c0       	rjmp	.+20     	; 0x1920 <vfprintf+0x278>
    190c:	29 2f       	mov	r18, r25
    190e:	26 60       	ori	r18, 0x06	; 6
    1910:	b2 2e       	mov	r11, r18
    1912:	06 c0       	rjmp	.+12     	; 0x1920 <vfprintf+0x278>
    1914:	28 e0       	ldi	r18, 0x08	; 8
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	05 c0       	rjmp	.+10     	; 0x1924 <vfprintf+0x27c>
    191a:	20 e1       	ldi	r18, 0x10	; 16
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	02 c0       	rjmp	.+4      	; 0x1924 <vfprintf+0x27c>
    1920:	20 e1       	ldi	r18, 0x10	; 16
    1922:	32 e0       	ldi	r19, 0x02	; 2
    1924:	f8 01       	movw	r30, r16
    1926:	b7 fe       	sbrs	r11, 7
    1928:	07 c0       	rjmp	.+14     	; 0x1938 <vfprintf+0x290>
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	82 81       	ldd	r24, Z+2	; 0x02
    1930:	93 81       	ldd	r25, Z+3	; 0x03
    1932:	0c 5f       	subi	r16, 0xFC	; 252
    1934:	1f 4f       	sbci	r17, 0xFF	; 255
    1936:	06 c0       	rjmp	.+12     	; 0x1944 <vfprintf+0x29c>
    1938:	60 81       	ld	r22, Z
    193a:	71 81       	ldd	r23, Z+1	; 0x01
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	0e 5f       	subi	r16, 0xFE	; 254
    1942:	1f 4f       	sbci	r17, 0xFF	; 255
    1944:	a3 01       	movw	r20, r6
    1946:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <__ultoa_invert>
    194a:	88 2e       	mov	r8, r24
    194c:	86 18       	sub	r8, r6
    194e:	fb 2d       	mov	r31, r11
    1950:	ff 77       	andi	r31, 0x7F	; 127
    1952:	3f 2e       	mov	r3, r31
    1954:	36 fe       	sbrs	r3, 6
    1956:	0d c0       	rjmp	.+26     	; 0x1972 <vfprintf+0x2ca>
    1958:	23 2d       	mov	r18, r3
    195a:	2e 7f       	andi	r18, 0xFE	; 254
    195c:	a2 2e       	mov	r10, r18
    195e:	89 14       	cp	r8, r9
    1960:	58 f4       	brcc	.+22     	; 0x1978 <vfprintf+0x2d0>
    1962:	34 fe       	sbrs	r3, 4
    1964:	0b c0       	rjmp	.+22     	; 0x197c <vfprintf+0x2d4>
    1966:	32 fc       	sbrc	r3, 2
    1968:	09 c0       	rjmp	.+18     	; 0x197c <vfprintf+0x2d4>
    196a:	83 2d       	mov	r24, r3
    196c:	8e 7e       	andi	r24, 0xEE	; 238
    196e:	a8 2e       	mov	r10, r24
    1970:	05 c0       	rjmp	.+10     	; 0x197c <vfprintf+0x2d4>
    1972:	b8 2c       	mov	r11, r8
    1974:	a3 2c       	mov	r10, r3
    1976:	03 c0       	rjmp	.+6      	; 0x197e <vfprintf+0x2d6>
    1978:	b8 2c       	mov	r11, r8
    197a:	01 c0       	rjmp	.+2      	; 0x197e <vfprintf+0x2d6>
    197c:	b9 2c       	mov	r11, r9
    197e:	a4 fe       	sbrs	r10, 4
    1980:	0f c0       	rjmp	.+30     	; 0x19a0 <vfprintf+0x2f8>
    1982:	fe 01       	movw	r30, r28
    1984:	e8 0d       	add	r30, r8
    1986:	f1 1d       	adc	r31, r1
    1988:	80 81       	ld	r24, Z
    198a:	80 33       	cpi	r24, 0x30	; 48
    198c:	21 f4       	brne	.+8      	; 0x1996 <vfprintf+0x2ee>
    198e:	9a 2d       	mov	r25, r10
    1990:	99 7e       	andi	r25, 0xE9	; 233
    1992:	a9 2e       	mov	r10, r25
    1994:	09 c0       	rjmp	.+18     	; 0x19a8 <vfprintf+0x300>
    1996:	a2 fe       	sbrs	r10, 2
    1998:	06 c0       	rjmp	.+12     	; 0x19a6 <vfprintf+0x2fe>
    199a:	b3 94       	inc	r11
    199c:	b3 94       	inc	r11
    199e:	04 c0       	rjmp	.+8      	; 0x19a8 <vfprintf+0x300>
    19a0:	8a 2d       	mov	r24, r10
    19a2:	86 78       	andi	r24, 0x86	; 134
    19a4:	09 f0       	breq	.+2      	; 0x19a8 <vfprintf+0x300>
    19a6:	b3 94       	inc	r11
    19a8:	a3 fc       	sbrc	r10, 3
    19aa:	11 c0       	rjmp	.+34     	; 0x19ce <vfprintf+0x326>
    19ac:	a0 fe       	sbrs	r10, 0
    19ae:	06 c0       	rjmp	.+12     	; 0x19bc <vfprintf+0x314>
    19b0:	b2 14       	cp	r11, r2
    19b2:	88 f4       	brcc	.+34     	; 0x19d6 <vfprintf+0x32e>
    19b4:	28 0c       	add	r2, r8
    19b6:	92 2c       	mov	r9, r2
    19b8:	9b 18       	sub	r9, r11
    19ba:	0e c0       	rjmp	.+28     	; 0x19d8 <vfprintf+0x330>
    19bc:	b2 14       	cp	r11, r2
    19be:	60 f4       	brcc	.+24     	; 0x19d8 <vfprintf+0x330>
    19c0:	b6 01       	movw	r22, r12
    19c2:	80 e2       	ldi	r24, 0x20	; 32
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    19ca:	b3 94       	inc	r11
    19cc:	f7 cf       	rjmp	.-18     	; 0x19bc <vfprintf+0x314>
    19ce:	b2 14       	cp	r11, r2
    19d0:	18 f4       	brcc	.+6      	; 0x19d8 <vfprintf+0x330>
    19d2:	2b 18       	sub	r2, r11
    19d4:	02 c0       	rjmp	.+4      	; 0x19da <vfprintf+0x332>
    19d6:	98 2c       	mov	r9, r8
    19d8:	21 2c       	mov	r2, r1
    19da:	a4 fe       	sbrs	r10, 4
    19dc:	10 c0       	rjmp	.+32     	; 0x19fe <vfprintf+0x356>
    19de:	b6 01       	movw	r22, r12
    19e0:	80 e3       	ldi	r24, 0x30	; 48
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    19e8:	a2 fe       	sbrs	r10, 2
    19ea:	17 c0       	rjmp	.+46     	; 0x1a1a <vfprintf+0x372>
    19ec:	a1 fc       	sbrc	r10, 1
    19ee:	03 c0       	rjmp	.+6      	; 0x19f6 <vfprintf+0x34e>
    19f0:	88 e7       	ldi	r24, 0x78	; 120
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	02 c0       	rjmp	.+4      	; 0x19fa <vfprintf+0x352>
    19f6:	88 e5       	ldi	r24, 0x58	; 88
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	b6 01       	movw	r22, r12
    19fc:	0c c0       	rjmp	.+24     	; 0x1a16 <vfprintf+0x36e>
    19fe:	8a 2d       	mov	r24, r10
    1a00:	86 78       	andi	r24, 0x86	; 134
    1a02:	59 f0       	breq	.+22     	; 0x1a1a <vfprintf+0x372>
    1a04:	a1 fe       	sbrs	r10, 1
    1a06:	02 c0       	rjmp	.+4      	; 0x1a0c <vfprintf+0x364>
    1a08:	8b e2       	ldi	r24, 0x2B	; 43
    1a0a:	01 c0       	rjmp	.+2      	; 0x1a0e <vfprintf+0x366>
    1a0c:	80 e2       	ldi	r24, 0x20	; 32
    1a0e:	a7 fc       	sbrc	r10, 7
    1a10:	8d e2       	ldi	r24, 0x2D	; 45
    1a12:	b6 01       	movw	r22, r12
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    1a1a:	89 14       	cp	r8, r9
    1a1c:	38 f4       	brcc	.+14     	; 0x1a2c <vfprintf+0x384>
    1a1e:	b6 01       	movw	r22, r12
    1a20:	80 e3       	ldi	r24, 0x30	; 48
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    1a28:	9a 94       	dec	r9
    1a2a:	f7 cf       	rjmp	.-18     	; 0x1a1a <vfprintf+0x372>
    1a2c:	8a 94       	dec	r8
    1a2e:	f3 01       	movw	r30, r6
    1a30:	e8 0d       	add	r30, r8
    1a32:	f1 1d       	adc	r31, r1
    1a34:	80 81       	ld	r24, Z
    1a36:	b6 01       	movw	r22, r12
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    1a3e:	81 10       	cpse	r8, r1
    1a40:	f5 cf       	rjmp	.-22     	; 0x1a2c <vfprintf+0x384>
    1a42:	22 20       	and	r2, r2
    1a44:	09 f4       	brne	.+2      	; 0x1a48 <vfprintf+0x3a0>
    1a46:	42 ce       	rjmp	.-892    	; 0x16cc <vfprintf+0x24>
    1a48:	b6 01       	movw	r22, r12
    1a4a:	80 e2       	ldi	r24, 0x20	; 32
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <fputc>
    1a52:	2a 94       	dec	r2
    1a54:	f6 cf       	rjmp	.-20     	; 0x1a42 <vfprintf+0x39a>
    1a56:	f6 01       	movw	r30, r12
    1a58:	86 81       	ldd	r24, Z+6	; 0x06
    1a5a:	97 81       	ldd	r25, Z+7	; 0x07
    1a5c:	02 c0       	rjmp	.+4      	; 0x1a62 <vfprintf+0x3ba>
    1a5e:	8f ef       	ldi	r24, 0xFF	; 255
    1a60:	9f ef       	ldi	r25, 0xFF	; 255
    1a62:	2b 96       	adiw	r28, 0x0b	; 11
    1a64:	e2 e1       	ldi	r30, 0x12	; 18
    1a66:	0c 94 01 0e 	jmp	0x1c02	; 0x1c02 <__epilogue_restores__>

00001a6a <strnlen_P>:
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	05 90       	lpm	r0, Z+
    1a6e:	61 50       	subi	r22, 0x01	; 1
    1a70:	70 40       	sbci	r23, 0x00	; 0
    1a72:	01 10       	cpse	r0, r1
    1a74:	d8 f7       	brcc	.-10     	; 0x1a6c <strnlen_P+0x2>
    1a76:	80 95       	com	r24
    1a78:	90 95       	com	r25
    1a7a:	8e 0f       	add	r24, r30
    1a7c:	9f 1f       	adc	r25, r31
    1a7e:	08 95       	ret

00001a80 <strnlen>:
    1a80:	fc 01       	movw	r30, r24
    1a82:	61 50       	subi	r22, 0x01	; 1
    1a84:	70 40       	sbci	r23, 0x00	; 0
    1a86:	01 90       	ld	r0, Z+
    1a88:	01 10       	cpse	r0, r1
    1a8a:	d8 f7       	brcc	.-10     	; 0x1a82 <strnlen+0x2>
    1a8c:	80 95       	com	r24
    1a8e:	90 95       	com	r25
    1a90:	8e 0f       	add	r24, r30
    1a92:	9f 1f       	adc	r25, r31
    1a94:	08 95       	ret

00001a96 <fputc>:
    1a96:	0f 93       	push	r16
    1a98:	1f 93       	push	r17
    1a9a:	cf 93       	push	r28
    1a9c:	df 93       	push	r29
    1a9e:	fb 01       	movw	r30, r22
    1aa0:	23 81       	ldd	r18, Z+3	; 0x03
    1aa2:	21 fd       	sbrc	r18, 1
    1aa4:	03 c0       	rjmp	.+6      	; 0x1aac <fputc+0x16>
    1aa6:	8f ef       	ldi	r24, 0xFF	; 255
    1aa8:	9f ef       	ldi	r25, 0xFF	; 255
    1aaa:	2c c0       	rjmp	.+88     	; 0x1b04 <fputc+0x6e>
    1aac:	22 ff       	sbrs	r18, 2
    1aae:	16 c0       	rjmp	.+44     	; 0x1adc <fputc+0x46>
    1ab0:	46 81       	ldd	r20, Z+6	; 0x06
    1ab2:	57 81       	ldd	r21, Z+7	; 0x07
    1ab4:	24 81       	ldd	r18, Z+4	; 0x04
    1ab6:	35 81       	ldd	r19, Z+5	; 0x05
    1ab8:	42 17       	cp	r20, r18
    1aba:	53 07       	cpc	r21, r19
    1abc:	44 f4       	brge	.+16     	; 0x1ace <fputc+0x38>
    1abe:	a0 81       	ld	r26, Z
    1ac0:	b1 81       	ldd	r27, Z+1	; 0x01
    1ac2:	9d 01       	movw	r18, r26
    1ac4:	2f 5f       	subi	r18, 0xFF	; 255
    1ac6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac8:	31 83       	std	Z+1, r19	; 0x01
    1aca:	20 83       	st	Z, r18
    1acc:	8c 93       	st	X, r24
    1ace:	26 81       	ldd	r18, Z+6	; 0x06
    1ad0:	37 81       	ldd	r19, Z+7	; 0x07
    1ad2:	2f 5f       	subi	r18, 0xFF	; 255
    1ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad6:	37 83       	std	Z+7, r19	; 0x07
    1ad8:	26 83       	std	Z+6, r18	; 0x06
    1ada:	14 c0       	rjmp	.+40     	; 0x1b04 <fputc+0x6e>
    1adc:	8b 01       	movw	r16, r22
    1ade:	ec 01       	movw	r28, r24
    1ae0:	fb 01       	movw	r30, r22
    1ae2:	00 84       	ldd	r0, Z+8	; 0x08
    1ae4:	f1 85       	ldd	r31, Z+9	; 0x09
    1ae6:	e0 2d       	mov	r30, r0
    1ae8:	09 95       	icall
    1aea:	89 2b       	or	r24, r25
    1aec:	e1 f6       	brne	.-72     	; 0x1aa6 <fputc+0x10>
    1aee:	d8 01       	movw	r26, r16
    1af0:	16 96       	adiw	r26, 0x06	; 6
    1af2:	8d 91       	ld	r24, X+
    1af4:	9c 91       	ld	r25, X
    1af6:	17 97       	sbiw	r26, 0x07	; 7
    1af8:	01 96       	adiw	r24, 0x01	; 1
    1afa:	17 96       	adiw	r26, 0x07	; 7
    1afc:	9c 93       	st	X, r25
    1afe:	8e 93       	st	-X, r24
    1b00:	16 97       	sbiw	r26, 0x06	; 6
    1b02:	ce 01       	movw	r24, r28
    1b04:	df 91       	pop	r29
    1b06:	cf 91       	pop	r28
    1b08:	1f 91       	pop	r17
    1b0a:	0f 91       	pop	r16
    1b0c:	08 95       	ret

00001b0e <__ultoa_invert>:
    1b0e:	fa 01       	movw	r30, r20
    1b10:	aa 27       	eor	r26, r26
    1b12:	28 30       	cpi	r18, 0x08	; 8
    1b14:	51 f1       	breq	.+84     	; 0x1b6a <__ultoa_invert+0x5c>
    1b16:	20 31       	cpi	r18, 0x10	; 16
    1b18:	81 f1       	breq	.+96     	; 0x1b7a <__ultoa_invert+0x6c>
    1b1a:	e8 94       	clt
    1b1c:	6f 93       	push	r22
    1b1e:	6e 7f       	andi	r22, 0xFE	; 254
    1b20:	6e 5f       	subi	r22, 0xFE	; 254
    1b22:	7f 4f       	sbci	r23, 0xFF	; 255
    1b24:	8f 4f       	sbci	r24, 0xFF	; 255
    1b26:	9f 4f       	sbci	r25, 0xFF	; 255
    1b28:	af 4f       	sbci	r26, 0xFF	; 255
    1b2a:	b1 e0       	ldi	r27, 0x01	; 1
    1b2c:	3e d0       	rcall	.+124    	; 0x1baa <__ultoa_invert+0x9c>
    1b2e:	b4 e0       	ldi	r27, 0x04	; 4
    1b30:	3c d0       	rcall	.+120    	; 0x1baa <__ultoa_invert+0x9c>
    1b32:	67 0f       	add	r22, r23
    1b34:	78 1f       	adc	r23, r24
    1b36:	89 1f       	adc	r24, r25
    1b38:	9a 1f       	adc	r25, r26
    1b3a:	a1 1d       	adc	r26, r1
    1b3c:	68 0f       	add	r22, r24
    1b3e:	79 1f       	adc	r23, r25
    1b40:	8a 1f       	adc	r24, r26
    1b42:	91 1d       	adc	r25, r1
    1b44:	a1 1d       	adc	r26, r1
    1b46:	6a 0f       	add	r22, r26
    1b48:	71 1d       	adc	r23, r1
    1b4a:	81 1d       	adc	r24, r1
    1b4c:	91 1d       	adc	r25, r1
    1b4e:	a1 1d       	adc	r26, r1
    1b50:	20 d0       	rcall	.+64     	; 0x1b92 <__ultoa_invert+0x84>
    1b52:	09 f4       	brne	.+2      	; 0x1b56 <__ultoa_invert+0x48>
    1b54:	68 94       	set
    1b56:	3f 91       	pop	r19
    1b58:	2a e0       	ldi	r18, 0x0A	; 10
    1b5a:	26 9f       	mul	r18, r22
    1b5c:	11 24       	eor	r1, r1
    1b5e:	30 19       	sub	r19, r0
    1b60:	30 5d       	subi	r19, 0xD0	; 208
    1b62:	31 93       	st	Z+, r19
    1b64:	de f6       	brtc	.-74     	; 0x1b1c <__ultoa_invert+0xe>
    1b66:	cf 01       	movw	r24, r30
    1b68:	08 95       	ret
    1b6a:	46 2f       	mov	r20, r22
    1b6c:	47 70       	andi	r20, 0x07	; 7
    1b6e:	40 5d       	subi	r20, 0xD0	; 208
    1b70:	41 93       	st	Z+, r20
    1b72:	b3 e0       	ldi	r27, 0x03	; 3
    1b74:	0f d0       	rcall	.+30     	; 0x1b94 <__ultoa_invert+0x86>
    1b76:	c9 f7       	brne	.-14     	; 0x1b6a <__ultoa_invert+0x5c>
    1b78:	f6 cf       	rjmp	.-20     	; 0x1b66 <__ultoa_invert+0x58>
    1b7a:	46 2f       	mov	r20, r22
    1b7c:	4f 70       	andi	r20, 0x0F	; 15
    1b7e:	40 5d       	subi	r20, 0xD0	; 208
    1b80:	4a 33       	cpi	r20, 0x3A	; 58
    1b82:	18 f0       	brcs	.+6      	; 0x1b8a <__ultoa_invert+0x7c>
    1b84:	49 5d       	subi	r20, 0xD9	; 217
    1b86:	31 fd       	sbrc	r19, 1
    1b88:	40 52       	subi	r20, 0x20	; 32
    1b8a:	41 93       	st	Z+, r20
    1b8c:	02 d0       	rcall	.+4      	; 0x1b92 <__ultoa_invert+0x84>
    1b8e:	a9 f7       	brne	.-22     	; 0x1b7a <__ultoa_invert+0x6c>
    1b90:	ea cf       	rjmp	.-44     	; 0x1b66 <__ultoa_invert+0x58>
    1b92:	b4 e0       	ldi	r27, 0x04	; 4
    1b94:	a6 95       	lsr	r26
    1b96:	97 95       	ror	r25
    1b98:	87 95       	ror	r24
    1b9a:	77 95       	ror	r23
    1b9c:	67 95       	ror	r22
    1b9e:	ba 95       	dec	r27
    1ba0:	c9 f7       	brne	.-14     	; 0x1b94 <__ultoa_invert+0x86>
    1ba2:	00 97       	sbiw	r24, 0x00	; 0
    1ba4:	61 05       	cpc	r22, r1
    1ba6:	71 05       	cpc	r23, r1
    1ba8:	08 95       	ret
    1baa:	9b 01       	movw	r18, r22
    1bac:	ac 01       	movw	r20, r24
    1bae:	0a 2e       	mov	r0, r26
    1bb0:	06 94       	lsr	r0
    1bb2:	57 95       	ror	r21
    1bb4:	47 95       	ror	r20
    1bb6:	37 95       	ror	r19
    1bb8:	27 95       	ror	r18
    1bba:	ba 95       	dec	r27
    1bbc:	c9 f7       	brne	.-14     	; 0x1bb0 <__ultoa_invert+0xa2>
    1bbe:	62 0f       	add	r22, r18
    1bc0:	73 1f       	adc	r23, r19
    1bc2:	84 1f       	adc	r24, r20
    1bc4:	95 1f       	adc	r25, r21
    1bc6:	a0 1d       	adc	r26, r0
    1bc8:	08 95       	ret

00001bca <__prologue_saves__>:
    1bca:	2f 92       	push	r2
    1bcc:	3f 92       	push	r3
    1bce:	4f 92       	push	r4
    1bd0:	5f 92       	push	r5
    1bd2:	6f 92       	push	r6
    1bd4:	7f 92       	push	r7
    1bd6:	8f 92       	push	r8
    1bd8:	9f 92       	push	r9
    1bda:	af 92       	push	r10
    1bdc:	bf 92       	push	r11
    1bde:	cf 92       	push	r12
    1be0:	df 92       	push	r13
    1be2:	ef 92       	push	r14
    1be4:	ff 92       	push	r15
    1be6:	0f 93       	push	r16
    1be8:	1f 93       	push	r17
    1bea:	cf 93       	push	r28
    1bec:	df 93       	push	r29
    1bee:	cd b7       	in	r28, 0x3d	; 61
    1bf0:	de b7       	in	r29, 0x3e	; 62
    1bf2:	ca 1b       	sub	r28, r26
    1bf4:	db 0b       	sbc	r29, r27
    1bf6:	0f b6       	in	r0, 0x3f	; 63
    1bf8:	f8 94       	cli
    1bfa:	de bf       	out	0x3e, r29	; 62
    1bfc:	0f be       	out	0x3f, r0	; 63
    1bfe:	cd bf       	out	0x3d, r28	; 61
    1c00:	09 94       	ijmp

00001c02 <__epilogue_restores__>:
    1c02:	2a 88       	ldd	r2, Y+18	; 0x12
    1c04:	39 88       	ldd	r3, Y+17	; 0x11
    1c06:	48 88       	ldd	r4, Y+16	; 0x10
    1c08:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c0a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c0c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c0e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c10:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c12:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c14:	b9 84       	ldd	r11, Y+9	; 0x09
    1c16:	c8 84       	ldd	r12, Y+8	; 0x08
    1c18:	df 80       	ldd	r13, Y+7	; 0x07
    1c1a:	ee 80       	ldd	r14, Y+6	; 0x06
    1c1c:	fd 80       	ldd	r15, Y+5	; 0x05
    1c1e:	0c 81       	ldd	r16, Y+4	; 0x04
    1c20:	1b 81       	ldd	r17, Y+3	; 0x03
    1c22:	aa 81       	ldd	r26, Y+2	; 0x02
    1c24:	b9 81       	ldd	r27, Y+1	; 0x01
    1c26:	ce 0f       	add	r28, r30
    1c28:	d1 1d       	adc	r29, r1
    1c2a:	0f b6       	in	r0, 0x3f	; 63
    1c2c:	f8 94       	cli
    1c2e:	de bf       	out	0x3e, r29	; 62
    1c30:	0f be       	out	0x3f, r0	; 63
    1c32:	cd bf       	out	0x3d, r28	; 61
    1c34:	ed 01       	movw	r28, r26
    1c36:	08 95       	ret

00001c38 <_exit>:
    1c38:	f8 94       	cli

00001c3a <__stop_program>:
    1c3a:	ff cf       	rjmp	.-2      	; 0x1c3a <__stop_program>
