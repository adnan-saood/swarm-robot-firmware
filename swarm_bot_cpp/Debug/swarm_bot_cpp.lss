
swarm_bot_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  00001c1a  00001cae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006a  00800128  00800128  00001cd6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  00001d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000247c  00000000  00000000  00002024  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000141d  00000000  00000000  000044a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003a6b  00000000  00000000  000058bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000086c  00000000  00000000  00009328  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011126  00000000  00000000  00009b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017b8  00000000  00000000  0001acba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0001c472  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004fbf  00000000  00000000  0001c672  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 3a 02 	jmp	0x474	; 0x474 <__vector_1>
       8:	0c 94 36 03 	jmp	0x66c	; 0x66c <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 d3 04 	jmp	0x9a6	; 0x9a6 <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 ee 06 	jmp	0xddc	; 0xddc <__vector_13>
      38:	0c 94 6c 05 	jmp	0xad8	; 0xad8 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 93 06 	jmp	0xd26	; 0xd26 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ea e1       	ldi	r30, 0x1A	; 26
      7c:	fc e1       	ldi	r31, 0x1C	; 28
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a8 32       	cpi	r26, 0x28	; 40
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a8 e2       	ldi	r26, 0x28	; 40
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a2 39       	cpi	r26, 0x92	; 146
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 72 07 	call	0xee4	; 0xee4 <main>
      9e:	0c 94 0b 0e 	jmp	0x1c16	; 0x1c16 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <pid_Init>:
 *  \param d_factor  Derivate term.
 *  \param pid  Struct with PID status.
 */
void pid_Init(int16_t p_factor, int16_t i_factor, int16_t d_factor, struct PID_DATA *pid)
// Set up PID controller parameters
{
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	fb 01       	movw	r30, r22
      ac:	e9 01       	movw	r28, r18
  // Start values for PID controller
  pid->sumError = 0;
      ae:	1a 82       	std	Y+2, r1	; 0x02
      b0:	1b 82       	std	Y+3, r1	; 0x03
      b2:	1c 82       	std	Y+4, r1	; 0x04
      b4:	1d 82       	std	Y+5, r1	; 0x05
  pid->lastProcessValue = 0;
      b6:	19 82       	std	Y+1, r1	; 0x01
      b8:	18 82       	st	Y, r1
  // Tuning constants for PID loop
  pid->P_Factor = p_factor;
      ba:	9f 83       	std	Y+7, r25	; 0x07
      bc:	8e 83       	std	Y+6, r24	; 0x06
  pid->I_Factor = i_factor;
      be:	79 87       	std	Y+9, r23	; 0x09
      c0:	68 87       	std	Y+8, r22	; 0x08
  pid->D_Factor = d_factor;
      c2:	5b 87       	std	Y+11, r21	; 0x0b
      c4:	4a 87       	std	Y+10, r20	; 0x0a
  // Limits to avoid overflow
  pid->maxError = MAX_INT / (pid->P_Factor + 1);
      c6:	bc 01       	movw	r22, r24
      c8:	6f 5f       	subi	r22, 0xFF	; 255
      ca:	7f 4f       	sbci	r23, 0xFF	; 255
      cc:	8f ef       	ldi	r24, 0xFF	; 255
      ce:	9f e7       	ldi	r25, 0x7F	; 127
      d0:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
      d4:	7d 87       	std	Y+13, r23	; 0x0d
      d6:	6c 87       	std	Y+12, r22	; 0x0c
  pid->maxSumError = MAX_I_TERM / (pid->I_Factor + 1);
      d8:	9f 01       	movw	r18, r30
      da:	2f 5f       	subi	r18, 0xFF	; 255
      dc:	3f 4f       	sbci	r19, 0xFF	; 255
      de:	03 2e       	mov	r0, r19
      e0:	00 0c       	add	r0, r0
      e2:	44 0b       	sbc	r20, r20
      e4:	55 0b       	sbc	r21, r21
      e6:	6f ef       	ldi	r22, 0xFF	; 255
      e8:	7f ef       	ldi	r23, 0xFF	; 255
      ea:	8f ef       	ldi	r24, 0xFF	; 255
      ec:	9f e3       	ldi	r25, 0x3F	; 63
      ee:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__divmodsi4>
      f2:	2e 87       	std	Y+14, r18	; 0x0e
      f4:	3f 87       	std	Y+15, r19	; 0x0f
      f6:	48 8b       	std	Y+16, r20	; 0x10
      f8:	59 8b       	std	Y+17, r21	; 0x11
}
      fa:	df 91       	pop	r29
      fc:	cf 91       	pop	r28
      fe:	08 95       	ret

00000100 <pid_Controller>:
 *  \param setPoint  Desired value.
 *  \param processValue  Measured value.
 *  \param pid_st  PID status struct.
 */
int16_t pid_Controller(int16_t setPoint, int16_t processValue, struct PID_DATA *pid_st)
{
     100:	ef 92       	push	r14
     102:	ff 92       	push	r15
     104:	0f 93       	push	r16
     106:	1f 93       	push	r17
     108:	cf 93       	push	r28
     10a:	df 93       	push	r29
     10c:	8b 01       	movw	r16, r22
     10e:	fa 01       	movw	r30, r20
  int16_t error, p_term, d_term;
  int32_t i_term, ret, temp;

  error = setPoint - processValue;
     110:	86 1b       	sub	r24, r22
     112:	97 0b       	sbc	r25, r23

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
     114:	24 85       	ldd	r18, Z+12	; 0x0c
     116:	35 85       	ldd	r19, Z+13	; 0x0d
     118:	28 17       	cp	r18, r24
     11a:	39 07       	cpc	r19, r25
     11c:	84 f0       	brlt	.+32     	; 0x13e <pid_Controller+0x3e>
    p_term = MAX_INT;
  }
  else if (error < -pid_st->maxError){
     11e:	31 95       	neg	r19
     120:	21 95       	neg	r18
     122:	31 09       	sbc	r19, r1
     124:	82 17       	cp	r24, r18
     126:	93 07       	cpc	r25, r19
     128:	6c f0       	brlt	.+26     	; 0x144 <pid_Controller+0x44>
    p_term = -MAX_INT;
  }
  else{
    p_term = pid_st->P_Factor * error;
     12a:	26 81       	ldd	r18, Z+6	; 0x06
     12c:	37 81       	ldd	r19, Z+7	; 0x07
     12e:	82 9f       	mul	r24, r18
     130:	e0 01       	movw	r28, r0
     132:	83 9f       	mul	r24, r19
     134:	d0 0d       	add	r29, r0
     136:	92 9f       	mul	r25, r18
     138:	d0 0d       	add	r29, r0
     13a:	11 24       	eor	r1, r1
     13c:	05 c0       	rjmp	.+10     	; 0x148 <pid_Controller+0x48>

  error = setPoint - processValue;

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
    p_term = MAX_INT;
     13e:	cf ef       	ldi	r28, 0xFF	; 255
     140:	df e7       	ldi	r29, 0x7F	; 127
     142:	02 c0       	rjmp	.+4      	; 0x148 <pid_Controller+0x48>
  }
  else if (error < -pid_st->maxError){
    p_term = -MAX_INT;
     144:	c1 e0       	ldi	r28, 0x01	; 1
     146:	d0 e8       	ldi	r29, 0x80	; 128
  else{
    p_term = pid_st->P_Factor * error;
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
     148:	09 2e       	mov	r0, r25
     14a:	00 0c       	add	r0, r0
     14c:	aa 0b       	sbc	r26, r26
     14e:	bb 0b       	sbc	r27, r27
     150:	42 81       	ldd	r20, Z+2	; 0x02
     152:	53 81       	ldd	r21, Z+3	; 0x03
     154:	64 81       	ldd	r22, Z+4	; 0x04
     156:	75 81       	ldd	r23, Z+5	; 0x05
     158:	9a 01       	movw	r18, r20
     15a:	ab 01       	movw	r20, r22
     15c:	28 0f       	add	r18, r24
     15e:	39 1f       	adc	r19, r25
     160:	4a 1f       	adc	r20, r26
     162:	5b 1f       	adc	r21, r27
  if(temp > pid_st->maxSumError){
     164:	86 85       	ldd	r24, Z+14	; 0x0e
     166:	97 85       	ldd	r25, Z+15	; 0x0f
     168:	a0 89       	ldd	r26, Z+16	; 0x10
     16a:	b1 89       	ldd	r27, Z+17	; 0x11
     16c:	82 17       	cp	r24, r18
     16e:	93 07       	cpc	r25, r19
     170:	a4 07       	cpc	r26, r20
     172:	b5 07       	cpc	r27, r21
     174:	4c f4       	brge	.+18     	; 0x188 <pid_Controller+0x88>
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
     176:	82 83       	std	Z+2, r24	; 0x02
     178:	93 83       	std	Z+3, r25	; 0x03
     17a:	a4 83       	std	Z+4, r26	; 0x04
     17c:	b5 83       	std	Z+5, r27	; 0x05
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
     17e:	6f ef       	ldi	r22, 0xFF	; 255
     180:	7f ef       	ldi	r23, 0xFF	; 255
     182:	8f ef       	ldi	r24, 0xFF	; 255
     184:	9f e3       	ldi	r25, 0x3F	; 63
     186:	1d c0       	rjmp	.+58     	; 0x1c2 <pid_Controller+0xc2>
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
     188:	b0 95       	com	r27
     18a:	a0 95       	com	r26
     18c:	90 95       	com	r25
     18e:	81 95       	neg	r24
     190:	9f 4f       	sbci	r25, 0xFF	; 255
     192:	af 4f       	sbci	r26, 0xFF	; 255
     194:	bf 4f       	sbci	r27, 0xFF	; 255
     196:	28 17       	cp	r18, r24
     198:	39 07       	cpc	r19, r25
     19a:	4a 07       	cpc	r20, r26
     19c:	5b 07       	cpc	r21, r27
     19e:	4c f4       	brge	.+18     	; 0x1b2 <pid_Controller+0xb2>
    i_term = -MAX_I_TERM;
    pid_st->sumError = -pid_st->maxSumError;
     1a0:	82 83       	std	Z+2, r24	; 0x02
     1a2:	93 83       	std	Z+3, r25	; 0x03
     1a4:	a4 83       	std	Z+4, r26	; 0x04
     1a6:	b5 83       	std	Z+5, r27	; 0x05
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
    i_term = -MAX_I_TERM;
     1a8:	61 e0       	ldi	r22, 0x01	; 1
     1aa:	70 e0       	ldi	r23, 0x00	; 0
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 ec       	ldi	r25, 0xC0	; 192
     1b0:	08 c0       	rjmp	.+16     	; 0x1c2 <pid_Controller+0xc2>
    pid_st->sumError = -pid_st->maxSumError;
  }
  else{
    pid_st->sumError = temp;
     1b2:	22 83       	std	Z+2, r18	; 0x02
     1b4:	33 83       	std	Z+3, r19	; 0x03
     1b6:	44 83       	std	Z+4, r20	; 0x04
     1b8:	55 83       	std	Z+5, r21	; 0x05
    i_term = pid_st->I_Factor * pid_st->sumError;
     1ba:	a0 85       	ldd	r26, Z+8	; 0x08
     1bc:	b1 85       	ldd	r27, Z+9	; 0x09
     1be:	0e 94 93 09 	call	0x1326	; 0x1326 <__mulshisi3>
  }

  // Calculate Dterm
  d_term = pid_st->D_Factor * (pid_st->lastProcessValue - processValue);
     1c2:	20 81       	ld	r18, Z
     1c4:	31 81       	ldd	r19, Z+1	; 0x01
     1c6:	20 1b       	sub	r18, r16
     1c8:	31 0b       	sbc	r19, r17
     1ca:	a2 85       	ldd	r26, Z+10	; 0x0a
     1cc:	b3 85       	ldd	r27, Z+11	; 0x0b
     1ce:	2a 9f       	mul	r18, r26
     1d0:	70 01       	movw	r14, r0
     1d2:	2b 9f       	mul	r18, r27
     1d4:	f0 0c       	add	r15, r0
     1d6:	3a 9f       	mul	r19, r26
     1d8:	f0 0c       	add	r15, r0
     1da:	11 24       	eor	r1, r1

  pid_st->lastProcessValue = processValue;
     1dc:	11 83       	std	Z+1, r17	; 0x01
     1de:	00 83       	st	Z, r16

  ret = (p_term + i_term + d_term) / SCALING_FACTOR;
     1e0:	8e 01       	movw	r16, r28
     1e2:	dd 0f       	add	r29, r29
     1e4:	22 0b       	sbc	r18, r18
     1e6:	33 0b       	sbc	r19, r19
     1e8:	ab 01       	movw	r20, r22
     1ea:	bc 01       	movw	r22, r24
     1ec:	40 0f       	add	r20, r16
     1ee:	51 1f       	adc	r21, r17
     1f0:	62 1f       	adc	r22, r18
     1f2:	73 1f       	adc	r23, r19
     1f4:	c7 01       	movw	r24, r14
     1f6:	ff 0c       	add	r15, r15
     1f8:	aa 0b       	sbc	r26, r26
     1fa:	bb 0b       	sbc	r27, r27
     1fc:	48 0f       	add	r20, r24
     1fe:	59 1f       	adc	r21, r25
     200:	6a 1f       	adc	r22, r26
     202:	7b 1f       	adc	r23, r27
     204:	db 01       	movw	r26, r22
     206:	ca 01       	movw	r24, r20
     208:	77 23       	and	r23, r23
     20a:	24 f4       	brge	.+8      	; 0x214 <pid_Controller+0x114>
     20c:	81 58       	subi	r24, 0x81	; 129
     20e:	9f 4f       	sbci	r25, 0xFF	; 255
     210:	af 4f       	sbci	r26, 0xFF	; 255
     212:	bf 4f       	sbci	r27, 0xFF	; 255
     214:	68 94       	set
     216:	16 f8       	bld	r1, 6
     218:	b5 95       	asr	r27
     21a:	a7 95       	ror	r26
     21c:	97 95       	ror	r25
     21e:	87 95       	ror	r24
     220:	16 94       	lsr	r1
     222:	d1 f7       	brne	.-12     	; 0x218 <pid_Controller+0x118>
     224:	81 30       	cpi	r24, 0x01	; 1
     226:	20 e8       	ldi	r18, 0x80	; 128
     228:	92 07       	cpc	r25, r18
     22a:	2f ef       	ldi	r18, 0xFF	; 255
     22c:	a2 07       	cpc	r26, r18
     22e:	b2 07       	cpc	r27, r18
     230:	24 f4       	brge	.+8      	; 0x23a <pid_Controller+0x13a>
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	90 e8       	ldi	r25, 0x80	; 128
     236:	af ef       	ldi	r26, 0xFF	; 255
     238:	bf ef       	ldi	r27, 0xFF	; 255
  }
  else if(ret < -MAX_INT){
    ret = -MAX_INT;
  }

  return((int16_t)ret);
     23a:	81 15       	cp	r24, r1
     23c:	20 e8       	ldi	r18, 0x80	; 128
     23e:	92 07       	cpc	r25, r18
     240:	a1 05       	cpc	r26, r1
     242:	b1 05       	cpc	r27, r1
     244:	24 f0       	brlt	.+8      	; 0x24e <pid_Controller+0x14e>
     246:	8f ef       	ldi	r24, 0xFF	; 255
     248:	9f e7       	ldi	r25, 0x7F	; 127
     24a:	a0 e0       	ldi	r26, 0x00	; 0
     24c:	b0 e0       	ldi	r27, 0x00	; 0
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	1f 91       	pop	r17
     254:	0f 91       	pop	r16
     256:	ff 90       	pop	r15
     258:	ef 90       	pop	r14
     25a:	08 95       	ret

0000025c <_adc_init>:
#include <__adc__.h>

void _adc_init(void)
{
	ADMUX = (1 << REFS0); // AVCC
     25c:	ec e7       	ldi	r30, 0x7C	; 124
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 e4       	ldi	r24, 0x40	; 64
     262:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) | (1 << REFS1); //1v1
	
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN); // Turn ADC On sample: 16M/128 = 125KHz
     264:	aa e7       	ldi	r26, 0x7A	; 122
     266:	b0 e0       	ldi	r27, 0x00	; 0
     268:	8c 91       	ld	r24, X
     26a:	87 68       	ori	r24, 0x87	; 135
     26c:	8c 93       	st	X, r24
	ADMUX |= (0 << ADLAR);
     26e:	80 81       	ld	r24, Z
     270:	80 83       	st	Z, r24
     272:	08 95       	ret

00000274 <_adc_read>:
	//ADMUX |= (1 << ADLAR); 8 bit
}

int _adc_read(char channel)
{
	ADMUX |= channel & 0x0f;
     274:	ec e7       	ldi	r30, 0x7C	; 124
     276:	f0 e0       	ldi	r31, 0x00	; 0
     278:	90 81       	ld	r25, Z
     27a:	8f 70       	andi	r24, 0x0F	; 15
     27c:	98 2b       	or	r25, r24
     27e:	90 83       	st	Z, r25
	ADCSRA |= (1 << ADSC);
     280:	ea e7       	ldi	r30, 0x7A	; 122
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	80 64       	ori	r24, 0x40	; 64
     288:	80 83       	st	Z, r24
	while(ADCSRA & (1 << ADSC));
     28a:	80 81       	ld	r24, Z
     28c:	86 fd       	sbrc	r24, 6
     28e:	fd cf       	rjmp	.-6      	; 0x28a <_adc_read+0x16>
	return ADCW;
     290:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     294:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     298:	08 95       	ret

0000029a <_ref>:
	}
}

void _command(uint8_t motor, int16_t inputValue)
{
	_set_speed(motor,inputValue);
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	19 f0       	breq	.+6      	; 0x2a4 <_ref+0xa>
     29e:	82 30       	cpi	r24, 0x02	; 2
     2a0:	21 f0       	breq	.+8      	; 0x2aa <_ref+0x10>
     2a2:	08 95       	ret
     2a4:	84 e1       	ldi	r24, 0x14	; 20
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	08 95       	ret
     2aa:	8e e1       	ldi	r24, 0x1E	; 30
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	08 95       	ret

000002b0 <_sens>:
     2b0:	81 30       	cpi	r24, 0x01	; 1
     2b2:	49 f4       	brne	.+18     	; 0x2c6 <_sens+0x16>
     2b4:	0e 94 32 04 	call	0x864	; 0x864 <_omega_from_encA>
     2b8:	2d ec       	ldi	r18, 0xCD	; 205
     2ba:	3c ec       	ldi	r19, 0xCC	; 204
     2bc:	48 e1       	ldi	r20, 0x18	; 24
     2be:	51 e4       	ldi	r21, 0x41	; 65
     2c0:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     2c4:	08 95       	ret
     2c6:	82 30       	cpi	r24, 0x02	; 2
     2c8:	49 f4       	brne	.+18     	; 0x2dc <_sens+0x2c>
     2ca:	0e 94 68 04 	call	0x8d0	; 0x8d0 <_omega_from_encB>
     2ce:	2d ec       	ldi	r18, 0xCD	; 205
     2d0:	3c ec       	ldi	r19, 0xCC	; 204
     2d2:	48 e1       	ldi	r20, 0x18	; 24
     2d4:	51 e4       	ldi	r21, 0x41	; 65
     2d6:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     2da:	08 95       	ret
     2dc:	60 e0       	ldi	r22, 0x00	; 0
     2de:	70 e0       	ldi	r23, 0x00	; 0
     2e0:	80 e8       	ldi	r24, 0x80	; 128
     2e2:	9f eb       	ldi	r25, 0xBF	; 191
     2e4:	08 95       	ret

000002e6 <_break_motor>:
     2e6:	81 30       	cpi	r24, 0x01	; 1
     2e8:	49 f4       	brne	.+18     	; 0x2fc <_break_motor+0x16>
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 05 06 	call	0xc0a	; 0xc0a <_set_pwm_0A>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 1d 06 	call	0xc3a	; 0xc3a <_set_pwm_1A>
     2fa:	08 95       	ret
     2fc:	82 30       	cpi	r24, 0x02	; 2
     2fe:	41 f4       	brne	.+16     	; 0x310 <_break_motor+0x2a>
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	0e 94 11 06 	call	0xc22	; 0xc22 <_set_pwm_0B>
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	0e 94 2c 06 	call	0xc58	; 0xc58 <_set_pwm_1B>
     310:	08 95       	ret

00000312 <_set_speed>:
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	eb 01       	movw	r28, r22
     318:	20 97       	sbiw	r28, 0x00	; 0
     31a:	19 f4       	brne	.+6      	; 0x322 <_set_speed+0x10>
     31c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <_break_motor>
     320:	32 c0       	rjmp	.+100    	; 0x386 <_set_speed+0x74>
     322:	dd 23       	and	r29, r29
     324:	d4 f4       	brge	.+52     	; 0x35a <_set_speed+0x48>
     326:	81 30       	cpi	r24, 0x01	; 1
     328:	59 f4       	brne	.+22     	; 0x340 <_set_speed+0x2e>
     32a:	88 27       	eor	r24, r24
     32c:	99 27       	eor	r25, r25
     32e:	86 1b       	sub	r24, r22
     330:	97 0b       	sbc	r25, r23
     332:	0e 94 05 06 	call	0xc0a	; 0xc0a <_set_pwm_0A>
     336:	80 e0       	ldi	r24, 0x00	; 0
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	0e 94 1d 06 	call	0xc3a	; 0xc3a <_set_pwm_1A>
     33e:	23 c0       	rjmp	.+70     	; 0x386 <_set_speed+0x74>
     340:	82 30       	cpi	r24, 0x02	; 2
     342:	09 f5       	brne	.+66     	; 0x386 <_set_speed+0x74>
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 11 06 	call	0xc22	; 0xc22 <_set_pwm_0B>
     34c:	88 27       	eor	r24, r24
     34e:	99 27       	eor	r25, r25
     350:	8c 1b       	sub	r24, r28
     352:	9d 0b       	sbc	r25, r29
     354:	0e 94 2c 06 	call	0xc58	; 0xc58 <_set_pwm_1B>
     358:	16 c0       	rjmp	.+44     	; 0x386 <_set_speed+0x74>
     35a:	1c 16       	cp	r1, r28
     35c:	1d 06       	cpc	r1, r29
     35e:	9c f4       	brge	.+38     	; 0x386 <_set_speed+0x74>
     360:	81 30       	cpi	r24, 0x01	; 1
     362:	41 f4       	brne	.+16     	; 0x374 <_set_speed+0x62>
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 05 06 	call	0xc0a	; 0xc0a <_set_pwm_0A>
     36c:	ce 01       	movw	r24, r28
     36e:	0e 94 1d 06 	call	0xc3a	; 0xc3a <_set_pwm_1A>
     372:	09 c0       	rjmp	.+18     	; 0x386 <_set_speed+0x74>
     374:	82 30       	cpi	r24, 0x02	; 2
     376:	39 f4       	brne	.+14     	; 0x386 <_set_speed+0x74>
     378:	cb 01       	movw	r24, r22
     37a:	0e 94 11 06 	call	0xc22	; 0xc22 <_set_pwm_0B>
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	90 e0       	ldi	r25, 0x00	; 0
     382:	0e 94 2c 06 	call	0xc58	; 0xc58 <_set_pwm_1B>
     386:	ce 01       	movw	r24, r28
     388:	df 91       	pop	r29
     38a:	cf 91       	pop	r28
     38c:	08 95       	ret

0000038e <_init_dc_control>:
	}
}

void _init_dc_control(void)
{
	pid_Init(K_P * SCALING_FACTOR, K_I * SCALING_FACTOR , K_D * SCALING_FACTOR , &pidData);
     38e:	28 e2       	ldi	r18, 0x28	; 40
     390:	31 e0       	ldi	r19, 0x01	; 1
     392:	40 e4       	ldi	r20, 0x40	; 64
     394:	50 e0       	ldi	r21, 0x00	; 0
     396:	66 e2       	ldi	r22, 0x26	; 38
     398:	70 e0       	ldi	r23, 0x00	; 0
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	92 e0       	ldi	r25, 0x02	; 2
     39e:	0e 94 53 00 	call	0xa6	; 0xa6 <pid_Init>
	sei();
     3a2:	78 94       	sei
     3a4:	08 95       	ret

000003a6 <_update_controller>:
}

int16_t _update_controller(uint8_t motor)
{
     3a6:	df 92       	push	r13
     3a8:	ef 92       	push	r14
     3aa:	ff 92       	push	r15
     3ac:	0f 93       	push	r16
     3ae:	1f 93       	push	r17
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	18 2f       	mov	r17, r24
	int16_t ref, sen,u;
	ref = _ref(motor);
     3b6:	0e 94 4d 01 	call	0x29a	; 0x29a <_ref>
     3ba:	08 2f       	mov	r16, r24
     3bc:	f9 2e       	mov	r15, r25
	sen =   (int16_t) _sens(motor);
     3be:	81 2f       	mov	r24, r17
     3c0:	0e 94 58 01 	call	0x2b0	; 0x2b0 <_sens>
     3c4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     3c8:	e6 2e       	mov	r14, r22
     3ca:	d7 2e       	mov	r13, r23
	u = pid_Controller(ref,sen, &pidData);
     3cc:	48 e2       	ldi	r20, 0x28	; 40
     3ce:	51 e0       	ldi	r21, 0x01	; 1
     3d0:	80 2f       	mov	r24, r16
     3d2:	9f 2d       	mov	r25, r15
     3d4:	0e 94 80 00 	call	0x100	; 0x100 <pid_Controller>
     3d8:	d8 2f       	mov	r29, r24
     3da:	c9 2f       	mov	r28, r25
	}
}

void _command(uint8_t motor, int16_t inputValue)
{
	_set_speed(motor,inputValue);
     3dc:	68 2f       	mov	r22, r24
     3de:	79 2f       	mov	r23, r25
     3e0:	81 2f       	mov	r24, r17
     3e2:	0e 94 89 01 	call	0x312	; 0x312 <_set_speed>
	sen =   (int16_t) _sens(motor);
	u = pid_Controller(ref,sen, &pidData);
	_command(motor, u);
	if (DEBUG_CONTROLLER)
	{
		printf("%d - %d - %d\n",ref, sen, u);
     3e6:	cf 93       	push	r28
     3e8:	df 93       	push	r29
     3ea:	df 92       	push	r13
     3ec:	ef 92       	push	r14
     3ee:	ff 92       	push	r15
     3f0:	0f 93       	push	r16
     3f2:	8a e1       	ldi	r24, 0x1A	; 26
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	9f 93       	push	r25
     3f8:	8f 93       	push	r24
     3fa:	0e 94 2d 0b 	call	0x165a	; 0x165a <printf>
	}
	return u;
     3fe:	8d b7       	in	r24, 0x3d	; 61
     400:	9e b7       	in	r25, 0x3e	; 62
     402:	08 96       	adiw	r24, 0x08	; 8
     404:	0f b6       	in	r0, 0x3f	; 63
     406:	f8 94       	cli
     408:	9e bf       	out	0x3e, r25	; 62
     40a:	0f be       	out	0x3f, r0	; 63
     40c:	8d bf       	out	0x3d, r24	; 61
}
     40e:	8d 2f       	mov	r24, r29
     410:	9c 2f       	mov	r25, r28
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	1f 91       	pop	r17
     418:	0f 91       	pop	r16
     41a:	ff 90       	pop	r15
     41c:	ef 90       	pop	r14
     41e:	df 90       	pop	r13
     420:	08 95       	ret

00000422 <_dc_controller_loop>:

int16_t _dc_controller_loop()
{
	if(_controler_flag_A)
     422:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <_controler_flag_A>
     426:	88 23       	and	r24, r24
     428:	29 f0       	breq	.+10     	; 0x434 <_dc_controller_loop+0x12>
	{
		 _update_controller(MA);
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_update_controller>
		 _controler_flag_A = 0;
     430:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <_controler_flag_A>
	}
	if(_controler_flag_B)
     434:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_controler_flag_B>
     438:	88 23       	and	r24, r24
     43a:	29 f0       	breq	.+10     	; 0x446 <_dc_controller_loop+0x24>
	{
		_update_controller(MB);
     43c:	82 e0       	ldi	r24, 0x02	; 2
     43e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <_update_controller>
		_controler_flag_B = 0;
     442:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <_controler_flag_B>
	}
	return 0;
     446:	80 e0       	ldi	r24, 0x00	; 0
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	08 95       	ret

0000044c <_interrupt0_enable>:

#include <__INT_0_1__.h>

void _interrupt0_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT0);
     44c:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1 << ISC00) | (1 << ISC01);
     44e:	e9 e6       	ldi	r30, 0x69	; 105
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	80 81       	ld	r24, Z
     454:	83 60       	ori	r24, 0x03	; 3
     456:	80 83       	st	Z, r24
	sei();
     458:	78 94       	sei
     45a:	08 95       	ret

0000045c <_interrupt1_enable>:
}
void _interrupt1_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT1);
     45c:	e9 9a       	sbi	0x1d, 1	; 29
	EICRA |= (trigger << ISC10);
     45e:	e9 e6       	ldi	r30, 0x69	; 105
     460:	f0 e0       	ldi	r31, 0x00	; 0
     462:	20 81       	ld	r18, Z
     464:	34 e0       	ldi	r19, 0x04	; 4
     466:	83 9f       	mul	r24, r19
     468:	c0 01       	movw	r24, r0
     46a:	11 24       	eor	r1, r1
     46c:	82 2b       	or	r24, r18
     46e:	80 83       	st	Z, r24
	sei();
     470:	78 94       	sei
     472:	08 95       	ret

00000474 <__vector_1>:
	return _omega_from_PMA() * 0.3f + _omega_from_encA() * 0.7f;
}
float _omega_comp_B(void)
{
	return _omega_from_PMB() * 0.3f + _omega_from_encB() * 0.7f;
}
     474:	1f 92       	push	r1
     476:	0f 92       	push	r0
     478:	0f b6       	in	r0, 0x3f	; 63
     47a:	0f 92       	push	r0
     47c:	11 24       	eor	r1, r1
     47e:	2f 92       	push	r2
     480:	3f 92       	push	r3
     482:	4f 92       	push	r4
     484:	5f 92       	push	r5
     486:	6f 92       	push	r6
     488:	7f 92       	push	r7
     48a:	8f 92       	push	r8
     48c:	9f 92       	push	r9
     48e:	af 92       	push	r10
     490:	bf 92       	push	r11
     492:	cf 92       	push	r12
     494:	df 92       	push	r13
     496:	ef 92       	push	r14
     498:	ff 92       	push	r15
     49a:	0f 93       	push	r16
     49c:	1f 93       	push	r17
     49e:	2f 93       	push	r18
     4a0:	3f 93       	push	r19
     4a2:	4f 93       	push	r20
     4a4:	5f 93       	push	r21
     4a6:	6f 93       	push	r22
     4a8:	7f 93       	push	r23
     4aa:	8f 93       	push	r24
     4ac:	9f 93       	push	r25
     4ae:	af 93       	push	r26
     4b0:	bf 93       	push	r27
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	ef 93       	push	r30
     4b8:	ff 93       	push	r31
     4ba:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <_enca_count>
     4be:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <_enca_count+0x1>
     4c2:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <_enca_count+0x2>
     4c6:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <_enca_count+0x3>
     4ca:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <_enca_count+0x4>
     4ce:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <_enca_count+0x5>
     4d2:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <_enca_count+0x6>
     4d6:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <_enca_count+0x7>
     4da:	a0 e0       	ldi	r26, 0x00	; 0
     4dc:	0e 94 b0 09 	call	0x1360	; 0x1360 <__cmpdi2_s8>
     4e0:	a9 f4       	brne	.+42     	; 0x50c <__vector_1+0x98>
     4e2:	0e 94 4b 06 	call	0xc96	; 0xc96 <_micros0>
     4e6:	dc 01       	movw	r26, r24
     4e8:	cb 01       	movw	r24, r22
     4ea:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <_prev_tick_timeA>
     4ee:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <_prev_tick_timeA+0x1>
     4f2:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <_prev_tick_timeA+0x2>
     4f6:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <_prev_tick_timeA+0x3>
     4fa:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <_prev_tick_timeA+0x4>
     4fe:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <_prev_tick_timeA+0x5>
     502:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <_prev_tick_timeA+0x6>
     506:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_prev_tick_timeA+0x7>
     50a:	3e c0       	rjmp	.+124    	; 0x588 <__vector_1+0x114>
     50c:	0e 94 4b 06 	call	0xc96	; 0xc96 <_micros0>
     510:	1b 01       	movw	r2, r22
     512:	2c 01       	movw	r4, r24
     514:	a0 90 5e 01 	lds	r10, 0x015E	; 0x80015e <_prev_tick_timeA>
     518:	b0 90 5f 01 	lds	r11, 0x015F	; 0x80015f <_prev_tick_timeA+0x1>
     51c:	c0 90 60 01 	lds	r12, 0x0160	; 0x800160 <_prev_tick_timeA+0x2>
     520:	d0 90 61 01 	lds	r13, 0x0161	; 0x800161 <_prev_tick_timeA+0x3>
     524:	e0 90 62 01 	lds	r14, 0x0162	; 0x800162 <_prev_tick_timeA+0x4>
     528:	f0 90 63 01 	lds	r15, 0x0163	; 0x800163 <_prev_tick_timeA+0x5>
     52c:	00 91 64 01 	lds	r16, 0x0164	; 0x800164 <_prev_tick_timeA+0x6>
     530:	10 91 65 01 	lds	r17, 0x0165	; 0x800165 <_prev_tick_timeA+0x7>
     534:	26 2f       	mov	r18, r22
     536:	33 2d       	mov	r19, r3
     538:	44 2d       	mov	r20, r4
     53a:	55 2d       	mov	r21, r5
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	0e 94 a7 09 	call	0x134e	; 0x134e <__subdi3>
     548:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <_tick_timeA>
     54c:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <_tick_timeA+0x1>
     550:	40 93 70 01 	sts	0x0170, r20	; 0x800170 <_tick_timeA+0x2>
     554:	50 93 71 01 	sts	0x0171, r21	; 0x800171 <_tick_timeA+0x3>
     558:	60 93 72 01 	sts	0x0172, r22	; 0x800172 <_tick_timeA+0x4>
     55c:	70 93 73 01 	sts	0x0173, r23	; 0x800173 <_tick_timeA+0x5>
     560:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <_tick_timeA+0x6>
     564:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <_tick_timeA+0x7>
     568:	20 92 5e 01 	sts	0x015E, r2	; 0x80015e <_prev_tick_timeA>
     56c:	30 92 5f 01 	sts	0x015F, r3	; 0x80015f <_prev_tick_timeA+0x1>
     570:	40 92 60 01 	sts	0x0160, r4	; 0x800160 <_prev_tick_timeA+0x2>
     574:	50 92 61 01 	sts	0x0161, r5	; 0x800161 <_prev_tick_timeA+0x3>
     578:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <_prev_tick_timeA+0x4>
     57c:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <_prev_tick_timeA+0x5>
     580:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <_prev_tick_timeA+0x6>
     584:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_prev_tick_timeA+0x7>
     588:	4c 9b       	sbis	0x09, 4	; 9
     58a:	27 c0       	rjmp	.+78     	; 0x5da <__vector_1+0x166>
     58c:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <_enca_count>
     590:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <_enca_count+0x1>
     594:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <_enca_count+0x2>
     598:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <_enca_count+0x3>
     59c:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <_enca_count+0x4>
     5a0:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <_enca_count+0x5>
     5a4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <_enca_count+0x6>
     5a8:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <_enca_count+0x7>
     5ac:	a1 e0       	ldi	r26, 0x01	; 1
     5ae:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     5b2:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <_enca_count>
     5b6:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <_enca_count+0x1>
     5ba:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <_enca_count+0x2>
     5be:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <_enca_count+0x3>
     5c2:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <_enca_count+0x4>
     5c6:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <_enca_count+0x5>
     5ca:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <_enca_count+0x6>
     5ce:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <_enca_count+0x7>
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_dir_a>
     5d8:	26 c0       	rjmp	.+76     	; 0x626 <__vector_1+0x1b2>
     5da:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <_enca_count>
     5de:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <_enca_count+0x1>
     5e2:	40 91 50 01 	lds	r20, 0x0150	; 0x800150 <_enca_count+0x2>
     5e6:	50 91 51 01 	lds	r21, 0x0151	; 0x800151 <_enca_count+0x3>
     5ea:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <_enca_count+0x4>
     5ee:	70 91 53 01 	lds	r23, 0x0153	; 0x800153 <_enca_count+0x5>
     5f2:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <_enca_count+0x6>
     5f6:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <_enca_count+0x7>
     5fa:	af ef       	ldi	r26, 0xFF	; 255
     5fc:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     600:	20 93 4e 01 	sts	0x014E, r18	; 0x80014e <_enca_count>
     604:	30 93 4f 01 	sts	0x014F, r19	; 0x80014f <_enca_count+0x1>
     608:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <_enca_count+0x2>
     60c:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <_enca_count+0x3>
     610:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <_enca_count+0x4>
     614:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <_enca_count+0x5>
     618:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <_enca_count+0x6>
     61c:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <_enca_count+0x7>
     620:	8f ef       	ldi	r24, 0xFF	; 255
     622:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_dir_a>
     626:	ff 91       	pop	r31
     628:	ef 91       	pop	r30
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	bf 91       	pop	r27
     630:	af 91       	pop	r26
     632:	9f 91       	pop	r25
     634:	8f 91       	pop	r24
     636:	7f 91       	pop	r23
     638:	6f 91       	pop	r22
     63a:	5f 91       	pop	r21
     63c:	4f 91       	pop	r20
     63e:	3f 91       	pop	r19
     640:	2f 91       	pop	r18
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	ff 90       	pop	r15
     648:	ef 90       	pop	r14
     64a:	df 90       	pop	r13
     64c:	cf 90       	pop	r12
     64e:	bf 90       	pop	r11
     650:	af 90       	pop	r10
     652:	9f 90       	pop	r9
     654:	8f 90       	pop	r8
     656:	7f 90       	pop	r7
     658:	6f 90       	pop	r6
     65a:	5f 90       	pop	r5
     65c:	4f 90       	pop	r4
     65e:	3f 90       	pop	r3
     660:	2f 90       	pop	r2
     662:	0f 90       	pop	r0
     664:	0f be       	out	0x3f, r0	; 63
     666:	0f 90       	pop	r0
     668:	1f 90       	pop	r1
     66a:	18 95       	reti

0000066c <__vector_2>:
     66c:	1f 92       	push	r1
     66e:	0f 92       	push	r0
     670:	0f b6       	in	r0, 0x3f	; 63
     672:	0f 92       	push	r0
     674:	11 24       	eor	r1, r1
     676:	2f 92       	push	r2
     678:	3f 92       	push	r3
     67a:	4f 92       	push	r4
     67c:	5f 92       	push	r5
     67e:	6f 92       	push	r6
     680:	7f 92       	push	r7
     682:	8f 92       	push	r8
     684:	9f 92       	push	r9
     686:	af 92       	push	r10
     688:	bf 92       	push	r11
     68a:	cf 92       	push	r12
     68c:	df 92       	push	r13
     68e:	ef 92       	push	r14
     690:	ff 92       	push	r15
     692:	0f 93       	push	r16
     694:	1f 93       	push	r17
     696:	2f 93       	push	r18
     698:	3f 93       	push	r19
     69a:	4f 93       	push	r20
     69c:	5f 93       	push	r21
     69e:	6f 93       	push	r22
     6a0:	7f 93       	push	r23
     6a2:	8f 93       	push	r24
     6a4:	9f 93       	push	r25
     6a6:	af 93       	push	r26
     6a8:	bf 93       	push	r27
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	ef 93       	push	r30
     6b0:	ff 93       	push	r31
     6b2:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <_encb_count>
     6b6:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <_encb_count+0x1>
     6ba:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <_encb_count+0x2>
     6be:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <_encb_count+0x3>
     6c2:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <_encb_count+0x4>
     6c6:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <_encb_count+0x5>
     6ca:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_encb_count+0x6>
     6ce:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <_encb_count+0x7>
     6d2:	a0 e0       	ldi	r26, 0x00	; 0
     6d4:	0e 94 b0 09 	call	0x1360	; 0x1360 <__cmpdi2_s8>
     6d8:	a9 f4       	brne	.+42     	; 0x704 <__vector_2+0x98>
     6da:	0e 94 4b 06 	call	0xc96	; 0xc96 <_micros0>
     6de:	dc 01       	movw	r26, r24
     6e0:	cb 01       	movw	r24, r22
     6e2:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <_prev_tick_timeB>
     6e6:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <_prev_tick_timeB+0x1>
     6ea:	a0 93 58 01 	sts	0x0158, r26	; 0x800158 <_prev_tick_timeB+0x2>
     6ee:	b0 93 59 01 	sts	0x0159, r27	; 0x800159 <_prev_tick_timeB+0x3>
     6f2:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <_prev_tick_timeB+0x4>
     6f6:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <_prev_tick_timeB+0x5>
     6fa:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <_prev_tick_timeB+0x6>
     6fe:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <_prev_tick_timeB+0x7>
     702:	3e c0       	rjmp	.+124    	; 0x780 <__vector_2+0x114>
     704:	0e 94 4b 06 	call	0xc96	; 0xc96 <_micros0>
     708:	1b 01       	movw	r2, r22
     70a:	2c 01       	movw	r4, r24
     70c:	a0 90 56 01 	lds	r10, 0x0156	; 0x800156 <_prev_tick_timeB>
     710:	b0 90 57 01 	lds	r11, 0x0157	; 0x800157 <_prev_tick_timeB+0x1>
     714:	c0 90 58 01 	lds	r12, 0x0158	; 0x800158 <_prev_tick_timeB+0x2>
     718:	d0 90 59 01 	lds	r13, 0x0159	; 0x800159 <_prev_tick_timeB+0x3>
     71c:	e0 90 5a 01 	lds	r14, 0x015A	; 0x80015a <_prev_tick_timeB+0x4>
     720:	f0 90 5b 01 	lds	r15, 0x015B	; 0x80015b <_prev_tick_timeB+0x5>
     724:	00 91 5c 01 	lds	r16, 0x015C	; 0x80015c <_prev_tick_timeB+0x6>
     728:	10 91 5d 01 	lds	r17, 0x015D	; 0x80015d <_prev_tick_timeB+0x7>
     72c:	26 2f       	mov	r18, r22
     72e:	33 2d       	mov	r19, r3
     730:	44 2d       	mov	r20, r4
     732:	55 2d       	mov	r21, r5
     734:	60 e0       	ldi	r22, 0x00	; 0
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 a7 09 	call	0x134e	; 0x134e <__subdi3>
     740:	20 93 66 01 	sts	0x0166, r18	; 0x800166 <_tick_timeB>
     744:	30 93 67 01 	sts	0x0167, r19	; 0x800167 <_tick_timeB+0x1>
     748:	40 93 68 01 	sts	0x0168, r20	; 0x800168 <_tick_timeB+0x2>
     74c:	50 93 69 01 	sts	0x0169, r21	; 0x800169 <_tick_timeB+0x3>
     750:	60 93 6a 01 	sts	0x016A, r22	; 0x80016a <_tick_timeB+0x4>
     754:	70 93 6b 01 	sts	0x016B, r23	; 0x80016b <_tick_timeB+0x5>
     758:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <_tick_timeB+0x6>
     75c:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <_tick_timeB+0x7>
     760:	20 92 56 01 	sts	0x0156, r2	; 0x800156 <_prev_tick_timeB>
     764:	30 92 57 01 	sts	0x0157, r3	; 0x800157 <_prev_tick_timeB+0x1>
     768:	40 92 58 01 	sts	0x0158, r4	; 0x800158 <_prev_tick_timeB+0x2>
     76c:	50 92 59 01 	sts	0x0159, r5	; 0x800159 <_prev_tick_timeB+0x3>
     770:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <_prev_tick_timeB+0x4>
     774:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <_prev_tick_timeB+0x5>
     778:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <_prev_tick_timeB+0x6>
     77c:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <_prev_tick_timeB+0x7>
     780:	4f 9b       	sbis	0x09, 7	; 9
     782:	27 c0       	rjmp	.+78     	; 0x7d2 <__vector_2+0x166>
     784:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <_encb_count>
     788:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <_encb_count+0x1>
     78c:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <_encb_count+0x2>
     790:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <_encb_count+0x3>
     794:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <_encb_count+0x4>
     798:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <_encb_count+0x5>
     79c:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_encb_count+0x6>
     7a0:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <_encb_count+0x7>
     7a4:	a1 e0       	ldi	r26, 0x01	; 1
     7a6:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     7aa:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <_encb_count>
     7ae:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <_encb_count+0x1>
     7b2:	40 93 48 01 	sts	0x0148, r20	; 0x800148 <_encb_count+0x2>
     7b6:	50 93 49 01 	sts	0x0149, r21	; 0x800149 <_encb_count+0x3>
     7ba:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <_encb_count+0x4>
     7be:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <_encb_count+0x5>
     7c2:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <_encb_count+0x6>
     7c6:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <_encb_count+0x7>
     7ca:	81 e0       	ldi	r24, 0x01	; 1
     7cc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_dir_b>
     7d0:	26 c0       	rjmp	.+76     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7d2:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <_encb_count>
     7d6:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <_encb_count+0x1>
     7da:	40 91 48 01 	lds	r20, 0x0148	; 0x800148 <_encb_count+0x2>
     7de:	50 91 49 01 	lds	r21, 0x0149	; 0x800149 <_encb_count+0x3>
     7e2:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <_encb_count+0x4>
     7e6:	70 91 4b 01 	lds	r23, 0x014B	; 0x80014b <_encb_count+0x5>
     7ea:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <_encb_count+0x6>
     7ee:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <_encb_count+0x7>
     7f2:	af ef       	ldi	r26, 0xFF	; 255
     7f4:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     7f8:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <_encb_count>
     7fc:	30 93 47 01 	sts	0x0147, r19	; 0x800147 <_encb_count+0x1>
     800:	40 93 48 01 	sts	0x0148, r20	; 0x800148 <_encb_count+0x2>
     804:	50 93 49 01 	sts	0x0149, r21	; 0x800149 <_encb_count+0x3>
     808:	60 93 4a 01 	sts	0x014A, r22	; 0x80014a <_encb_count+0x4>
     80c:	70 93 4b 01 	sts	0x014B, r23	; 0x80014b <_encb_count+0x5>
     810:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <_encb_count+0x6>
     814:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <_encb_count+0x7>
     818:	8f ef       	ldi	r24, 0xFF	; 255
     81a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_dir_b>
     81e:	ff 91       	pop	r31
     820:	ef 91       	pop	r30
     822:	df 91       	pop	r29
     824:	cf 91       	pop	r28
     826:	bf 91       	pop	r27
     828:	af 91       	pop	r26
     82a:	9f 91       	pop	r25
     82c:	8f 91       	pop	r24
     82e:	7f 91       	pop	r23
     830:	6f 91       	pop	r22
     832:	5f 91       	pop	r21
     834:	4f 91       	pop	r20
     836:	3f 91       	pop	r19
     838:	2f 91       	pop	r18
     83a:	1f 91       	pop	r17
     83c:	0f 91       	pop	r16
     83e:	ff 90       	pop	r15
     840:	ef 90       	pop	r14
     842:	df 90       	pop	r13
     844:	cf 90       	pop	r12
     846:	bf 90       	pop	r11
     848:	af 90       	pop	r10
     84a:	9f 90       	pop	r9
     84c:	8f 90       	pop	r8
     84e:	7f 90       	pop	r7
     850:	6f 90       	pop	r6
     852:	5f 90       	pop	r5
     854:	4f 90       	pop	r4
     856:	3f 90       	pop	r3
     858:	2f 90       	pop	r2
     85a:	0f 90       	pop	r0
     85c:	0f be       	out	0x3f, r0	; 63
     85e:	0f 90       	pop	r0
     860:	1f 90       	pop	r1
     862:	18 95       	reti

00000864 <_omega_from_encA>:
     864:	cf 92       	push	r12
     866:	df 92       	push	r13
     868:	ef 92       	push	r14
     86a:	ff 92       	push	r15
     86c:	cf 93       	push	r28
     86e:	c0 91 0b 01 	lds	r28, 0x010B	; 0x80010b <_dir_a>
     872:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <_tick_timeA>
     876:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <_tick_timeA+0x1>
     87a:	40 91 70 01 	lds	r20, 0x0170	; 0x800170 <_tick_timeA+0x2>
     87e:	50 91 71 01 	lds	r21, 0x0171	; 0x800171 <_tick_timeA+0x3>
     882:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <_tick_timeA+0x4>
     886:	70 91 73 01 	lds	r23, 0x0173	; 0x800173 <_tick_timeA+0x5>
     88a:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <_tick_timeA+0x6>
     88e:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <_tick_timeA+0x7>
     892:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__floatundisf>
     896:	9b 01       	movw	r18, r22
     898:	ac 01       	movw	r20, r24
     89a:	60 ec       	ldi	r22, 0xC0	; 192
     89c:	7f ee       	ldi	r23, 0xEF	; 239
     89e:	89 e3       	ldi	r24, 0x39	; 57
     8a0:	98 e4       	ldi	r25, 0x48	; 72
     8a2:	0e 94 7f 07 	call	0xefe	; 0xefe <__divsf3>
     8a6:	6b 01       	movw	r12, r22
     8a8:	7c 01       	movw	r14, r24
     8aa:	6c 2f       	mov	r22, r28
     8ac:	cc 0f       	add	r28, r28
     8ae:	77 0b       	sbc	r23, r23
     8b0:	88 0b       	sbc	r24, r24
     8b2:	99 0b       	sbc	r25, r25
     8b4:	0e 94 29 08 	call	0x1052	; 0x1052 <__floatsisf>
     8b8:	9b 01       	movw	r18, r22
     8ba:	ac 01       	movw	r20, r24
     8bc:	c7 01       	movw	r24, r14
     8be:	b6 01       	movw	r22, r12
     8c0:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     8c4:	cf 91       	pop	r28
     8c6:	ff 90       	pop	r15
     8c8:	ef 90       	pop	r14
     8ca:	df 90       	pop	r13
     8cc:	cf 90       	pop	r12
     8ce:	08 95       	ret

000008d0 <_omega_from_encB>:
     8d0:	cf 92       	push	r12
     8d2:	df 92       	push	r13
     8d4:	ef 92       	push	r14
     8d6:	ff 92       	push	r15
     8d8:	cf 93       	push	r28
     8da:	c0 91 0a 01 	lds	r28, 0x010A	; 0x80010a <_dir_b>
     8de:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <_tick_timeB>
     8e2:	30 91 67 01 	lds	r19, 0x0167	; 0x800167 <_tick_timeB+0x1>
     8e6:	40 91 68 01 	lds	r20, 0x0168	; 0x800168 <_tick_timeB+0x2>
     8ea:	50 91 69 01 	lds	r21, 0x0169	; 0x800169 <_tick_timeB+0x3>
     8ee:	60 91 6a 01 	lds	r22, 0x016A	; 0x80016a <_tick_timeB+0x4>
     8f2:	70 91 6b 01 	lds	r23, 0x016B	; 0x80016b <_tick_timeB+0x5>
     8f6:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <_tick_timeB+0x6>
     8fa:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <_tick_timeB+0x7>
     8fe:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__floatundisf>
     902:	9b 01       	movw	r18, r22
     904:	ac 01       	movw	r20, r24
     906:	60 ec       	ldi	r22, 0xC0	; 192
     908:	7f ee       	ldi	r23, 0xEF	; 239
     90a:	89 e3       	ldi	r24, 0x39	; 57
     90c:	98 e4       	ldi	r25, 0x48	; 72
     90e:	0e 94 7f 07 	call	0xefe	; 0xefe <__divsf3>
     912:	6b 01       	movw	r12, r22
     914:	7c 01       	movw	r14, r24
     916:	6c 2f       	mov	r22, r28
     918:	cc 0f       	add	r28, r28
     91a:	77 0b       	sbc	r23, r23
     91c:	88 0b       	sbc	r24, r24
     91e:	99 0b       	sbc	r25, r25
     920:	0e 94 29 08 	call	0x1052	; 0x1052 <__floatsisf>
     924:	9b 01       	movw	r18, r22
     926:	ac 01       	movw	r20, r24
     928:	c7 01       	movw	r24, r14
     92a:	b6 01       	movw	r22, r12
     92c:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     930:	cf 91       	pop	r28
     932:	ff 90       	pop	r15
     934:	ef 90       	pop	r14
     936:	df 90       	pop	r13
     938:	cf 90       	pop	r12
     93a:	08 95       	ret

0000093c <_insertion_sort>:
		}
	}
	_pmB_prev = _pmB_current;
}
void _insertion_sort(uint16_t arr[], int n)
{
     93c:	0f 93       	push	r16
     93e:	1f 93       	push	r17
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
    int i, key, j;
    for (i = 1; i < n; i++) {
     944:	62 30       	cpi	r22, 0x02	; 2
     946:	71 05       	cpc	r23, r1
     948:	4c f1       	brlt	.+82     	; 0x99c <_insertion_sort+0x60>
     94a:	ec 01       	movw	r28, r24
     94c:	8b 01       	movw	r16, r22
     94e:	01 50       	subi	r16, 0x01	; 1
     950:	11 09       	sbc	r17, r1
     952:	60 e0       	ldi	r22, 0x00	; 0
     954:	70 e0       	ldi	r23, 0x00	; 0
        key = arr[i];
     956:	aa 81       	ldd	r26, Y+2	; 0x02
     958:	bb 81       	ldd	r27, Y+3	; 0x03
        j = i - 1;
     95a:	9b 01       	movw	r18, r22
 
        /* Move elements of arr[0..i-1], that are
          greater than key, to one position ahead
          of their current position */
        while (j >= 0 && arr[j] > key) {
     95c:	77 23       	and	r23, r23
     95e:	84 f0       	brlt	.+32     	; 0x980 <_insertion_sort+0x44>
     960:	48 81       	ld	r20, Y
     962:	59 81       	ldd	r21, Y+1	; 0x01
     964:	a4 17       	cp	r26, r20
     966:	b5 07       	cpc	r27, r21
     968:	58 f4       	brcc	.+22     	; 0x980 <_insertion_sort+0x44>
     96a:	fe 01       	movw	r30, r28
            arr[j + 1] = arr[j];
     96c:	53 83       	std	Z+3, r21	; 0x03
     96e:	42 83       	std	Z+2, r20	; 0x02
            j = j - 1;
     970:	21 50       	subi	r18, 0x01	; 1
     972:	31 09       	sbc	r19, r1
     974:	28 f0       	brcs	.+10     	; 0x980 <_insertion_sort+0x44>
        j = i - 1;
 
        /* Move elements of arr[0..i-1], that are
          greater than key, to one position ahead
          of their current position */
        while (j >= 0 && arr[j] > key) {
     976:	52 91       	ld	r21, -Z
     978:	42 91       	ld	r20, -Z
     97a:	a4 17       	cp	r26, r20
     97c:	b5 07       	cpc	r27, r21
     97e:	b0 f3       	brcs	.-20     	; 0x96c <_insertion_sort+0x30>
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
     980:	f9 01       	movw	r30, r18
     982:	31 96       	adiw	r30, 0x01	; 1
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	e8 0f       	add	r30, r24
     98a:	f9 1f       	adc	r31, r25
     98c:	b1 83       	std	Z+1, r27	; 0x01
     98e:	a0 83       	st	Z, r26
     990:	6f 5f       	subi	r22, 0xFF	; 255
     992:	7f 4f       	sbci	r23, 0xFF	; 255
     994:	22 96       	adiw	r28, 0x02	; 2
	_pmB_prev = _pmB_current;
}
void _insertion_sort(uint16_t arr[], int n)
{
    int i, key, j;
    for (i = 1; i < n; i++) {
     996:	60 17       	cp	r22, r16
     998:	71 07       	cpc	r23, r17
     99a:	e9 f6       	brne	.-70     	; 0x956 <_insertion_sort+0x1a>
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
     99c:	df 91       	pop	r29
     99e:	cf 91       	pop	r28
     9a0:	1f 91       	pop	r17
     9a2:	0f 91       	pop	r16
     9a4:	08 95       	ret

000009a6 <__vector_9>:
{
	return _omega_from_PMB() * 0.3f + _omega_from_encB() * 0.7f;
}

ISR(TIMER2_OVF_vect)
{
     9a6:	1f 92       	push	r1
     9a8:	0f 92       	push	r0
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	0f 92       	push	r0
     9ae:	11 24       	eor	r1, r1
     9b0:	ef 92       	push	r14
     9b2:	ff 92       	push	r15
     9b4:	0f 93       	push	r16
     9b6:	1f 93       	push	r17
     9b8:	2f 93       	push	r18
     9ba:	3f 93       	push	r19
     9bc:	4f 93       	push	r20
     9be:	5f 93       	push	r21
     9c0:	6f 93       	push	r22
     9c2:	7f 93       	push	r23
     9c4:	8f 93       	push	r24
     9c6:	9f 93       	push	r25
     9c8:	af 93       	push	r26
     9ca:	bf 93       	push	r27
     9cc:	cf 93       	push	r28
     9ce:	df 93       	push	r29
     9d0:	ef 93       	push	r30
     9d2:	ff 93       	push	r31
	uint16_t snap = __read_PM(PMA);
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
	if ( (snap < __PM_lower_bound) || (snap > __PM_upper_bound) )
     9da:	88 5c       	subi	r24, 0xC8	; 200
     9dc:	91 09       	sbc	r25, r1
     9de:	89 35       	cpi	r24, 0x59	; 89
     9e0:	92 40       	sbci	r25, 0x02	; 2
     9e2:	88 f0       	brcs	.+34     	; 0xa06 <__vector_9+0x60>
	{
		_pmA_current = -1;
     9e4:	8f ef       	ldi	r24, 0xFF	; 255
     9e6:	9f ef       	ldi	r25, 0xFF	; 255
     9e8:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <_pmA_current+0x1>
     9ec:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <_pmA_current>
		_omega_pmA = _omega_from_encA();
     9f0:	0e 94 32 04 	call	0x864	; 0x864 <_omega_from_encA>
     9f4:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_omega_pmA>
     9f8:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_omega_pmA+0x1>
     9fc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_omega_pmA+0x2>
     a00:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_omega_pmA+0x3>
     a04:	4a c0       	rjmp	.+148    	; 0xa9a <__vector_9+0xf4>
	}
	else
	{
		if ( _pmA_prev == -1 )
     a06:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     a0a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     a0e:	01 96       	adiw	r24, 0x01	; 1
     a10:	59 f4       	brne	.+22     	; 0xa28 <__vector_9+0x82>
		{
			_omega_pmA = _omega_from_encA();
     a12:	0e 94 32 04 	call	0x864	; 0x864 <_omega_from_encA>
     a16:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_omega_pmA>
     a1a:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_omega_pmA+0x1>
     a1e:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_omega_pmA+0x2>
     a22:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_omega_pmA+0x3>
     a26:	39 c0       	rjmp	.+114    	; 0xa9a <__vector_9+0xf4>
		}
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
     a28:	8a e0       	ldi	r24, 0x0A	; 10
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	0e 94 0c 0a 	call	0x1418	; 0x1418 <malloc>
     a30:	7c 01       	movw	r14, r24
     a32:	ec 01       	movw	r28, r24
     a34:	8c 01       	movw	r16, r24
     a36:	06 5f       	subi	r16, 0xF6	; 246
     a38:	1f 4f       	sbci	r17, 0xFF	; 255
	
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
			{
				reads[i] = __read_PM(PMA);
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
     a40:	89 93       	st	Y+, r24
     a42:	99 93       	st	Y+, r25
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
	
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
     a44:	c0 17       	cp	r28, r16
     a46:	d1 07       	cpc	r29, r17
     a48:	c1 f7       	brne	.-16     	; 0xa3a <__vector_9+0x94>
			{
				reads[i] = __read_PM(PMA);
			}
			// Sort outcome
			_insertion_sort(reads, __PM_SAMPLE_COUNT);
     a4a:	65 e0       	ldi	r22, 0x05	; 5
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	c7 01       	movw	r24, r14
     a50:	0e 94 9e 04 	call	0x93c	; 0x93c <_insertion_sort>
			_pmA_current = reads[(__PM_SAMPLE_COUNT >> 1)];
     a54:	f7 01       	movw	r30, r14
     a56:	84 81       	ldd	r24, Z+4	; 0x04
     a58:	95 81       	ldd	r25, Z+5	; 0x05
     a5a:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <_pmA_current+0x1>
     a5e:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <_pmA_current>
			_omega_pmA = __PM_SLOPE * (float)(_pmA_current - _pmA_prev);
     a62:	60 91 44 01 	lds	r22, 0x0144	; 0x800144 <_pmA_current>
     a66:	70 91 45 01 	lds	r23, 0x0145	; 0x800145 <_pmA_current+0x1>
     a6a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     a6e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     a72:	68 1b       	sub	r22, r24
     a74:	79 0b       	sbc	r23, r25
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	0e 94 27 08 	call	0x104e	; 0x104e <__floatunsisf>
     a7e:	20 e0       	ldi	r18, 0x00	; 0
     a80:	30 e0       	ldi	r19, 0x00	; 0
     a82:	48 e5       	ldi	r20, 0x58	; 88
     a84:	51 e4       	ldi	r21, 0x41	; 65
     a86:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     a8a:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <_omega_pmA>
     a8e:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <_omega_pmA+0x1>
     a92:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <_omega_pmA+0x2>
     a96:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <_omega_pmA+0x3>
		}
	}
	_pmA_prev = _pmA_current;
     a9a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <_pmA_current>
     a9e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <_pmA_current+0x1>
     aa2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_pmA_prev+0x1>
     aa6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_pmA_prev>
}
     aaa:	ff 91       	pop	r31
     aac:	ef 91       	pop	r30
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	bf 91       	pop	r27
     ab4:	af 91       	pop	r26
     ab6:	9f 91       	pop	r25
     ab8:	8f 91       	pop	r24
     aba:	7f 91       	pop	r23
     abc:	6f 91       	pop	r22
     abe:	5f 91       	pop	r21
     ac0:	4f 91       	pop	r20
     ac2:	3f 91       	pop	r19
     ac4:	2f 91       	pop	r18
     ac6:	1f 91       	pop	r17
     ac8:	0f 91       	pop	r16
     aca:	ff 90       	pop	r15
     acc:	ef 90       	pop	r14
     ace:	0f 90       	pop	r0
     ad0:	0f be       	out	0x3f, r0	; 63
     ad2:	0f 90       	pop	r0
     ad4:	1f 90       	pop	r1
     ad6:	18 95       	reti

00000ad8 <__vector_14>:


ISR(TIMER0_COMPA_vect)
{
     ad8:	1f 92       	push	r1
     ada:	0f 92       	push	r0
     adc:	0f b6       	in	r0, 0x3f	; 63
     ade:	0f 92       	push	r0
     ae0:	11 24       	eor	r1, r1
     ae2:	ef 92       	push	r14
     ae4:	ff 92       	push	r15
     ae6:	0f 93       	push	r16
     ae8:	1f 93       	push	r17
     aea:	2f 93       	push	r18
     aec:	3f 93       	push	r19
     aee:	4f 93       	push	r20
     af0:	5f 93       	push	r21
     af2:	6f 93       	push	r22
     af4:	7f 93       	push	r23
     af6:	8f 93       	push	r24
     af8:	9f 93       	push	r25
     afa:	af 93       	push	r26
     afc:	bf 93       	push	r27
     afe:	cf 93       	push	r28
     b00:	df 93       	push	r29
     b02:	ef 93       	push	r30
     b04:	ff 93       	push	r31
	uint16_t snap = __read_PM(PMB);
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
	if ( (snap < __PM_lower_bound) || (snap > __PM_upper_bound) )
     b0c:	88 5c       	subi	r24, 0xC8	; 200
     b0e:	91 09       	sbc	r25, r1
     b10:	89 35       	cpi	r24, 0x59	; 89
     b12:	92 40       	sbci	r25, 0x02	; 2
     b14:	88 f0       	brcs	.+34     	; 0xb38 <__vector_14+0x60>
	{
		_pmB_current = -1;
     b16:	8f ef       	ldi	r24, 0xFF	; 255
     b18:	9f ef       	ldi	r25, 0xFF	; 255
     b1a:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <_pmB_current+0x1>
     b1e:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_pmB_current>
		_omega_pmB = _omega_from_encA();
     b22:	0e 94 32 04 	call	0x864	; 0x864 <_omega_from_encA>
     b26:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <_omega_pmB>
     b2a:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <_omega_pmB+0x1>
     b2e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_omega_pmB+0x2>
     b32:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_omega_pmB+0x3>
     b36:	4a c0       	rjmp	.+148    	; 0xbcc <__vector_14+0xf4>
	}
	else
	{
		if ( _pmA_prev == -1 )
     b38:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     b3c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	59 f4       	brne	.+22     	; 0xb5a <__vector_14+0x82>
		{
			_omega_pmB = _omega_from_encB();
     b44:	0e 94 68 04 	call	0x8d0	; 0x8d0 <_omega_from_encB>
     b48:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <_omega_pmB>
     b4c:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <_omega_pmB+0x1>
     b50:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_omega_pmB+0x2>
     b54:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_omega_pmB+0x3>
     b58:	39 c0       	rjmp	.+114    	; 0xbcc <__vector_14+0xf4>
		}
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
     b5a:	8a e0       	ldi	r24, 0x0A	; 10
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	0e 94 0c 0a 	call	0x1418	; 0x1418 <malloc>
     b62:	7c 01       	movw	r14, r24
     b64:	ec 01       	movw	r28, r24
     b66:	8c 01       	movw	r16, r24
     b68:	06 5f       	subi	r16, 0xF6	; 246
     b6a:	1f 4f       	sbci	r17, 0xFF	; 255
			
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
			{
				reads[i] = __read_PM(PMB);
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
     b72:	89 93       	st	Y+, r24
     b74:	99 93       	st	Y+, r25
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
			
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
     b76:	c0 17       	cp	r28, r16
     b78:	d1 07       	cpc	r29, r17
     b7a:	c1 f7       	brne	.-16     	; 0xb6c <__vector_14+0x94>
			{
				reads[i] = __read_PM(PMB);
			}
			// Sort outcome
			_insertion_sort(reads, __PM_SAMPLE_COUNT);
     b7c:	65 e0       	ldi	r22, 0x05	; 5
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	c7 01       	movw	r24, r14
     b82:	0e 94 9e 04 	call	0x93c	; 0x93c <_insertion_sort>
			_pmB_current = reads[(__PM_SAMPLE_COUNT >> 1)];
     b86:	f7 01       	movw	r30, r14
     b88:	84 81       	ldd	r24, Z+4	; 0x04
     b8a:	95 81       	ldd	r25, Z+5	; 0x05
     b8c:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <_pmB_current+0x1>
     b90:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_pmB_current>
			_omega_pmB = __PM_SLOPE * (float)(_pmB_current - _pmB_prev);
     b94:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <_pmB_current>
     b98:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <_pmB_current+0x1>
     b9c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_pmB_prev>
     ba0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_pmB_prev+0x1>
     ba4:	68 1b       	sub	r22, r24
     ba6:	79 0b       	sbc	r23, r25
     ba8:	80 e0       	ldi	r24, 0x00	; 0
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	0e 94 27 08 	call	0x104e	; 0x104e <__floatunsisf>
     bb0:	20 e0       	ldi	r18, 0x00	; 0
     bb2:	30 e0       	ldi	r19, 0x00	; 0
     bb4:	48 e5       	ldi	r20, 0x58	; 88
     bb6:	51 e4       	ldi	r21, 0x41	; 65
     bb8:	0e 94 f3 08 	call	0x11e6	; 0x11e6 <__mulsf3>
     bbc:	60 93 3a 01 	sts	0x013A, r22	; 0x80013a <_omega_pmB>
     bc0:	70 93 3b 01 	sts	0x013B, r23	; 0x80013b <_omega_pmB+0x1>
     bc4:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_omega_pmB+0x2>
     bc8:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <_omega_pmB+0x3>
		}
	}
	_pmB_prev = _pmB_current;
     bcc:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <_pmB_current>
     bd0:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <_pmB_current+0x1>
     bd4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_pmB_prev+0x1>
     bd8:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_pmB_prev>
}
     bdc:	ff 91       	pop	r31
     bde:	ef 91       	pop	r30
     be0:	df 91       	pop	r29
     be2:	cf 91       	pop	r28
     be4:	bf 91       	pop	r27
     be6:	af 91       	pop	r26
     be8:	9f 91       	pop	r25
     bea:	8f 91       	pop	r24
     bec:	7f 91       	pop	r23
     bee:	6f 91       	pop	r22
     bf0:	5f 91       	pop	r21
     bf2:	4f 91       	pop	r20
     bf4:	3f 91       	pop	r19
     bf6:	2f 91       	pop	r18
     bf8:	1f 91       	pop	r17
     bfa:	0f 91       	pop	r16
     bfc:	ff 90       	pop	r15
     bfe:	ef 90       	pop	r14
     c00:	0f 90       	pop	r0
     c02:	0f be       	out	0x3f, r0	; 63
     c04:	0f 90       	pop	r0
     c06:	1f 90       	pop	r1
     c08:	18 95       	reti

00000c0a <_set_pwm_0A>:
 */ 
#include <__pwm__.h>


void _set_pwm_0A(int input)
{
     c0a:	99 23       	and	r25, r25
     c0c:	14 f4       	brge	.+4      	; 0xc12 <_set_pwm_0A+0x8>
     c0e:	80 e0       	ldi	r24, 0x00	; 0
     c10:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR0A = (uint8_t)input;
     c12:	8f 3f       	cpi	r24, 0xFF	; 255
     c14:	91 05       	cpc	r25, r1
     c16:	19 f0       	breq	.+6      	; 0xc1e <_set_pwm_0A+0x14>
     c18:	14 f0       	brlt	.+4      	; 0xc1e <_set_pwm_0A+0x14>
     c1a:	8f ef       	ldi	r24, 0xFF	; 255
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	87 bd       	out	0x27, r24	; 39
     c20:	08 95       	ret

00000c22 <_set_pwm_0B>:
}
void _set_pwm_0B(int input)
{
     c22:	99 23       	and	r25, r25
     c24:	14 f4       	brge	.+4      	; 0xc2a <_set_pwm_0B+0x8>
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	90 e0       	ldi	r25, 0x00	; 0
	if (input > 255)
		{input = 255;}
	else if (input < 0)
		{input = 0;}
		
	OCR0B = (uint8_t)input;
     c2a:	8f 3f       	cpi	r24, 0xFF	; 255
     c2c:	91 05       	cpc	r25, r1
     c2e:	19 f0       	breq	.+6      	; 0xc36 <_set_pwm_0B+0x14>
     c30:	14 f0       	brlt	.+4      	; 0xc36 <_set_pwm_0B+0x14>
     c32:	8f ef       	ldi	r24, 0xFF	; 255
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	88 bd       	out	0x28, r24	; 40
     c38:	08 95       	ret

00000c3a <_set_pwm_1A>:
}
void _set_pwm_1A(int input)
{
     c3a:	99 23       	and	r25, r25
     c3c:	14 f4       	brge	.+4      	; 0xc42 <_set_pwm_1A+0x8>
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1AH = (uint8_t)(input);
     c42:	8f 3f       	cpi	r24, 0xFF	; 255
     c44:	91 05       	cpc	r25, r1
     c46:	19 f0       	breq	.+6      	; 0xc4e <_set_pwm_1A+0x14>
     c48:	14 f0       	brlt	.+4      	; 0xc4e <_set_pwm_1A+0x14>
     c4a:	8f ef       	ldi	r24, 0xFF	; 255
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0;
     c52:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     c56:	08 95       	ret

00000c58 <_set_pwm_1B>:
}
void _set_pwm_1B(int input)
{
     c58:	99 23       	and	r25, r25
     c5a:	14 f4       	brge	.+4      	; 0xc60 <_set_pwm_1B+0x8>
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1BH = (uint8_t)(input);
     c60:	8f 3f       	cpi	r24, 0xFF	; 255
     c62:	91 05       	cpc	r25, r1
     c64:	19 f0       	breq	.+6      	; 0xc6c <_set_pwm_1B+0x14>
     c66:	14 f0       	brlt	.+4      	; 0xc6c <_set_pwm_1B+0x14>
     c68:	8f ef       	ldi	r24, 0xFF	; 255
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
	OCR1BL = 0;
     c70:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     c74:	08 95       	ret

00000c76 <_timer0_init>:
	if ((TIFR0 & (1 << TOV0)) && (TCNT0 < 255))
	{
		_timer0_ovf_cnt++;
	}
	return ((_timer0_ovf_cnt << 8) + TCNT0)/1000;
}
     c76:	84 b5       	in	r24, 0x24	; 36
     c78:	80 6a       	ori	r24, 0xA0	; 160
     c7a:	84 bd       	out	0x24, r24	; 36
     c7c:	84 b5       	in	r24, 0x24	; 36
     c7e:	83 60       	ori	r24, 0x03	; 3
     c80:	84 bd       	out	0x24, r24	; 36
     c82:	85 b5       	in	r24, 0x25	; 37
     c84:	81 60       	ori	r24, 0x01	; 1
     c86:	85 bd       	out	0x25, r24	; 37
     c88:	08 95       	ret

00000c8a <_timer0_enable_ovf>:
     c8a:	ee e6       	ldi	r30, 0x6E	; 110
     c8c:	f0 e0       	ldi	r31, 0x00	; 0
     c8e:	80 81       	ld	r24, Z
     c90:	81 60       	ori	r24, 0x01	; 1
     c92:	80 83       	st	Z, r24
     c94:	08 95       	ret

00000c96 <_micros0>:
     c96:	cf 93       	push	r28
     c98:	df 93       	push	r29
     c9a:	a8 9b       	sbis	0x15, 0	; 21
     c9c:	26 c0       	rjmp	.+76     	; 0xcea <_micros0+0x54>
     c9e:	86 b5       	in	r24, 0x26	; 38
     ca0:	8f 3f       	cpi	r24, 0xFF	; 255
     ca2:	19 f1       	breq	.+70     	; 0xcea <_micros0+0x54>
     ca4:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <_timer0_ovf_cnt>
     ca8:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <_timer0_ovf_cnt+0x1>
     cac:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <_timer0_ovf_cnt+0x2>
     cb0:	50 91 79 01 	lds	r21, 0x0179	; 0x800179 <_timer0_ovf_cnt+0x3>
     cb4:	60 91 7a 01 	lds	r22, 0x017A	; 0x80017a <_timer0_ovf_cnt+0x4>
     cb8:	70 91 7b 01 	lds	r23, 0x017B	; 0x80017b <_timer0_ovf_cnt+0x5>
     cbc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <_timer0_ovf_cnt+0x6>
     cc0:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <_timer0_ovf_cnt+0x7>
     cc4:	a1 e0       	ldi	r26, 0x01	; 1
     cc6:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     cca:	20 93 76 01 	sts	0x0176, r18	; 0x800176 <_timer0_ovf_cnt>
     cce:	30 93 77 01 	sts	0x0177, r19	; 0x800177 <_timer0_ovf_cnt+0x1>
     cd2:	40 93 78 01 	sts	0x0178, r20	; 0x800178 <_timer0_ovf_cnt+0x2>
     cd6:	50 93 79 01 	sts	0x0179, r21	; 0x800179 <_timer0_ovf_cnt+0x3>
     cda:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <_timer0_ovf_cnt+0x4>
     cde:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <_timer0_ovf_cnt+0x5>
     ce2:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <_timer0_ovf_cnt+0x6>
     ce6:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <_timer0_ovf_cnt+0x7>
     cea:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <_timer0_ovf_cnt>
     cee:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <_timer0_ovf_cnt+0x1>
     cf2:	a0 91 78 01 	lds	r26, 0x0178	; 0x800178 <_timer0_ovf_cnt+0x2>
     cf6:	b0 91 79 01 	lds	r27, 0x0179	; 0x800179 <_timer0_ovf_cnt+0x3>
     cfa:	c0 91 7a 01 	lds	r28, 0x017A	; 0x80017a <_timer0_ovf_cnt+0x4>
     cfe:	d0 91 7b 01 	lds	r29, 0x017B	; 0x80017b <_timer0_ovf_cnt+0x5>
     d02:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <_timer0_ovf_cnt+0x6>
     d06:	f0 91 7d 01 	lds	r31, 0x017D	; 0x80017d <_timer0_ovf_cnt+0x7>
     d0a:	26 b5       	in	r18, 0x26	; 38
     d0c:	ba 2f       	mov	r27, r26
     d0e:	a9 2f       	mov	r26, r25
     d10:	98 2f       	mov	r25, r24
     d12:	88 27       	eor	r24, r24
     d14:	bc 01       	movw	r22, r24
     d16:	cd 01       	movw	r24, r26
     d18:	62 0f       	add	r22, r18
     d1a:	71 1d       	adc	r23, r1
     d1c:	81 1d       	adc	r24, r1
     d1e:	91 1d       	adc	r25, r1
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	08 95       	ret

00000d26 <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     d26:	1f 92       	push	r1
     d28:	0f 92       	push	r0
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	0f 92       	push	r0
     d2e:	11 24       	eor	r1, r1
     d30:	2f 93       	push	r18
     d32:	3f 93       	push	r19
     d34:	4f 93       	push	r20
     d36:	5f 93       	push	r21
     d38:	6f 93       	push	r22
     d3a:	7f 93       	push	r23
     d3c:	8f 93       	push	r24
     d3e:	9f 93       	push	r25
     d40:	af 93       	push	r26
	_timer0_ovf_cnt++;
     d42:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <_timer0_ovf_cnt>
     d46:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <_timer0_ovf_cnt+0x1>
     d4a:	40 91 78 01 	lds	r20, 0x0178	; 0x800178 <_timer0_ovf_cnt+0x2>
     d4e:	50 91 79 01 	lds	r21, 0x0179	; 0x800179 <_timer0_ovf_cnt+0x3>
     d52:	60 91 7a 01 	lds	r22, 0x017A	; 0x80017a <_timer0_ovf_cnt+0x4>
     d56:	70 91 7b 01 	lds	r23, 0x017B	; 0x80017b <_timer0_ovf_cnt+0x5>
     d5a:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <_timer0_ovf_cnt+0x6>
     d5e:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <_timer0_ovf_cnt+0x7>
     d62:	a1 e0       	ldi	r26, 0x01	; 1
     d64:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     d68:	20 93 76 01 	sts	0x0176, r18	; 0x800176 <_timer0_ovf_cnt>
     d6c:	30 93 77 01 	sts	0x0177, r19	; 0x800177 <_timer0_ovf_cnt+0x1>
     d70:	40 93 78 01 	sts	0x0178, r20	; 0x800178 <_timer0_ovf_cnt+0x2>
     d74:	50 93 79 01 	sts	0x0179, r21	; 0x800179 <_timer0_ovf_cnt+0x3>
     d78:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <_timer0_ovf_cnt+0x4>
     d7c:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <_timer0_ovf_cnt+0x5>
     d80:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <_timer0_ovf_cnt+0x6>
     d84:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <_timer0_ovf_cnt+0x7>
     d88:	af 91       	pop	r26
     d8a:	9f 91       	pop	r25
     d8c:	8f 91       	pop	r24
     d8e:	7f 91       	pop	r23
     d90:	6f 91       	pop	r22
     d92:	5f 91       	pop	r21
     d94:	4f 91       	pop	r20
     d96:	3f 91       	pop	r19
     d98:	2f 91       	pop	r18
     d9a:	0f 90       	pop	r0
     d9c:	0f be       	out	0x3f, r0	; 63
     d9e:	0f 90       	pop	r0
     da0:	1f 90       	pop	r1
     da2:	18 95       	reti

00000da4 <_timer1_init>:
uint64_t _millis(void)
{
	uint16_t tmr = TCNT1L;
	tmr |= (TCNT1H << 8);
	return _TICK_MS*(tmr + ( _tmr_overflow_count << 16));
}
     da4:	e0 e8       	ldi	r30, 0x80	; 128
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	80 81       	ld	r24, Z
     daa:	80 6a       	ori	r24, 0xA0	; 160
     dac:	80 83       	st	Z, r24
     dae:	80 81       	ld	r24, Z
     db0:	82 60       	ori	r24, 0x02	; 2
     db2:	80 83       	st	Z, r24
     db4:	8f ef       	ldi	r24, 0xFF	; 255
     db6:	9f ef       	ldi	r25, 0xFF	; 255
     db8:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     dbc:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     dc0:	e1 e8       	ldi	r30, 0x81	; 129
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	80 81       	ld	r24, Z
     dc6:	88 61       	ori	r24, 0x18	; 24
     dc8:	80 83       	st	Z, r24
     dca:	80 81       	ld	r24, Z
     dcc:	81 60       	ori	r24, 0x01	; 1
     dce:	80 83       	st	Z, r24
     dd0:	ef e6       	ldi	r30, 0x6F	; 111
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	80 81       	ld	r24, Z
     dd6:	81 60       	ori	r24, 0x01	; 1
     dd8:	80 83       	st	Z, r24
     dda:	08 95       	ret

00000ddc <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     ddc:	1f 92       	push	r1
     dde:	0f 92       	push	r0
     de0:	0f b6       	in	r0, 0x3f	; 63
     de2:	0f 92       	push	r0
     de4:	11 24       	eor	r1, r1
     de6:	2f 93       	push	r18
     de8:	3f 93       	push	r19
     dea:	4f 93       	push	r20
     dec:	5f 93       	push	r21
     dee:	6f 93       	push	r22
     df0:	7f 93       	push	r23
     df2:	8f 93       	push	r24
     df4:	9f 93       	push	r25
     df6:	af 93       	push	r26
	_tmr_overflow_count++;
     df8:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <_tmr_overflow_count>
     dfc:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <_tmr_overflow_count+0x1>
     e00:	40 91 82 01 	lds	r20, 0x0182	; 0x800182 <_tmr_overflow_count+0x2>
     e04:	50 91 83 01 	lds	r21, 0x0183	; 0x800183 <_tmr_overflow_count+0x3>
     e08:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <_tmr_overflow_count+0x4>
     e0c:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <_tmr_overflow_count+0x5>
     e10:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_tmr_overflow_count+0x6>
     e14:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <_tmr_overflow_count+0x7>
     e18:	a1 e0       	ldi	r26, 0x01	; 1
     e1a:	0e 94 9b 09 	call	0x1336	; 0x1336 <__adddi3_s8>
     e1e:	20 93 80 01 	sts	0x0180, r18	; 0x800180 <_tmr_overflow_count>
     e22:	30 93 81 01 	sts	0x0181, r19	; 0x800181 <_tmr_overflow_count+0x1>
     e26:	40 93 82 01 	sts	0x0182, r20	; 0x800182 <_tmr_overflow_count+0x2>
     e2a:	50 93 83 01 	sts	0x0183, r21	; 0x800183 <_tmr_overflow_count+0x3>
     e2e:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <_tmr_overflow_count+0x4>
     e32:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <_tmr_overflow_count+0x5>
     e36:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_tmr_overflow_count+0x6>
     e3a:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_tmr_overflow_count+0x7>
	_controler_flag_A = 1;
     e3e:	81 e0       	ldi	r24, 0x01	; 1
     e40:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <_controler_flag_A>
	_controler_flag_B = 1;
     e44:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <_controler_flag_B>
     e48:	af 91       	pop	r26
     e4a:	9f 91       	pop	r25
     e4c:	8f 91       	pop	r24
     e4e:	7f 91       	pop	r23
     e50:	6f 91       	pop	r22
     e52:	5f 91       	pop	r21
     e54:	4f 91       	pop	r20
     e56:	3f 91       	pop	r19
     e58:	2f 91       	pop	r18
     e5a:	0f 90       	pop	r0
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	0f 90       	pop	r0
     e60:	1f 90       	pop	r1
     e62:	18 95       	reti

00000e64 <_uart_put_char>:
#include <__usart__.h>

static int _uart_put_char(char input, FILE *stream)
{
     e64:	cf 93       	push	r28
     e66:	c8 2f       	mov	r28, r24
	if (input == '\n')
     e68:	8a 30       	cpi	r24, 0x0A	; 10
     e6a:	19 f4       	brne	.+6      	; 0xe72 <_uart_put_char+0xe>
	_uart_put_char('\r', stream);
     e6c:	8d e0       	ldi	r24, 0x0D	; 13
     e6e:	0e 94 32 07 	call	0xe64	; 0xe64 <_uart_put_char>
	
	while(!((UCSR0A >> UDRE0) & 1)); // wait until buffer is ready for data
     e72:	e0 ec       	ldi	r30, 0xC0	; 192
     e74:	f0 e0       	ldi	r31, 0x00	; 0
     e76:	80 81       	ld	r24, Z
     e78:	85 ff       	sbrs	r24, 5
     e7a:	fd cf       	rjmp	.-6      	; 0xe76 <_uart_put_char+0x12>
	UDR0 = input;
     e7c:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
     e80:	80 e0       	ldi	r24, 0x00	; 0
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	cf 91       	pop	r28
     e86:	08 95       	ret

00000e88 <_uart_get_char>:

static int _uart_get_char(FILE *stream)
{
	uint8_t c;
	while(!(UCSR0A&(1<<RXC0)));
     e88:	e0 ec       	ldi	r30, 0xC0	; 192
     e8a:	f0 e0       	ldi	r31, 0x00	; 0
     e8c:	80 81       	ld	r24, Z
     e8e:	88 23       	and	r24, r24
     e90:	ec f7       	brge	.-6      	; 0xe8c <_uart_get_char+0x4>
	c = UDR0;
     e92:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//_uart_put_char(c,stream); // for debug only
	return c;
}
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	08 95       	ret

00000e9a <usart_init>:

void usart_init(void)
{
	UBRR0H = (uint8_t) (BRC >> 8); // baud
     e9a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t) BRC; // baud
     e9e:	8c e0       	ldi	r24, 0x0C	; 12
     ea0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	UCSR0B = (1 << TXEN0) | (1 << RXEN0); // enable rx and tx
     ea4:	88 e1       	ldi	r24, 0x18	; 24
     ea6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // clock
     eaa:	86 e0       	ldi	r24, 0x06	; 6
     eac:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	//UCSR0A |= (1 << U2X0); // double speed
	
	stdin = stdout = &uart_str; // link stdin and stdout to uart
     eb0:	ec e8       	ldi	r30, 0x8C	; 140
     eb2:	f1 e0       	ldi	r31, 0x01	; 1
     eb4:	8c e0       	ldi	r24, 0x0C	; 12
     eb6:	91 e0       	ldi	r25, 0x01	; 1
     eb8:	93 83       	std	Z+3, r25	; 0x03
     eba:	82 83       	std	Z+2, r24	; 0x02
     ebc:	91 83       	std	Z+1, r25	; 0x01
     ebe:	80 83       	st	Z, r24
     ec0:	08 95       	ret

00000ec2 <board_init>:
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
	
	usart_init();
     ec2:	0e 94 4d 07 	call	0xe9a	; 0xe9a <usart_init>
	_adc_init();
     ec6:	0e 94 2e 01 	call	0x25c	; 0x25c <_adc_init>
	_timer1_init();
     eca:	0e 94 d2 06 	call	0xda4	; 0xda4 <_timer1_init>
	_timer0_init();
     ece:	0e 94 3b 06 	call	0xc76	; 0xc76 <_timer0_init>
	_timer0_enable_ovf();
     ed2:	0e 94 45 06 	call	0xc8a	; 0xc8a <_timer0_enable_ovf>
	_interrupt0_enable(_INT_RISING_EDGE);
     ed6:	83 e0       	ldi	r24, 0x03	; 3
     ed8:	0e 94 26 02 	call	0x44c	; 0x44c <_interrupt0_enable>
	_interrupt1_enable(_INT_RISING_EDGE);
     edc:	83 e0       	ldi	r24, 0x03	; 3
     ede:	0e 94 2e 02 	call	0x45c	; 0x45c <_interrupt1_enable>
     ee2:	08 95       	ret

00000ee4 <main>:


int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */
	cli();
     ee4:	f8 94       	cli
	board_init();
     ee6:	0e 94 61 07 	call	0xec2	; 0xec2 <board_init>
	DDRB = 0xFF;
     eea:	8f ef       	ldi	r24, 0xFF	; 255
     eec:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b01100011;
     eee:	83 e6       	ldi	r24, 0x63	; 99
     ef0:	8a b9       	out	0x0a, r24	; 10
	_init_dc_control();
     ef2:	0e 94 c7 01 	call	0x38e	; 0x38e <_init_dc_control>
	sei();
     ef6:	78 94       	sei
	while (1)
	{
		_dc_controller_loop();
     ef8:	0e 94 11 02 	call	0x422	; 0x422 <_dc_controller_loop>
     efc:	fd cf       	rjmp	.-6      	; 0xef8 <main+0x14>

00000efe <__divsf3>:
     efe:	0e 94 93 07 	call	0xf26	; 0xf26 <__divsf3x>
     f02:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__fp_round>
     f06:	0e 94 b2 08 	call	0x1164	; 0x1164 <__fp_pscB>
     f0a:	58 f0       	brcs	.+22     	; 0xf22 <__divsf3+0x24>
     f0c:	0e 94 ab 08 	call	0x1156	; 0x1156 <__fp_pscA>
     f10:	40 f0       	brcs	.+16     	; 0xf22 <__divsf3+0x24>
     f12:	29 f4       	brne	.+10     	; 0xf1e <__divsf3+0x20>
     f14:	5f 3f       	cpi	r21, 0xFF	; 255
     f16:	29 f0       	breq	.+10     	; 0xf22 <__divsf3+0x24>
     f18:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_inf>
     f1c:	51 11       	cpse	r21, r1
     f1e:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__fp_szero>
     f22:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <__fp_nan>

00000f26 <__divsf3x>:
     f26:	0e 94 ca 08 	call	0x1194	; 0x1194 <__fp_split3>
     f2a:	68 f3       	brcs	.-38     	; 0xf06 <__divsf3+0x8>

00000f2c <__divsf3_pse>:
     f2c:	99 23       	and	r25, r25
     f2e:	b1 f3       	breq	.-20     	; 0xf1c <__divsf3+0x1e>
     f30:	55 23       	and	r21, r21
     f32:	91 f3       	breq	.-28     	; 0xf18 <__divsf3+0x1a>
     f34:	95 1b       	sub	r25, r21
     f36:	55 0b       	sbc	r21, r21
     f38:	bb 27       	eor	r27, r27
     f3a:	aa 27       	eor	r26, r26
     f3c:	62 17       	cp	r22, r18
     f3e:	73 07       	cpc	r23, r19
     f40:	84 07       	cpc	r24, r20
     f42:	38 f0       	brcs	.+14     	; 0xf52 <__divsf3_pse+0x26>
     f44:	9f 5f       	subi	r25, 0xFF	; 255
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	22 0f       	add	r18, r18
     f4a:	33 1f       	adc	r19, r19
     f4c:	44 1f       	adc	r20, r20
     f4e:	aa 1f       	adc	r26, r26
     f50:	a9 f3       	breq	.-22     	; 0xf3c <__divsf3_pse+0x10>
     f52:	35 d0       	rcall	.+106    	; 0xfbe <__divsf3_pse+0x92>
     f54:	0e 2e       	mov	r0, r30
     f56:	3a f0       	brmi	.+14     	; 0xf66 <__divsf3_pse+0x3a>
     f58:	e0 e8       	ldi	r30, 0x80	; 128
     f5a:	32 d0       	rcall	.+100    	; 0xfc0 <__divsf3_pse+0x94>
     f5c:	91 50       	subi	r25, 0x01	; 1
     f5e:	50 40       	sbci	r21, 0x00	; 0
     f60:	e6 95       	lsr	r30
     f62:	00 1c       	adc	r0, r0
     f64:	ca f7       	brpl	.-14     	; 0xf58 <__divsf3_pse+0x2c>
     f66:	2b d0       	rcall	.+86     	; 0xfbe <__divsf3_pse+0x92>
     f68:	fe 2f       	mov	r31, r30
     f6a:	29 d0       	rcall	.+82     	; 0xfbe <__divsf3_pse+0x92>
     f6c:	66 0f       	add	r22, r22
     f6e:	77 1f       	adc	r23, r23
     f70:	88 1f       	adc	r24, r24
     f72:	bb 1f       	adc	r27, r27
     f74:	26 17       	cp	r18, r22
     f76:	37 07       	cpc	r19, r23
     f78:	48 07       	cpc	r20, r24
     f7a:	ab 07       	cpc	r26, r27
     f7c:	b0 e8       	ldi	r27, 0x80	; 128
     f7e:	09 f0       	breq	.+2      	; 0xf82 <__divsf3_pse+0x56>
     f80:	bb 0b       	sbc	r27, r27
     f82:	80 2d       	mov	r24, r0
     f84:	bf 01       	movw	r22, r30
     f86:	ff 27       	eor	r31, r31
     f88:	93 58       	subi	r25, 0x83	; 131
     f8a:	5f 4f       	sbci	r21, 0xFF	; 255
     f8c:	3a f0       	brmi	.+14     	; 0xf9c <__divsf3_pse+0x70>
     f8e:	9e 3f       	cpi	r25, 0xFE	; 254
     f90:	51 05       	cpc	r21, r1
     f92:	78 f0       	brcs	.+30     	; 0xfb2 <__divsf3_pse+0x86>
     f94:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_inf>
     f98:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__fp_szero>
     f9c:	5f 3f       	cpi	r21, 0xFF	; 255
     f9e:	e4 f3       	brlt	.-8      	; 0xf98 <__divsf3_pse+0x6c>
     fa0:	98 3e       	cpi	r25, 0xE8	; 232
     fa2:	d4 f3       	brlt	.-12     	; 0xf98 <__divsf3_pse+0x6c>
     fa4:	86 95       	lsr	r24
     fa6:	77 95       	ror	r23
     fa8:	67 95       	ror	r22
     faa:	b7 95       	ror	r27
     fac:	f7 95       	ror	r31
     fae:	9f 5f       	subi	r25, 0xFF	; 255
     fb0:	c9 f7       	brne	.-14     	; 0xfa4 <__divsf3_pse+0x78>
     fb2:	88 0f       	add	r24, r24
     fb4:	91 1d       	adc	r25, r1
     fb6:	96 95       	lsr	r25
     fb8:	87 95       	ror	r24
     fba:	97 f9       	bld	r25, 7
     fbc:	08 95       	ret
     fbe:	e1 e0       	ldi	r30, 0x01	; 1
     fc0:	66 0f       	add	r22, r22
     fc2:	77 1f       	adc	r23, r23
     fc4:	88 1f       	adc	r24, r24
     fc6:	bb 1f       	adc	r27, r27
     fc8:	62 17       	cp	r22, r18
     fca:	73 07       	cpc	r23, r19
     fcc:	84 07       	cpc	r24, r20
     fce:	ba 07       	cpc	r27, r26
     fd0:	20 f0       	brcs	.+8      	; 0xfda <__divsf3_pse+0xae>
     fd2:	62 1b       	sub	r22, r18
     fd4:	73 0b       	sbc	r23, r19
     fd6:	84 0b       	sbc	r24, r20
     fd8:	ba 0b       	sbc	r27, r26
     fda:	ee 1f       	adc	r30, r30
     fdc:	88 f7       	brcc	.-30     	; 0xfc0 <__divsf3_pse+0x94>
     fde:	e0 95       	com	r30
     fe0:	08 95       	ret

00000fe2 <__fixsfsi>:
     fe2:	0e 94 f8 07 	call	0xff0	; 0xff0 <__fixunssfsi>
     fe6:	68 94       	set
     fe8:	b1 11       	cpse	r27, r1
     fea:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__fp_szero>
     fee:	08 95       	ret

00000ff0 <__fixunssfsi>:
     ff0:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <__fp_splitA>
     ff4:	88 f0       	brcs	.+34     	; 0x1018 <__fixunssfsi+0x28>
     ff6:	9f 57       	subi	r25, 0x7F	; 127
     ff8:	98 f0       	brcs	.+38     	; 0x1020 <__fixunssfsi+0x30>
     ffa:	b9 2f       	mov	r27, r25
     ffc:	99 27       	eor	r25, r25
     ffe:	b7 51       	subi	r27, 0x17	; 23
    1000:	b0 f0       	brcs	.+44     	; 0x102e <__fixunssfsi+0x3e>
    1002:	e1 f0       	breq	.+56     	; 0x103c <__fixunssfsi+0x4c>
    1004:	66 0f       	add	r22, r22
    1006:	77 1f       	adc	r23, r23
    1008:	88 1f       	adc	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	1a f0       	brmi	.+6      	; 0x1014 <__fixunssfsi+0x24>
    100e:	ba 95       	dec	r27
    1010:	c9 f7       	brne	.-14     	; 0x1004 <__fixunssfsi+0x14>
    1012:	14 c0       	rjmp	.+40     	; 0x103c <__fixunssfsi+0x4c>
    1014:	b1 30       	cpi	r27, 0x01	; 1
    1016:	91 f0       	breq	.+36     	; 0x103c <__fixunssfsi+0x4c>
    1018:	0e 94 ec 08 	call	0x11d8	; 0x11d8 <__fp_zero>
    101c:	b1 e0       	ldi	r27, 0x01	; 1
    101e:	08 95       	ret
    1020:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__fp_zero>
    1024:	67 2f       	mov	r22, r23
    1026:	78 2f       	mov	r23, r24
    1028:	88 27       	eor	r24, r24
    102a:	b8 5f       	subi	r27, 0xF8	; 248
    102c:	39 f0       	breq	.+14     	; 0x103c <__fixunssfsi+0x4c>
    102e:	b9 3f       	cpi	r27, 0xF9	; 249
    1030:	cc f3       	brlt	.-14     	; 0x1024 <__fixunssfsi+0x34>
    1032:	86 95       	lsr	r24
    1034:	77 95       	ror	r23
    1036:	67 95       	ror	r22
    1038:	b3 95       	inc	r27
    103a:	d9 f7       	brne	.-10     	; 0x1032 <__fixunssfsi+0x42>
    103c:	3e f4       	brtc	.+14     	; 0x104c <__fixunssfsi+0x5c>
    103e:	90 95       	com	r25
    1040:	80 95       	com	r24
    1042:	70 95       	com	r23
    1044:	61 95       	neg	r22
    1046:	7f 4f       	sbci	r23, 0xFF	; 255
    1048:	8f 4f       	sbci	r24, 0xFF	; 255
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	08 95       	ret

0000104e <__floatunsisf>:
    104e:	e8 94       	clt
    1050:	09 c0       	rjmp	.+18     	; 0x1064 <__floatsisf+0x12>

00001052 <__floatsisf>:
    1052:	97 fb       	bst	r25, 7
    1054:	3e f4       	brtc	.+14     	; 0x1064 <__floatsisf+0x12>
    1056:	90 95       	com	r25
    1058:	80 95       	com	r24
    105a:	70 95       	com	r23
    105c:	61 95       	neg	r22
    105e:	7f 4f       	sbci	r23, 0xFF	; 255
    1060:	8f 4f       	sbci	r24, 0xFF	; 255
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	99 23       	and	r25, r25
    1066:	a9 f0       	breq	.+42     	; 0x1092 <__floatsisf+0x40>
    1068:	f9 2f       	mov	r31, r25
    106a:	96 e9       	ldi	r25, 0x96	; 150
    106c:	bb 27       	eor	r27, r27
    106e:	93 95       	inc	r25
    1070:	f6 95       	lsr	r31
    1072:	87 95       	ror	r24
    1074:	77 95       	ror	r23
    1076:	67 95       	ror	r22
    1078:	b7 95       	ror	r27
    107a:	f1 11       	cpse	r31, r1
    107c:	f8 cf       	rjmp	.-16     	; 0x106e <__floatsisf+0x1c>
    107e:	fa f4       	brpl	.+62     	; 0x10be <__floatsisf+0x6c>
    1080:	bb 0f       	add	r27, r27
    1082:	11 f4       	brne	.+4      	; 0x1088 <__floatsisf+0x36>
    1084:	60 ff       	sbrs	r22, 0
    1086:	1b c0       	rjmp	.+54     	; 0x10be <__floatsisf+0x6c>
    1088:	6f 5f       	subi	r22, 0xFF	; 255
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	8f 4f       	sbci	r24, 0xFF	; 255
    108e:	9f 4f       	sbci	r25, 0xFF	; 255
    1090:	16 c0       	rjmp	.+44     	; 0x10be <__floatsisf+0x6c>
    1092:	88 23       	and	r24, r24
    1094:	11 f0       	breq	.+4      	; 0x109a <__floatsisf+0x48>
    1096:	96 e9       	ldi	r25, 0x96	; 150
    1098:	11 c0       	rjmp	.+34     	; 0x10bc <__floatsisf+0x6a>
    109a:	77 23       	and	r23, r23
    109c:	21 f0       	breq	.+8      	; 0x10a6 <__floatsisf+0x54>
    109e:	9e e8       	ldi	r25, 0x8E	; 142
    10a0:	87 2f       	mov	r24, r23
    10a2:	76 2f       	mov	r23, r22
    10a4:	05 c0       	rjmp	.+10     	; 0x10b0 <__floatsisf+0x5e>
    10a6:	66 23       	and	r22, r22
    10a8:	71 f0       	breq	.+28     	; 0x10c6 <__floatsisf+0x74>
    10aa:	96 e8       	ldi	r25, 0x86	; 134
    10ac:	86 2f       	mov	r24, r22
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	60 e0       	ldi	r22, 0x00	; 0
    10b2:	2a f0       	brmi	.+10     	; 0x10be <__floatsisf+0x6c>
    10b4:	9a 95       	dec	r25
    10b6:	66 0f       	add	r22, r22
    10b8:	77 1f       	adc	r23, r23
    10ba:	88 1f       	adc	r24, r24
    10bc:	da f7       	brpl	.-10     	; 0x10b4 <__floatsisf+0x62>
    10be:	88 0f       	add	r24, r24
    10c0:	96 95       	lsr	r25
    10c2:	87 95       	ror	r24
    10c4:	97 f9       	bld	r25, 7
    10c6:	08 95       	ret

000010c8 <__floatundisf>:
    10c8:	e8 94       	clt

000010ca <__fp_di2sf>:
    10ca:	f9 2f       	mov	r31, r25
    10cc:	96 eb       	ldi	r25, 0xB6	; 182
    10ce:	ff 23       	and	r31, r31
    10d0:	81 f0       	breq	.+32     	; 0x10f2 <__fp_di2sf+0x28>
    10d2:	12 16       	cp	r1, r18
    10d4:	13 06       	cpc	r1, r19
    10d6:	14 06       	cpc	r1, r20
    10d8:	44 0b       	sbc	r20, r20
    10da:	93 95       	inc	r25
    10dc:	f6 95       	lsr	r31
    10de:	87 95       	ror	r24
    10e0:	77 95       	ror	r23
    10e2:	67 95       	ror	r22
    10e4:	57 95       	ror	r21
    10e6:	40 40       	sbci	r20, 0x00	; 0
    10e8:	ff 23       	and	r31, r31
    10ea:	b9 f7       	brne	.-18     	; 0x10da <__fp_di2sf+0x10>
    10ec:	1b c0       	rjmp	.+54     	; 0x1124 <__fp_di2sf+0x5a>
    10ee:	99 27       	eor	r25, r25
    10f0:	08 95       	ret
    10f2:	88 23       	and	r24, r24
    10f4:	51 f4       	brne	.+20     	; 0x110a <__fp_di2sf+0x40>
    10f6:	98 50       	subi	r25, 0x08	; 8
    10f8:	d2 f7       	brpl	.-12     	; 0x10ee <__fp_di2sf+0x24>
    10fa:	87 2b       	or	r24, r23
    10fc:	76 2f       	mov	r23, r22
    10fe:	65 2f       	mov	r22, r21
    1100:	54 2f       	mov	r21, r20
    1102:	43 2f       	mov	r20, r19
    1104:	32 2f       	mov	r19, r18
    1106:	20 e0       	ldi	r18, 0x00	; 0
    1108:	b1 f3       	breq	.-20     	; 0x10f6 <__fp_di2sf+0x2c>
    110a:	12 16       	cp	r1, r18
    110c:	13 06       	cpc	r1, r19
    110e:	14 06       	cpc	r1, r20
    1110:	44 0b       	sbc	r20, r20
    1112:	88 23       	and	r24, r24
    1114:	3a f0       	brmi	.+14     	; 0x1124 <__fp_di2sf+0x5a>
    1116:	9a 95       	dec	r25
    1118:	44 0f       	add	r20, r20
    111a:	55 1f       	adc	r21, r21
    111c:	66 1f       	adc	r22, r22
    111e:	77 1f       	adc	r23, r23
    1120:	88 1f       	adc	r24, r24
    1122:	ca f7       	brpl	.-14     	; 0x1116 <__fp_di2sf+0x4c>
    1124:	55 23       	and	r21, r21
    1126:	4a f4       	brpl	.+18     	; 0x113a <__fp_di2sf+0x70>
    1128:	44 0f       	add	r20, r20
    112a:	55 1f       	adc	r21, r21
    112c:	11 f4       	brne	.+4      	; 0x1132 <__fp_di2sf+0x68>
    112e:	60 ff       	sbrs	r22, 0
    1130:	04 c0       	rjmp	.+8      	; 0x113a <__fp_di2sf+0x70>
    1132:	6f 5f       	subi	r22, 0xFF	; 255
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	8f 4f       	sbci	r24, 0xFF	; 255
    1138:	9f 4f       	sbci	r25, 0xFF	; 255
    113a:	88 0f       	add	r24, r24
    113c:	96 95       	lsr	r25
    113e:	87 95       	ror	r24
    1140:	97 f9       	bld	r25, 7
    1142:	08 95       	ret

00001144 <__fp_inf>:
    1144:	97 f9       	bld	r25, 7
    1146:	9f 67       	ori	r25, 0x7F	; 127
    1148:	80 e8       	ldi	r24, 0x80	; 128
    114a:	70 e0       	ldi	r23, 0x00	; 0
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	08 95       	ret

00001150 <__fp_nan>:
    1150:	9f ef       	ldi	r25, 0xFF	; 255
    1152:	80 ec       	ldi	r24, 0xC0	; 192
    1154:	08 95       	ret

00001156 <__fp_pscA>:
    1156:	00 24       	eor	r0, r0
    1158:	0a 94       	dec	r0
    115a:	16 16       	cp	r1, r22
    115c:	17 06       	cpc	r1, r23
    115e:	18 06       	cpc	r1, r24
    1160:	09 06       	cpc	r0, r25
    1162:	08 95       	ret

00001164 <__fp_pscB>:
    1164:	00 24       	eor	r0, r0
    1166:	0a 94       	dec	r0
    1168:	12 16       	cp	r1, r18
    116a:	13 06       	cpc	r1, r19
    116c:	14 06       	cpc	r1, r20
    116e:	05 06       	cpc	r0, r21
    1170:	08 95       	ret

00001172 <__fp_round>:
    1172:	09 2e       	mov	r0, r25
    1174:	03 94       	inc	r0
    1176:	00 0c       	add	r0, r0
    1178:	11 f4       	brne	.+4      	; 0x117e <__fp_round+0xc>
    117a:	88 23       	and	r24, r24
    117c:	52 f0       	brmi	.+20     	; 0x1192 <__fp_round+0x20>
    117e:	bb 0f       	add	r27, r27
    1180:	40 f4       	brcc	.+16     	; 0x1192 <__fp_round+0x20>
    1182:	bf 2b       	or	r27, r31
    1184:	11 f4       	brne	.+4      	; 0x118a <__fp_round+0x18>
    1186:	60 ff       	sbrs	r22, 0
    1188:	04 c0       	rjmp	.+8      	; 0x1192 <__fp_round+0x20>
    118a:	6f 5f       	subi	r22, 0xFF	; 255
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	8f 4f       	sbci	r24, 0xFF	; 255
    1190:	9f 4f       	sbci	r25, 0xFF	; 255
    1192:	08 95       	ret

00001194 <__fp_split3>:
    1194:	57 fd       	sbrc	r21, 7
    1196:	90 58       	subi	r25, 0x80	; 128
    1198:	44 0f       	add	r20, r20
    119a:	55 1f       	adc	r21, r21
    119c:	59 f0       	breq	.+22     	; 0x11b4 <__fp_splitA+0x10>
    119e:	5f 3f       	cpi	r21, 0xFF	; 255
    11a0:	71 f0       	breq	.+28     	; 0x11be <__fp_splitA+0x1a>
    11a2:	47 95       	ror	r20

000011a4 <__fp_splitA>:
    11a4:	88 0f       	add	r24, r24
    11a6:	97 fb       	bst	r25, 7
    11a8:	99 1f       	adc	r25, r25
    11aa:	61 f0       	breq	.+24     	; 0x11c4 <__fp_splitA+0x20>
    11ac:	9f 3f       	cpi	r25, 0xFF	; 255
    11ae:	79 f0       	breq	.+30     	; 0x11ce <__fp_splitA+0x2a>
    11b0:	87 95       	ror	r24
    11b2:	08 95       	ret
    11b4:	12 16       	cp	r1, r18
    11b6:	13 06       	cpc	r1, r19
    11b8:	14 06       	cpc	r1, r20
    11ba:	55 1f       	adc	r21, r21
    11bc:	f2 cf       	rjmp	.-28     	; 0x11a2 <__fp_split3+0xe>
    11be:	46 95       	lsr	r20
    11c0:	f1 df       	rcall	.-30     	; 0x11a4 <__fp_splitA>
    11c2:	08 c0       	rjmp	.+16     	; 0x11d4 <__fp_splitA+0x30>
    11c4:	16 16       	cp	r1, r22
    11c6:	17 06       	cpc	r1, r23
    11c8:	18 06       	cpc	r1, r24
    11ca:	99 1f       	adc	r25, r25
    11cc:	f1 cf       	rjmp	.-30     	; 0x11b0 <__fp_splitA+0xc>
    11ce:	86 95       	lsr	r24
    11d0:	71 05       	cpc	r23, r1
    11d2:	61 05       	cpc	r22, r1
    11d4:	08 94       	sec
    11d6:	08 95       	ret

000011d8 <__fp_zero>:
    11d8:	e8 94       	clt

000011da <__fp_szero>:
    11da:	bb 27       	eor	r27, r27
    11dc:	66 27       	eor	r22, r22
    11de:	77 27       	eor	r23, r23
    11e0:	cb 01       	movw	r24, r22
    11e2:	97 f9       	bld	r25, 7
    11e4:	08 95       	ret

000011e6 <__mulsf3>:
    11e6:	0e 94 06 09 	call	0x120c	; 0x120c <__mulsf3x>
    11ea:	0c 94 b9 08 	jmp	0x1172	; 0x1172 <__fp_round>
    11ee:	0e 94 ab 08 	call	0x1156	; 0x1156 <__fp_pscA>
    11f2:	38 f0       	brcs	.+14     	; 0x1202 <__mulsf3+0x1c>
    11f4:	0e 94 b2 08 	call	0x1164	; 0x1164 <__fp_pscB>
    11f8:	20 f0       	brcs	.+8      	; 0x1202 <__mulsf3+0x1c>
    11fa:	95 23       	and	r25, r21
    11fc:	11 f0       	breq	.+4      	; 0x1202 <__mulsf3+0x1c>
    11fe:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_inf>
    1202:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <__fp_nan>
    1206:	11 24       	eor	r1, r1
    1208:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__fp_szero>

0000120c <__mulsf3x>:
    120c:	0e 94 ca 08 	call	0x1194	; 0x1194 <__fp_split3>
    1210:	70 f3       	brcs	.-36     	; 0x11ee <__mulsf3+0x8>

00001212 <__mulsf3_pse>:
    1212:	95 9f       	mul	r25, r21
    1214:	c1 f3       	breq	.-16     	; 0x1206 <__mulsf3+0x20>
    1216:	95 0f       	add	r25, r21
    1218:	50 e0       	ldi	r21, 0x00	; 0
    121a:	55 1f       	adc	r21, r21
    121c:	62 9f       	mul	r22, r18
    121e:	f0 01       	movw	r30, r0
    1220:	72 9f       	mul	r23, r18
    1222:	bb 27       	eor	r27, r27
    1224:	f0 0d       	add	r31, r0
    1226:	b1 1d       	adc	r27, r1
    1228:	63 9f       	mul	r22, r19
    122a:	aa 27       	eor	r26, r26
    122c:	f0 0d       	add	r31, r0
    122e:	b1 1d       	adc	r27, r1
    1230:	aa 1f       	adc	r26, r26
    1232:	64 9f       	mul	r22, r20
    1234:	66 27       	eor	r22, r22
    1236:	b0 0d       	add	r27, r0
    1238:	a1 1d       	adc	r26, r1
    123a:	66 1f       	adc	r22, r22
    123c:	82 9f       	mul	r24, r18
    123e:	22 27       	eor	r18, r18
    1240:	b0 0d       	add	r27, r0
    1242:	a1 1d       	adc	r26, r1
    1244:	62 1f       	adc	r22, r18
    1246:	73 9f       	mul	r23, r19
    1248:	b0 0d       	add	r27, r0
    124a:	a1 1d       	adc	r26, r1
    124c:	62 1f       	adc	r22, r18
    124e:	83 9f       	mul	r24, r19
    1250:	a0 0d       	add	r26, r0
    1252:	61 1d       	adc	r22, r1
    1254:	22 1f       	adc	r18, r18
    1256:	74 9f       	mul	r23, r20
    1258:	33 27       	eor	r19, r19
    125a:	a0 0d       	add	r26, r0
    125c:	61 1d       	adc	r22, r1
    125e:	23 1f       	adc	r18, r19
    1260:	84 9f       	mul	r24, r20
    1262:	60 0d       	add	r22, r0
    1264:	21 1d       	adc	r18, r1
    1266:	82 2f       	mov	r24, r18
    1268:	76 2f       	mov	r23, r22
    126a:	6a 2f       	mov	r22, r26
    126c:	11 24       	eor	r1, r1
    126e:	9f 57       	subi	r25, 0x7F	; 127
    1270:	50 40       	sbci	r21, 0x00	; 0
    1272:	9a f0       	brmi	.+38     	; 0x129a <__mulsf3_pse+0x88>
    1274:	f1 f0       	breq	.+60     	; 0x12b2 <__mulsf3_pse+0xa0>
    1276:	88 23       	and	r24, r24
    1278:	4a f0       	brmi	.+18     	; 0x128c <__mulsf3_pse+0x7a>
    127a:	ee 0f       	add	r30, r30
    127c:	ff 1f       	adc	r31, r31
    127e:	bb 1f       	adc	r27, r27
    1280:	66 1f       	adc	r22, r22
    1282:	77 1f       	adc	r23, r23
    1284:	88 1f       	adc	r24, r24
    1286:	91 50       	subi	r25, 0x01	; 1
    1288:	50 40       	sbci	r21, 0x00	; 0
    128a:	a9 f7       	brne	.-22     	; 0x1276 <__mulsf3_pse+0x64>
    128c:	9e 3f       	cpi	r25, 0xFE	; 254
    128e:	51 05       	cpc	r21, r1
    1290:	80 f0       	brcs	.+32     	; 0x12b2 <__mulsf3_pse+0xa0>
    1292:	0c 94 a2 08 	jmp	0x1144	; 0x1144 <__fp_inf>
    1296:	0c 94 ed 08 	jmp	0x11da	; 0x11da <__fp_szero>
    129a:	5f 3f       	cpi	r21, 0xFF	; 255
    129c:	e4 f3       	brlt	.-8      	; 0x1296 <__mulsf3_pse+0x84>
    129e:	98 3e       	cpi	r25, 0xE8	; 232
    12a0:	d4 f3       	brlt	.-12     	; 0x1296 <__mulsf3_pse+0x84>
    12a2:	86 95       	lsr	r24
    12a4:	77 95       	ror	r23
    12a6:	67 95       	ror	r22
    12a8:	b7 95       	ror	r27
    12aa:	f7 95       	ror	r31
    12ac:	e7 95       	ror	r30
    12ae:	9f 5f       	subi	r25, 0xFF	; 255
    12b0:	c1 f7       	brne	.-16     	; 0x12a2 <__mulsf3_pse+0x90>
    12b2:	fe 2b       	or	r31, r30
    12b4:	88 0f       	add	r24, r24
    12b6:	91 1d       	adc	r25, r1
    12b8:	96 95       	lsr	r25
    12ba:	87 95       	ror	r24
    12bc:	97 f9       	bld	r25, 7
    12be:	08 95       	ret

000012c0 <__divmodhi4>:
    12c0:	97 fb       	bst	r25, 7
    12c2:	07 2e       	mov	r0, r23
    12c4:	16 f4       	brtc	.+4      	; 0x12ca <__divmodhi4+0xa>
    12c6:	00 94       	com	r0
    12c8:	07 d0       	rcall	.+14     	; 0x12d8 <__divmodhi4_neg1>
    12ca:	77 fd       	sbrc	r23, 7
    12cc:	09 d0       	rcall	.+18     	; 0x12e0 <__divmodhi4_neg2>
    12ce:	0e 94 bc 09 	call	0x1378	; 0x1378 <__udivmodhi4>
    12d2:	07 fc       	sbrc	r0, 7
    12d4:	05 d0       	rcall	.+10     	; 0x12e0 <__divmodhi4_neg2>
    12d6:	3e f4       	brtc	.+14     	; 0x12e6 <__divmodhi4_exit>

000012d8 <__divmodhi4_neg1>:
    12d8:	90 95       	com	r25
    12da:	81 95       	neg	r24
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	08 95       	ret

000012e0 <__divmodhi4_neg2>:
    12e0:	70 95       	com	r23
    12e2:	61 95       	neg	r22
    12e4:	7f 4f       	sbci	r23, 0xFF	; 255

000012e6 <__divmodhi4_exit>:
    12e6:	08 95       	ret

000012e8 <__divmodsi4>:
    12e8:	05 2e       	mov	r0, r21
    12ea:	97 fb       	bst	r25, 7
    12ec:	1e f4       	brtc	.+6      	; 0x12f4 <__divmodsi4+0xc>
    12ee:	00 94       	com	r0
    12f0:	0e 94 8b 09 	call	0x1316	; 0x1316 <__negsi2>
    12f4:	57 fd       	sbrc	r21, 7
    12f6:	07 d0       	rcall	.+14     	; 0x1306 <__divmodsi4_neg2>
    12f8:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <__udivmodsi4>
    12fc:	07 fc       	sbrc	r0, 7
    12fe:	03 d0       	rcall	.+6      	; 0x1306 <__divmodsi4_neg2>
    1300:	4e f4       	brtc	.+18     	; 0x1314 <__divmodsi4_exit>
    1302:	0c 94 8b 09 	jmp	0x1316	; 0x1316 <__negsi2>

00001306 <__divmodsi4_neg2>:
    1306:	50 95       	com	r21
    1308:	40 95       	com	r20
    130a:	30 95       	com	r19
    130c:	21 95       	neg	r18
    130e:	3f 4f       	sbci	r19, 0xFF	; 255
    1310:	4f 4f       	sbci	r20, 0xFF	; 255
    1312:	5f 4f       	sbci	r21, 0xFF	; 255

00001314 <__divmodsi4_exit>:
    1314:	08 95       	ret

00001316 <__negsi2>:
    1316:	90 95       	com	r25
    1318:	80 95       	com	r24
    131a:	70 95       	com	r23
    131c:	61 95       	neg	r22
    131e:	7f 4f       	sbci	r23, 0xFF	; 255
    1320:	8f 4f       	sbci	r24, 0xFF	; 255
    1322:	9f 4f       	sbci	r25, 0xFF	; 255
    1324:	08 95       	ret

00001326 <__mulshisi3>:
    1326:	b7 ff       	sbrs	r27, 7
    1328:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__muluhisi3>

0000132c <__mulohisi3>:
    132c:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__muluhisi3>
    1330:	82 1b       	sub	r24, r18
    1332:	93 0b       	sbc	r25, r19
    1334:	08 95       	ret

00001336 <__adddi3_s8>:
    1336:	00 24       	eor	r0, r0
    1338:	a7 fd       	sbrc	r26, 7
    133a:	00 94       	com	r0
    133c:	2a 0f       	add	r18, r26
    133e:	30 1d       	adc	r19, r0
    1340:	40 1d       	adc	r20, r0
    1342:	50 1d       	adc	r21, r0
    1344:	60 1d       	adc	r22, r0
    1346:	70 1d       	adc	r23, r0
    1348:	80 1d       	adc	r24, r0
    134a:	90 1d       	adc	r25, r0
    134c:	08 95       	ret

0000134e <__subdi3>:
    134e:	2a 19       	sub	r18, r10
    1350:	3b 09       	sbc	r19, r11
    1352:	4c 09       	sbc	r20, r12
    1354:	5d 09       	sbc	r21, r13
    1356:	6e 09       	sbc	r22, r14
    1358:	7f 09       	sbc	r23, r15
    135a:	80 0b       	sbc	r24, r16
    135c:	91 0b       	sbc	r25, r17
    135e:	08 95       	ret

00001360 <__cmpdi2_s8>:
    1360:	00 24       	eor	r0, r0
    1362:	a7 fd       	sbrc	r26, 7
    1364:	00 94       	com	r0
    1366:	2a 17       	cp	r18, r26
    1368:	30 05       	cpc	r19, r0
    136a:	40 05       	cpc	r20, r0
    136c:	50 05       	cpc	r21, r0
    136e:	60 05       	cpc	r22, r0
    1370:	70 05       	cpc	r23, r0
    1372:	80 05       	cpc	r24, r0
    1374:	90 05       	cpc	r25, r0
    1376:	08 95       	ret

00001378 <__udivmodhi4>:
    1378:	aa 1b       	sub	r26, r26
    137a:	bb 1b       	sub	r27, r27
    137c:	51 e1       	ldi	r21, 0x11	; 17
    137e:	07 c0       	rjmp	.+14     	; 0x138e <__udivmodhi4_ep>

00001380 <__udivmodhi4_loop>:
    1380:	aa 1f       	adc	r26, r26
    1382:	bb 1f       	adc	r27, r27
    1384:	a6 17       	cp	r26, r22
    1386:	b7 07       	cpc	r27, r23
    1388:	10 f0       	brcs	.+4      	; 0x138e <__udivmodhi4_ep>
    138a:	a6 1b       	sub	r26, r22
    138c:	b7 0b       	sbc	r27, r23

0000138e <__udivmodhi4_ep>:
    138e:	88 1f       	adc	r24, r24
    1390:	99 1f       	adc	r25, r25
    1392:	5a 95       	dec	r21
    1394:	a9 f7       	brne	.-22     	; 0x1380 <__udivmodhi4_loop>
    1396:	80 95       	com	r24
    1398:	90 95       	com	r25
    139a:	bc 01       	movw	r22, r24
    139c:	cd 01       	movw	r24, r26
    139e:	08 95       	ret

000013a0 <__udivmodsi4>:
    13a0:	a1 e2       	ldi	r26, 0x21	; 33
    13a2:	1a 2e       	mov	r1, r26
    13a4:	aa 1b       	sub	r26, r26
    13a6:	bb 1b       	sub	r27, r27
    13a8:	fd 01       	movw	r30, r26
    13aa:	0d c0       	rjmp	.+26     	; 0x13c6 <__udivmodsi4_ep>

000013ac <__udivmodsi4_loop>:
    13ac:	aa 1f       	adc	r26, r26
    13ae:	bb 1f       	adc	r27, r27
    13b0:	ee 1f       	adc	r30, r30
    13b2:	ff 1f       	adc	r31, r31
    13b4:	a2 17       	cp	r26, r18
    13b6:	b3 07       	cpc	r27, r19
    13b8:	e4 07       	cpc	r30, r20
    13ba:	f5 07       	cpc	r31, r21
    13bc:	20 f0       	brcs	.+8      	; 0x13c6 <__udivmodsi4_ep>
    13be:	a2 1b       	sub	r26, r18
    13c0:	b3 0b       	sbc	r27, r19
    13c2:	e4 0b       	sbc	r30, r20
    13c4:	f5 0b       	sbc	r31, r21

000013c6 <__udivmodsi4_ep>:
    13c6:	66 1f       	adc	r22, r22
    13c8:	77 1f       	adc	r23, r23
    13ca:	88 1f       	adc	r24, r24
    13cc:	99 1f       	adc	r25, r25
    13ce:	1a 94       	dec	r1
    13d0:	69 f7       	brne	.-38     	; 0x13ac <__udivmodsi4_loop>
    13d2:	60 95       	com	r22
    13d4:	70 95       	com	r23
    13d6:	80 95       	com	r24
    13d8:	90 95       	com	r25
    13da:	9b 01       	movw	r18, r22
    13dc:	ac 01       	movw	r20, r24
    13de:	bd 01       	movw	r22, r26
    13e0:	cf 01       	movw	r24, r30
    13e2:	08 95       	ret

000013e4 <__muluhisi3>:
    13e4:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__umulhisi3>
    13e8:	a5 9f       	mul	r26, r21
    13ea:	90 0d       	add	r25, r0
    13ec:	b4 9f       	mul	r27, r20
    13ee:	90 0d       	add	r25, r0
    13f0:	a4 9f       	mul	r26, r20
    13f2:	80 0d       	add	r24, r0
    13f4:	91 1d       	adc	r25, r1
    13f6:	11 24       	eor	r1, r1
    13f8:	08 95       	ret

000013fa <__umulhisi3>:
    13fa:	a2 9f       	mul	r26, r18
    13fc:	b0 01       	movw	r22, r0
    13fe:	b3 9f       	mul	r27, r19
    1400:	c0 01       	movw	r24, r0
    1402:	a3 9f       	mul	r26, r19
    1404:	70 0d       	add	r23, r0
    1406:	81 1d       	adc	r24, r1
    1408:	11 24       	eor	r1, r1
    140a:	91 1d       	adc	r25, r1
    140c:	b2 9f       	mul	r27, r18
    140e:	70 0d       	add	r23, r0
    1410:	81 1d       	adc	r24, r1
    1412:	11 24       	eor	r1, r1
    1414:	91 1d       	adc	r25, r1
    1416:	08 95       	ret

00001418 <malloc>:
    1418:	0f 93       	push	r16
    141a:	1f 93       	push	r17
    141c:	cf 93       	push	r28
    141e:	df 93       	push	r29
    1420:	82 30       	cpi	r24, 0x02	; 2
    1422:	91 05       	cpc	r25, r1
    1424:	10 f4       	brcc	.+4      	; 0x142a <malloc+0x12>
    1426:	82 e0       	ldi	r24, 0x02	; 2
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	e0 91 8a 01 	lds	r30, 0x018A	; 0x80018a <__flp>
    142e:	f0 91 8b 01 	lds	r31, 0x018B	; 0x80018b <__flp+0x1>
    1432:	20 e0       	ldi	r18, 0x00	; 0
    1434:	30 e0       	ldi	r19, 0x00	; 0
    1436:	a0 e0       	ldi	r26, 0x00	; 0
    1438:	b0 e0       	ldi	r27, 0x00	; 0
    143a:	30 97       	sbiw	r30, 0x00	; 0
    143c:	19 f1       	breq	.+70     	; 0x1484 <malloc+0x6c>
    143e:	40 81       	ld	r20, Z
    1440:	51 81       	ldd	r21, Z+1	; 0x01
    1442:	02 81       	ldd	r16, Z+2	; 0x02
    1444:	13 81       	ldd	r17, Z+3	; 0x03
    1446:	48 17       	cp	r20, r24
    1448:	59 07       	cpc	r21, r25
    144a:	c8 f0       	brcs	.+50     	; 0x147e <malloc+0x66>
    144c:	84 17       	cp	r24, r20
    144e:	95 07       	cpc	r25, r21
    1450:	69 f4       	brne	.+26     	; 0x146c <malloc+0x54>
    1452:	10 97       	sbiw	r26, 0x00	; 0
    1454:	31 f0       	breq	.+12     	; 0x1462 <malloc+0x4a>
    1456:	12 96       	adiw	r26, 0x02	; 2
    1458:	0c 93       	st	X, r16
    145a:	12 97       	sbiw	r26, 0x02	; 2
    145c:	13 96       	adiw	r26, 0x03	; 3
    145e:	1c 93       	st	X, r17
    1460:	27 c0       	rjmp	.+78     	; 0x14b0 <malloc+0x98>
    1462:	00 93 8a 01 	sts	0x018A, r16	; 0x80018a <__flp>
    1466:	10 93 8b 01 	sts	0x018B, r17	; 0x80018b <__flp+0x1>
    146a:	22 c0       	rjmp	.+68     	; 0x14b0 <malloc+0x98>
    146c:	21 15       	cp	r18, r1
    146e:	31 05       	cpc	r19, r1
    1470:	19 f0       	breq	.+6      	; 0x1478 <malloc+0x60>
    1472:	42 17       	cp	r20, r18
    1474:	53 07       	cpc	r21, r19
    1476:	18 f4       	brcc	.+6      	; 0x147e <malloc+0x66>
    1478:	9a 01       	movw	r18, r20
    147a:	bd 01       	movw	r22, r26
    147c:	ef 01       	movw	r28, r30
    147e:	df 01       	movw	r26, r30
    1480:	f8 01       	movw	r30, r16
    1482:	db cf       	rjmp	.-74     	; 0x143a <malloc+0x22>
    1484:	21 15       	cp	r18, r1
    1486:	31 05       	cpc	r19, r1
    1488:	f9 f0       	breq	.+62     	; 0x14c8 <malloc+0xb0>
    148a:	28 1b       	sub	r18, r24
    148c:	39 0b       	sbc	r19, r25
    148e:	24 30       	cpi	r18, 0x04	; 4
    1490:	31 05       	cpc	r19, r1
    1492:	80 f4       	brcc	.+32     	; 0x14b4 <malloc+0x9c>
    1494:	8a 81       	ldd	r24, Y+2	; 0x02
    1496:	9b 81       	ldd	r25, Y+3	; 0x03
    1498:	61 15       	cp	r22, r1
    149a:	71 05       	cpc	r23, r1
    149c:	21 f0       	breq	.+8      	; 0x14a6 <malloc+0x8e>
    149e:	fb 01       	movw	r30, r22
    14a0:	93 83       	std	Z+3, r25	; 0x03
    14a2:	82 83       	std	Z+2, r24	; 0x02
    14a4:	04 c0       	rjmp	.+8      	; 0x14ae <malloc+0x96>
    14a6:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <__flp+0x1>
    14aa:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <__flp>
    14ae:	fe 01       	movw	r30, r28
    14b0:	32 96       	adiw	r30, 0x02	; 2
    14b2:	44 c0       	rjmp	.+136    	; 0x153c <malloc+0x124>
    14b4:	fe 01       	movw	r30, r28
    14b6:	e2 0f       	add	r30, r18
    14b8:	f3 1f       	adc	r31, r19
    14ba:	81 93       	st	Z+, r24
    14bc:	91 93       	st	Z+, r25
    14be:	22 50       	subi	r18, 0x02	; 2
    14c0:	31 09       	sbc	r19, r1
    14c2:	39 83       	std	Y+1, r19	; 0x01
    14c4:	28 83       	st	Y, r18
    14c6:	3a c0       	rjmp	.+116    	; 0x153c <malloc+0x124>
    14c8:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <__brkval>
    14cc:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <__brkval+0x1>
    14d0:	23 2b       	or	r18, r19
    14d2:	41 f4       	brne	.+16     	; 0x14e4 <malloc+0xcc>
    14d4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    14d8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    14dc:	30 93 89 01 	sts	0x0189, r19	; 0x800189 <__brkval+0x1>
    14e0:	20 93 88 01 	sts	0x0188, r18	; 0x800188 <__brkval>
    14e4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    14e8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    14ec:	21 15       	cp	r18, r1
    14ee:	31 05       	cpc	r19, r1
    14f0:	41 f4       	brne	.+16     	; 0x1502 <malloc+0xea>
    14f2:	2d b7       	in	r18, 0x3d	; 61
    14f4:	3e b7       	in	r19, 0x3e	; 62
    14f6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    14fa:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    14fe:	24 1b       	sub	r18, r20
    1500:	35 0b       	sbc	r19, r21
    1502:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <__brkval>
    1506:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <__brkval+0x1>
    150a:	e2 17       	cp	r30, r18
    150c:	f3 07       	cpc	r31, r19
    150e:	a0 f4       	brcc	.+40     	; 0x1538 <malloc+0x120>
    1510:	2e 1b       	sub	r18, r30
    1512:	3f 0b       	sbc	r19, r31
    1514:	28 17       	cp	r18, r24
    1516:	39 07       	cpc	r19, r25
    1518:	78 f0       	brcs	.+30     	; 0x1538 <malloc+0x120>
    151a:	ac 01       	movw	r20, r24
    151c:	4e 5f       	subi	r20, 0xFE	; 254
    151e:	5f 4f       	sbci	r21, 0xFF	; 255
    1520:	24 17       	cp	r18, r20
    1522:	35 07       	cpc	r19, r21
    1524:	48 f0       	brcs	.+18     	; 0x1538 <malloc+0x120>
    1526:	4e 0f       	add	r20, r30
    1528:	5f 1f       	adc	r21, r31
    152a:	50 93 89 01 	sts	0x0189, r21	; 0x800189 <__brkval+0x1>
    152e:	40 93 88 01 	sts	0x0188, r20	; 0x800188 <__brkval>
    1532:	81 93       	st	Z+, r24
    1534:	91 93       	st	Z+, r25
    1536:	02 c0       	rjmp	.+4      	; 0x153c <malloc+0x124>
    1538:	e0 e0       	ldi	r30, 0x00	; 0
    153a:	f0 e0       	ldi	r31, 0x00	; 0
    153c:	cf 01       	movw	r24, r30
    153e:	df 91       	pop	r29
    1540:	cf 91       	pop	r28
    1542:	1f 91       	pop	r17
    1544:	0f 91       	pop	r16
    1546:	08 95       	ret

00001548 <free>:
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	00 97       	sbiw	r24, 0x00	; 0
    154e:	09 f4       	brne	.+2      	; 0x1552 <free+0xa>
    1550:	81 c0       	rjmp	.+258    	; 0x1654 <free+0x10c>
    1552:	fc 01       	movw	r30, r24
    1554:	32 97       	sbiw	r30, 0x02	; 2
    1556:	13 82       	std	Z+3, r1	; 0x03
    1558:	12 82       	std	Z+2, r1	; 0x02
    155a:	a0 91 8a 01 	lds	r26, 0x018A	; 0x80018a <__flp>
    155e:	b0 91 8b 01 	lds	r27, 0x018B	; 0x80018b <__flp+0x1>
    1562:	10 97       	sbiw	r26, 0x00	; 0
    1564:	81 f4       	brne	.+32     	; 0x1586 <free+0x3e>
    1566:	20 81       	ld	r18, Z
    1568:	31 81       	ldd	r19, Z+1	; 0x01
    156a:	82 0f       	add	r24, r18
    156c:	93 1f       	adc	r25, r19
    156e:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <__brkval>
    1572:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <__brkval+0x1>
    1576:	28 17       	cp	r18, r24
    1578:	39 07       	cpc	r19, r25
    157a:	51 f5       	brne	.+84     	; 0x15d0 <free+0x88>
    157c:	f0 93 89 01 	sts	0x0189, r31	; 0x800189 <__brkval+0x1>
    1580:	e0 93 88 01 	sts	0x0188, r30	; 0x800188 <__brkval>
    1584:	67 c0       	rjmp	.+206    	; 0x1654 <free+0x10c>
    1586:	ed 01       	movw	r28, r26
    1588:	20 e0       	ldi	r18, 0x00	; 0
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	ce 17       	cp	r28, r30
    158e:	df 07       	cpc	r29, r31
    1590:	40 f4       	brcc	.+16     	; 0x15a2 <free+0x5a>
    1592:	4a 81       	ldd	r20, Y+2	; 0x02
    1594:	5b 81       	ldd	r21, Y+3	; 0x03
    1596:	9e 01       	movw	r18, r28
    1598:	41 15       	cp	r20, r1
    159a:	51 05       	cpc	r21, r1
    159c:	f1 f0       	breq	.+60     	; 0x15da <free+0x92>
    159e:	ea 01       	movw	r28, r20
    15a0:	f5 cf       	rjmp	.-22     	; 0x158c <free+0x44>
    15a2:	d3 83       	std	Z+3, r29	; 0x03
    15a4:	c2 83       	std	Z+2, r28	; 0x02
    15a6:	40 81       	ld	r20, Z
    15a8:	51 81       	ldd	r21, Z+1	; 0x01
    15aa:	84 0f       	add	r24, r20
    15ac:	95 1f       	adc	r25, r21
    15ae:	c8 17       	cp	r28, r24
    15b0:	d9 07       	cpc	r29, r25
    15b2:	59 f4       	brne	.+22     	; 0x15ca <free+0x82>
    15b4:	88 81       	ld	r24, Y
    15b6:	99 81       	ldd	r25, Y+1	; 0x01
    15b8:	84 0f       	add	r24, r20
    15ba:	95 1f       	adc	r25, r21
    15bc:	02 96       	adiw	r24, 0x02	; 2
    15be:	91 83       	std	Z+1, r25	; 0x01
    15c0:	80 83       	st	Z, r24
    15c2:	8a 81       	ldd	r24, Y+2	; 0x02
    15c4:	9b 81       	ldd	r25, Y+3	; 0x03
    15c6:	93 83       	std	Z+3, r25	; 0x03
    15c8:	82 83       	std	Z+2, r24	; 0x02
    15ca:	21 15       	cp	r18, r1
    15cc:	31 05       	cpc	r19, r1
    15ce:	29 f4       	brne	.+10     	; 0x15da <free+0x92>
    15d0:	f0 93 8b 01 	sts	0x018B, r31	; 0x80018b <__flp+0x1>
    15d4:	e0 93 8a 01 	sts	0x018A, r30	; 0x80018a <__flp>
    15d8:	3d c0       	rjmp	.+122    	; 0x1654 <free+0x10c>
    15da:	e9 01       	movw	r28, r18
    15dc:	fb 83       	std	Y+3, r31	; 0x03
    15de:	ea 83       	std	Y+2, r30	; 0x02
    15e0:	49 91       	ld	r20, Y+
    15e2:	59 91       	ld	r21, Y+
    15e4:	c4 0f       	add	r28, r20
    15e6:	d5 1f       	adc	r29, r21
    15e8:	ec 17       	cp	r30, r28
    15ea:	fd 07       	cpc	r31, r29
    15ec:	61 f4       	brne	.+24     	; 0x1606 <free+0xbe>
    15ee:	80 81       	ld	r24, Z
    15f0:	91 81       	ldd	r25, Z+1	; 0x01
    15f2:	84 0f       	add	r24, r20
    15f4:	95 1f       	adc	r25, r21
    15f6:	02 96       	adiw	r24, 0x02	; 2
    15f8:	e9 01       	movw	r28, r18
    15fa:	99 83       	std	Y+1, r25	; 0x01
    15fc:	88 83       	st	Y, r24
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
    1600:	93 81       	ldd	r25, Z+3	; 0x03
    1602:	9b 83       	std	Y+3, r25	; 0x03
    1604:	8a 83       	std	Y+2, r24	; 0x02
    1606:	e0 e0       	ldi	r30, 0x00	; 0
    1608:	f0 e0       	ldi	r31, 0x00	; 0
    160a:	12 96       	adiw	r26, 0x02	; 2
    160c:	8d 91       	ld	r24, X+
    160e:	9c 91       	ld	r25, X
    1610:	13 97       	sbiw	r26, 0x03	; 3
    1612:	00 97       	sbiw	r24, 0x00	; 0
    1614:	19 f0       	breq	.+6      	; 0x161c <free+0xd4>
    1616:	fd 01       	movw	r30, r26
    1618:	dc 01       	movw	r26, r24
    161a:	f7 cf       	rjmp	.-18     	; 0x160a <free+0xc2>
    161c:	8d 91       	ld	r24, X+
    161e:	9c 91       	ld	r25, X
    1620:	11 97       	sbiw	r26, 0x01	; 1
    1622:	9d 01       	movw	r18, r26
    1624:	2e 5f       	subi	r18, 0xFE	; 254
    1626:	3f 4f       	sbci	r19, 0xFF	; 255
    1628:	82 0f       	add	r24, r18
    162a:	93 1f       	adc	r25, r19
    162c:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <__brkval>
    1630:	30 91 89 01 	lds	r19, 0x0189	; 0x800189 <__brkval+0x1>
    1634:	28 17       	cp	r18, r24
    1636:	39 07       	cpc	r19, r25
    1638:	69 f4       	brne	.+26     	; 0x1654 <free+0x10c>
    163a:	30 97       	sbiw	r30, 0x00	; 0
    163c:	29 f4       	brne	.+10     	; 0x1648 <free+0x100>
    163e:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <__flp+0x1>
    1642:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <__flp>
    1646:	02 c0       	rjmp	.+4      	; 0x164c <free+0x104>
    1648:	13 82       	std	Z+3, r1	; 0x03
    164a:	12 82       	std	Z+2, r1	; 0x02
    164c:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <__brkval+0x1>
    1650:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <__brkval>
    1654:	df 91       	pop	r29
    1656:	cf 91       	pop	r28
    1658:	08 95       	ret

0000165a <printf>:
    165a:	a0 e0       	ldi	r26, 0x00	; 0
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	e3 e3       	ldi	r30, 0x33	; 51
    1660:	fb e0       	ldi	r31, 0x0B	; 11
    1662:	0c 94 e4 0d 	jmp	0x1bc8	; 0x1bc8 <__prologue_saves__+0x20>
    1666:	ae 01       	movw	r20, r28
    1668:	4b 5f       	subi	r20, 0xFB	; 251
    166a:	5f 4f       	sbci	r21, 0xFF	; 255
    166c:	fa 01       	movw	r30, r20
    166e:	61 91       	ld	r22, Z+
    1670:	71 91       	ld	r23, Z+
    1672:	af 01       	movw	r20, r30
    1674:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <__iob+0x2>
    1678:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <__iob+0x3>
    167c:	0e 94 43 0b 	call	0x1686	; 0x1686 <vfprintf>
    1680:	e2 e0       	ldi	r30, 0x02	; 2
    1682:	0c 94 00 0e 	jmp	0x1c00	; 0x1c00 <__epilogue_restores__+0x20>

00001686 <vfprintf>:
    1686:	ab e0       	ldi	r26, 0x0B	; 11
    1688:	b0 e0       	ldi	r27, 0x00	; 0
    168a:	e9 e4       	ldi	r30, 0x49	; 73
    168c:	fb e0       	ldi	r31, 0x0B	; 11
    168e:	0c 94 d4 0d 	jmp	0x1ba8	; 0x1ba8 <__prologue_saves__>
    1692:	6c 01       	movw	r12, r24
    1694:	7b 01       	movw	r14, r22
    1696:	8a 01       	movw	r16, r20
    1698:	fc 01       	movw	r30, r24
    169a:	17 82       	std	Z+7, r1	; 0x07
    169c:	16 82       	std	Z+6, r1	; 0x06
    169e:	83 81       	ldd	r24, Z+3	; 0x03
    16a0:	81 ff       	sbrs	r24, 1
    16a2:	cc c1       	rjmp	.+920    	; 0x1a3c <vfprintf+0x3b6>
    16a4:	ce 01       	movw	r24, r28
    16a6:	01 96       	adiw	r24, 0x01	; 1
    16a8:	3c 01       	movw	r6, r24
    16aa:	f6 01       	movw	r30, r12
    16ac:	93 81       	ldd	r25, Z+3	; 0x03
    16ae:	f7 01       	movw	r30, r14
    16b0:	93 fd       	sbrc	r25, 3
    16b2:	85 91       	lpm	r24, Z+
    16b4:	93 ff       	sbrs	r25, 3
    16b6:	81 91       	ld	r24, Z+
    16b8:	7f 01       	movw	r14, r30
    16ba:	88 23       	and	r24, r24
    16bc:	09 f4       	brne	.+2      	; 0x16c0 <vfprintf+0x3a>
    16be:	ba c1       	rjmp	.+884    	; 0x1a34 <vfprintf+0x3ae>
    16c0:	85 32       	cpi	r24, 0x25	; 37
    16c2:	39 f4       	brne	.+14     	; 0x16d2 <vfprintf+0x4c>
    16c4:	93 fd       	sbrc	r25, 3
    16c6:	85 91       	lpm	r24, Z+
    16c8:	93 ff       	sbrs	r25, 3
    16ca:	81 91       	ld	r24, Z+
    16cc:	7f 01       	movw	r14, r30
    16ce:	85 32       	cpi	r24, 0x25	; 37
    16d0:	29 f4       	brne	.+10     	; 0x16dc <vfprintf+0x56>
    16d2:	b6 01       	movw	r22, r12
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    16da:	e7 cf       	rjmp	.-50     	; 0x16aa <vfprintf+0x24>
    16dc:	91 2c       	mov	r9, r1
    16de:	21 2c       	mov	r2, r1
    16e0:	31 2c       	mov	r3, r1
    16e2:	ff e1       	ldi	r31, 0x1F	; 31
    16e4:	f3 15       	cp	r31, r3
    16e6:	d8 f0       	brcs	.+54     	; 0x171e <vfprintf+0x98>
    16e8:	8b 32       	cpi	r24, 0x2B	; 43
    16ea:	79 f0       	breq	.+30     	; 0x170a <vfprintf+0x84>
    16ec:	38 f4       	brcc	.+14     	; 0x16fc <vfprintf+0x76>
    16ee:	80 32       	cpi	r24, 0x20	; 32
    16f0:	79 f0       	breq	.+30     	; 0x1710 <vfprintf+0x8a>
    16f2:	83 32       	cpi	r24, 0x23	; 35
    16f4:	a1 f4       	brne	.+40     	; 0x171e <vfprintf+0x98>
    16f6:	23 2d       	mov	r18, r3
    16f8:	20 61       	ori	r18, 0x10	; 16
    16fa:	1d c0       	rjmp	.+58     	; 0x1736 <vfprintf+0xb0>
    16fc:	8d 32       	cpi	r24, 0x2D	; 45
    16fe:	61 f0       	breq	.+24     	; 0x1718 <vfprintf+0x92>
    1700:	80 33       	cpi	r24, 0x30	; 48
    1702:	69 f4       	brne	.+26     	; 0x171e <vfprintf+0x98>
    1704:	23 2d       	mov	r18, r3
    1706:	21 60       	ori	r18, 0x01	; 1
    1708:	16 c0       	rjmp	.+44     	; 0x1736 <vfprintf+0xb0>
    170a:	83 2d       	mov	r24, r3
    170c:	82 60       	ori	r24, 0x02	; 2
    170e:	38 2e       	mov	r3, r24
    1710:	e3 2d       	mov	r30, r3
    1712:	e4 60       	ori	r30, 0x04	; 4
    1714:	3e 2e       	mov	r3, r30
    1716:	2a c0       	rjmp	.+84     	; 0x176c <vfprintf+0xe6>
    1718:	f3 2d       	mov	r31, r3
    171a:	f8 60       	ori	r31, 0x08	; 8
    171c:	1d c0       	rjmp	.+58     	; 0x1758 <vfprintf+0xd2>
    171e:	37 fc       	sbrc	r3, 7
    1720:	2d c0       	rjmp	.+90     	; 0x177c <vfprintf+0xf6>
    1722:	20 ed       	ldi	r18, 0xD0	; 208
    1724:	28 0f       	add	r18, r24
    1726:	2a 30       	cpi	r18, 0x0A	; 10
    1728:	40 f0       	brcs	.+16     	; 0x173a <vfprintf+0xb4>
    172a:	8e 32       	cpi	r24, 0x2E	; 46
    172c:	b9 f4       	brne	.+46     	; 0x175c <vfprintf+0xd6>
    172e:	36 fc       	sbrc	r3, 6
    1730:	81 c1       	rjmp	.+770    	; 0x1a34 <vfprintf+0x3ae>
    1732:	23 2d       	mov	r18, r3
    1734:	20 64       	ori	r18, 0x40	; 64
    1736:	32 2e       	mov	r3, r18
    1738:	19 c0       	rjmp	.+50     	; 0x176c <vfprintf+0xe6>
    173a:	36 fe       	sbrs	r3, 6
    173c:	06 c0       	rjmp	.+12     	; 0x174a <vfprintf+0xc4>
    173e:	8a e0       	ldi	r24, 0x0A	; 10
    1740:	98 9e       	mul	r9, r24
    1742:	20 0d       	add	r18, r0
    1744:	11 24       	eor	r1, r1
    1746:	92 2e       	mov	r9, r18
    1748:	11 c0       	rjmp	.+34     	; 0x176c <vfprintf+0xe6>
    174a:	ea e0       	ldi	r30, 0x0A	; 10
    174c:	2e 9e       	mul	r2, r30
    174e:	20 0d       	add	r18, r0
    1750:	11 24       	eor	r1, r1
    1752:	22 2e       	mov	r2, r18
    1754:	f3 2d       	mov	r31, r3
    1756:	f0 62       	ori	r31, 0x20	; 32
    1758:	3f 2e       	mov	r3, r31
    175a:	08 c0       	rjmp	.+16     	; 0x176c <vfprintf+0xe6>
    175c:	8c 36       	cpi	r24, 0x6C	; 108
    175e:	21 f4       	brne	.+8      	; 0x1768 <vfprintf+0xe2>
    1760:	83 2d       	mov	r24, r3
    1762:	80 68       	ori	r24, 0x80	; 128
    1764:	38 2e       	mov	r3, r24
    1766:	02 c0       	rjmp	.+4      	; 0x176c <vfprintf+0xe6>
    1768:	88 36       	cpi	r24, 0x68	; 104
    176a:	41 f4       	brne	.+16     	; 0x177c <vfprintf+0xf6>
    176c:	f7 01       	movw	r30, r14
    176e:	93 fd       	sbrc	r25, 3
    1770:	85 91       	lpm	r24, Z+
    1772:	93 ff       	sbrs	r25, 3
    1774:	81 91       	ld	r24, Z+
    1776:	7f 01       	movw	r14, r30
    1778:	81 11       	cpse	r24, r1
    177a:	b3 cf       	rjmp	.-154    	; 0x16e2 <vfprintf+0x5c>
    177c:	98 2f       	mov	r25, r24
    177e:	9f 7d       	andi	r25, 0xDF	; 223
    1780:	95 54       	subi	r25, 0x45	; 69
    1782:	93 30       	cpi	r25, 0x03	; 3
    1784:	28 f4       	brcc	.+10     	; 0x1790 <vfprintf+0x10a>
    1786:	0c 5f       	subi	r16, 0xFC	; 252
    1788:	1f 4f       	sbci	r17, 0xFF	; 255
    178a:	9f e3       	ldi	r25, 0x3F	; 63
    178c:	99 83       	std	Y+1, r25	; 0x01
    178e:	0d c0       	rjmp	.+26     	; 0x17aa <vfprintf+0x124>
    1790:	83 36       	cpi	r24, 0x63	; 99
    1792:	31 f0       	breq	.+12     	; 0x17a0 <vfprintf+0x11a>
    1794:	83 37       	cpi	r24, 0x73	; 115
    1796:	71 f0       	breq	.+28     	; 0x17b4 <vfprintf+0x12e>
    1798:	83 35       	cpi	r24, 0x53	; 83
    179a:	09 f0       	breq	.+2      	; 0x179e <vfprintf+0x118>
    179c:	59 c0       	rjmp	.+178    	; 0x1850 <vfprintf+0x1ca>
    179e:	21 c0       	rjmp	.+66     	; 0x17e2 <vfprintf+0x15c>
    17a0:	f8 01       	movw	r30, r16
    17a2:	80 81       	ld	r24, Z
    17a4:	89 83       	std	Y+1, r24	; 0x01
    17a6:	0e 5f       	subi	r16, 0xFE	; 254
    17a8:	1f 4f       	sbci	r17, 0xFF	; 255
    17aa:	88 24       	eor	r8, r8
    17ac:	83 94       	inc	r8
    17ae:	91 2c       	mov	r9, r1
    17b0:	53 01       	movw	r10, r6
    17b2:	13 c0       	rjmp	.+38     	; 0x17da <vfprintf+0x154>
    17b4:	28 01       	movw	r4, r16
    17b6:	f2 e0       	ldi	r31, 0x02	; 2
    17b8:	4f 0e       	add	r4, r31
    17ba:	51 1c       	adc	r5, r1
    17bc:	f8 01       	movw	r30, r16
    17be:	a0 80       	ld	r10, Z
    17c0:	b1 80       	ldd	r11, Z+1	; 0x01
    17c2:	36 fe       	sbrs	r3, 6
    17c4:	03 c0       	rjmp	.+6      	; 0x17cc <vfprintf+0x146>
    17c6:	69 2d       	mov	r22, r9
    17c8:	70 e0       	ldi	r23, 0x00	; 0
    17ca:	02 c0       	rjmp	.+4      	; 0x17d0 <vfprintf+0x14a>
    17cc:	6f ef       	ldi	r22, 0xFF	; 255
    17ce:	7f ef       	ldi	r23, 0xFF	; 255
    17d0:	c5 01       	movw	r24, r10
    17d2:	0e 94 2f 0d 	call	0x1a5e	; 0x1a5e <strnlen>
    17d6:	4c 01       	movw	r8, r24
    17d8:	82 01       	movw	r16, r4
    17da:	f3 2d       	mov	r31, r3
    17dc:	ff 77       	andi	r31, 0x7F	; 127
    17de:	3f 2e       	mov	r3, r31
    17e0:	16 c0       	rjmp	.+44     	; 0x180e <vfprintf+0x188>
    17e2:	28 01       	movw	r4, r16
    17e4:	22 e0       	ldi	r18, 0x02	; 2
    17e6:	42 0e       	add	r4, r18
    17e8:	51 1c       	adc	r5, r1
    17ea:	f8 01       	movw	r30, r16
    17ec:	a0 80       	ld	r10, Z
    17ee:	b1 80       	ldd	r11, Z+1	; 0x01
    17f0:	36 fe       	sbrs	r3, 6
    17f2:	03 c0       	rjmp	.+6      	; 0x17fa <vfprintf+0x174>
    17f4:	69 2d       	mov	r22, r9
    17f6:	70 e0       	ldi	r23, 0x00	; 0
    17f8:	02 c0       	rjmp	.+4      	; 0x17fe <vfprintf+0x178>
    17fa:	6f ef       	ldi	r22, 0xFF	; 255
    17fc:	7f ef       	ldi	r23, 0xFF	; 255
    17fe:	c5 01       	movw	r24, r10
    1800:	0e 94 24 0d 	call	0x1a48	; 0x1a48 <strnlen_P>
    1804:	4c 01       	movw	r8, r24
    1806:	f3 2d       	mov	r31, r3
    1808:	f0 68       	ori	r31, 0x80	; 128
    180a:	3f 2e       	mov	r3, r31
    180c:	82 01       	movw	r16, r4
    180e:	33 fc       	sbrc	r3, 3
    1810:	1b c0       	rjmp	.+54     	; 0x1848 <vfprintf+0x1c2>
    1812:	82 2d       	mov	r24, r2
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	88 16       	cp	r8, r24
    1818:	99 06       	cpc	r9, r25
    181a:	b0 f4       	brcc	.+44     	; 0x1848 <vfprintf+0x1c2>
    181c:	b6 01       	movw	r22, r12
    181e:	80 e2       	ldi	r24, 0x20	; 32
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    1826:	2a 94       	dec	r2
    1828:	f4 cf       	rjmp	.-24     	; 0x1812 <vfprintf+0x18c>
    182a:	f5 01       	movw	r30, r10
    182c:	37 fc       	sbrc	r3, 7
    182e:	85 91       	lpm	r24, Z+
    1830:	37 fe       	sbrs	r3, 7
    1832:	81 91       	ld	r24, Z+
    1834:	5f 01       	movw	r10, r30
    1836:	b6 01       	movw	r22, r12
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    183e:	21 10       	cpse	r2, r1
    1840:	2a 94       	dec	r2
    1842:	21 e0       	ldi	r18, 0x01	; 1
    1844:	82 1a       	sub	r8, r18
    1846:	91 08       	sbc	r9, r1
    1848:	81 14       	cp	r8, r1
    184a:	91 04       	cpc	r9, r1
    184c:	71 f7       	brne	.-36     	; 0x182a <vfprintf+0x1a4>
    184e:	e8 c0       	rjmp	.+464    	; 0x1a20 <vfprintf+0x39a>
    1850:	84 36       	cpi	r24, 0x64	; 100
    1852:	11 f0       	breq	.+4      	; 0x1858 <vfprintf+0x1d2>
    1854:	89 36       	cpi	r24, 0x69	; 105
    1856:	41 f5       	brne	.+80     	; 0x18a8 <vfprintf+0x222>
    1858:	f8 01       	movw	r30, r16
    185a:	37 fe       	sbrs	r3, 7
    185c:	07 c0       	rjmp	.+14     	; 0x186c <vfprintf+0x1e6>
    185e:	60 81       	ld	r22, Z
    1860:	71 81       	ldd	r23, Z+1	; 0x01
    1862:	82 81       	ldd	r24, Z+2	; 0x02
    1864:	93 81       	ldd	r25, Z+3	; 0x03
    1866:	0c 5f       	subi	r16, 0xFC	; 252
    1868:	1f 4f       	sbci	r17, 0xFF	; 255
    186a:	08 c0       	rjmp	.+16     	; 0x187c <vfprintf+0x1f6>
    186c:	60 81       	ld	r22, Z
    186e:	71 81       	ldd	r23, Z+1	; 0x01
    1870:	07 2e       	mov	r0, r23
    1872:	00 0c       	add	r0, r0
    1874:	88 0b       	sbc	r24, r24
    1876:	99 0b       	sbc	r25, r25
    1878:	0e 5f       	subi	r16, 0xFE	; 254
    187a:	1f 4f       	sbci	r17, 0xFF	; 255
    187c:	f3 2d       	mov	r31, r3
    187e:	ff 76       	andi	r31, 0x6F	; 111
    1880:	3f 2e       	mov	r3, r31
    1882:	97 ff       	sbrs	r25, 7
    1884:	09 c0       	rjmp	.+18     	; 0x1898 <vfprintf+0x212>
    1886:	90 95       	com	r25
    1888:	80 95       	com	r24
    188a:	70 95       	com	r23
    188c:	61 95       	neg	r22
    188e:	7f 4f       	sbci	r23, 0xFF	; 255
    1890:	8f 4f       	sbci	r24, 0xFF	; 255
    1892:	9f 4f       	sbci	r25, 0xFF	; 255
    1894:	f0 68       	ori	r31, 0x80	; 128
    1896:	3f 2e       	mov	r3, r31
    1898:	2a e0       	ldi	r18, 0x0A	; 10
    189a:	30 e0       	ldi	r19, 0x00	; 0
    189c:	a3 01       	movw	r20, r6
    189e:	0e 94 76 0d 	call	0x1aec	; 0x1aec <__ultoa_invert>
    18a2:	88 2e       	mov	r8, r24
    18a4:	86 18       	sub	r8, r6
    18a6:	45 c0       	rjmp	.+138    	; 0x1932 <vfprintf+0x2ac>
    18a8:	85 37       	cpi	r24, 0x75	; 117
    18aa:	31 f4       	brne	.+12     	; 0x18b8 <vfprintf+0x232>
    18ac:	23 2d       	mov	r18, r3
    18ae:	2f 7e       	andi	r18, 0xEF	; 239
    18b0:	b2 2e       	mov	r11, r18
    18b2:	2a e0       	ldi	r18, 0x0A	; 10
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	25 c0       	rjmp	.+74     	; 0x1902 <vfprintf+0x27c>
    18b8:	93 2d       	mov	r25, r3
    18ba:	99 7f       	andi	r25, 0xF9	; 249
    18bc:	b9 2e       	mov	r11, r25
    18be:	8f 36       	cpi	r24, 0x6F	; 111
    18c0:	c1 f0       	breq	.+48     	; 0x18f2 <vfprintf+0x26c>
    18c2:	18 f4       	brcc	.+6      	; 0x18ca <vfprintf+0x244>
    18c4:	88 35       	cpi	r24, 0x58	; 88
    18c6:	79 f0       	breq	.+30     	; 0x18e6 <vfprintf+0x260>
    18c8:	b5 c0       	rjmp	.+362    	; 0x1a34 <vfprintf+0x3ae>
    18ca:	80 37       	cpi	r24, 0x70	; 112
    18cc:	19 f0       	breq	.+6      	; 0x18d4 <vfprintf+0x24e>
    18ce:	88 37       	cpi	r24, 0x78	; 120
    18d0:	21 f0       	breq	.+8      	; 0x18da <vfprintf+0x254>
    18d2:	b0 c0       	rjmp	.+352    	; 0x1a34 <vfprintf+0x3ae>
    18d4:	e9 2f       	mov	r30, r25
    18d6:	e0 61       	ori	r30, 0x10	; 16
    18d8:	be 2e       	mov	r11, r30
    18da:	b4 fe       	sbrs	r11, 4
    18dc:	0d c0       	rjmp	.+26     	; 0x18f8 <vfprintf+0x272>
    18de:	fb 2d       	mov	r31, r11
    18e0:	f4 60       	ori	r31, 0x04	; 4
    18e2:	bf 2e       	mov	r11, r31
    18e4:	09 c0       	rjmp	.+18     	; 0x18f8 <vfprintf+0x272>
    18e6:	34 fe       	sbrs	r3, 4
    18e8:	0a c0       	rjmp	.+20     	; 0x18fe <vfprintf+0x278>
    18ea:	29 2f       	mov	r18, r25
    18ec:	26 60       	ori	r18, 0x06	; 6
    18ee:	b2 2e       	mov	r11, r18
    18f0:	06 c0       	rjmp	.+12     	; 0x18fe <vfprintf+0x278>
    18f2:	28 e0       	ldi	r18, 0x08	; 8
    18f4:	30 e0       	ldi	r19, 0x00	; 0
    18f6:	05 c0       	rjmp	.+10     	; 0x1902 <vfprintf+0x27c>
    18f8:	20 e1       	ldi	r18, 0x10	; 16
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	02 c0       	rjmp	.+4      	; 0x1902 <vfprintf+0x27c>
    18fe:	20 e1       	ldi	r18, 0x10	; 16
    1900:	32 e0       	ldi	r19, 0x02	; 2
    1902:	f8 01       	movw	r30, r16
    1904:	b7 fe       	sbrs	r11, 7
    1906:	07 c0       	rjmp	.+14     	; 0x1916 <vfprintf+0x290>
    1908:	60 81       	ld	r22, Z
    190a:	71 81       	ldd	r23, Z+1	; 0x01
    190c:	82 81       	ldd	r24, Z+2	; 0x02
    190e:	93 81       	ldd	r25, Z+3	; 0x03
    1910:	0c 5f       	subi	r16, 0xFC	; 252
    1912:	1f 4f       	sbci	r17, 0xFF	; 255
    1914:	06 c0       	rjmp	.+12     	; 0x1922 <vfprintf+0x29c>
    1916:	60 81       	ld	r22, Z
    1918:	71 81       	ldd	r23, Z+1	; 0x01
    191a:	80 e0       	ldi	r24, 0x00	; 0
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	0e 5f       	subi	r16, 0xFE	; 254
    1920:	1f 4f       	sbci	r17, 0xFF	; 255
    1922:	a3 01       	movw	r20, r6
    1924:	0e 94 76 0d 	call	0x1aec	; 0x1aec <__ultoa_invert>
    1928:	88 2e       	mov	r8, r24
    192a:	86 18       	sub	r8, r6
    192c:	fb 2d       	mov	r31, r11
    192e:	ff 77       	andi	r31, 0x7F	; 127
    1930:	3f 2e       	mov	r3, r31
    1932:	36 fe       	sbrs	r3, 6
    1934:	0d c0       	rjmp	.+26     	; 0x1950 <vfprintf+0x2ca>
    1936:	23 2d       	mov	r18, r3
    1938:	2e 7f       	andi	r18, 0xFE	; 254
    193a:	a2 2e       	mov	r10, r18
    193c:	89 14       	cp	r8, r9
    193e:	58 f4       	brcc	.+22     	; 0x1956 <vfprintf+0x2d0>
    1940:	34 fe       	sbrs	r3, 4
    1942:	0b c0       	rjmp	.+22     	; 0x195a <vfprintf+0x2d4>
    1944:	32 fc       	sbrc	r3, 2
    1946:	09 c0       	rjmp	.+18     	; 0x195a <vfprintf+0x2d4>
    1948:	83 2d       	mov	r24, r3
    194a:	8e 7e       	andi	r24, 0xEE	; 238
    194c:	a8 2e       	mov	r10, r24
    194e:	05 c0       	rjmp	.+10     	; 0x195a <vfprintf+0x2d4>
    1950:	b8 2c       	mov	r11, r8
    1952:	a3 2c       	mov	r10, r3
    1954:	03 c0       	rjmp	.+6      	; 0x195c <vfprintf+0x2d6>
    1956:	b8 2c       	mov	r11, r8
    1958:	01 c0       	rjmp	.+2      	; 0x195c <vfprintf+0x2d6>
    195a:	b9 2c       	mov	r11, r9
    195c:	a4 fe       	sbrs	r10, 4
    195e:	0f c0       	rjmp	.+30     	; 0x197e <vfprintf+0x2f8>
    1960:	fe 01       	movw	r30, r28
    1962:	e8 0d       	add	r30, r8
    1964:	f1 1d       	adc	r31, r1
    1966:	80 81       	ld	r24, Z
    1968:	80 33       	cpi	r24, 0x30	; 48
    196a:	21 f4       	brne	.+8      	; 0x1974 <vfprintf+0x2ee>
    196c:	9a 2d       	mov	r25, r10
    196e:	99 7e       	andi	r25, 0xE9	; 233
    1970:	a9 2e       	mov	r10, r25
    1972:	09 c0       	rjmp	.+18     	; 0x1986 <vfprintf+0x300>
    1974:	a2 fe       	sbrs	r10, 2
    1976:	06 c0       	rjmp	.+12     	; 0x1984 <vfprintf+0x2fe>
    1978:	b3 94       	inc	r11
    197a:	b3 94       	inc	r11
    197c:	04 c0       	rjmp	.+8      	; 0x1986 <vfprintf+0x300>
    197e:	8a 2d       	mov	r24, r10
    1980:	86 78       	andi	r24, 0x86	; 134
    1982:	09 f0       	breq	.+2      	; 0x1986 <vfprintf+0x300>
    1984:	b3 94       	inc	r11
    1986:	a3 fc       	sbrc	r10, 3
    1988:	11 c0       	rjmp	.+34     	; 0x19ac <vfprintf+0x326>
    198a:	a0 fe       	sbrs	r10, 0
    198c:	06 c0       	rjmp	.+12     	; 0x199a <vfprintf+0x314>
    198e:	b2 14       	cp	r11, r2
    1990:	88 f4       	brcc	.+34     	; 0x19b4 <vfprintf+0x32e>
    1992:	28 0c       	add	r2, r8
    1994:	92 2c       	mov	r9, r2
    1996:	9b 18       	sub	r9, r11
    1998:	0e c0       	rjmp	.+28     	; 0x19b6 <vfprintf+0x330>
    199a:	b2 14       	cp	r11, r2
    199c:	60 f4       	brcc	.+24     	; 0x19b6 <vfprintf+0x330>
    199e:	b6 01       	movw	r22, r12
    19a0:	80 e2       	ldi	r24, 0x20	; 32
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    19a8:	b3 94       	inc	r11
    19aa:	f7 cf       	rjmp	.-18     	; 0x199a <vfprintf+0x314>
    19ac:	b2 14       	cp	r11, r2
    19ae:	18 f4       	brcc	.+6      	; 0x19b6 <vfprintf+0x330>
    19b0:	2b 18       	sub	r2, r11
    19b2:	02 c0       	rjmp	.+4      	; 0x19b8 <vfprintf+0x332>
    19b4:	98 2c       	mov	r9, r8
    19b6:	21 2c       	mov	r2, r1
    19b8:	a4 fe       	sbrs	r10, 4
    19ba:	10 c0       	rjmp	.+32     	; 0x19dc <vfprintf+0x356>
    19bc:	b6 01       	movw	r22, r12
    19be:	80 e3       	ldi	r24, 0x30	; 48
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    19c6:	a2 fe       	sbrs	r10, 2
    19c8:	17 c0       	rjmp	.+46     	; 0x19f8 <vfprintf+0x372>
    19ca:	a1 fc       	sbrc	r10, 1
    19cc:	03 c0       	rjmp	.+6      	; 0x19d4 <vfprintf+0x34e>
    19ce:	88 e7       	ldi	r24, 0x78	; 120
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	02 c0       	rjmp	.+4      	; 0x19d8 <vfprintf+0x352>
    19d4:	88 e5       	ldi	r24, 0x58	; 88
    19d6:	90 e0       	ldi	r25, 0x00	; 0
    19d8:	b6 01       	movw	r22, r12
    19da:	0c c0       	rjmp	.+24     	; 0x19f4 <vfprintf+0x36e>
    19dc:	8a 2d       	mov	r24, r10
    19de:	86 78       	andi	r24, 0x86	; 134
    19e0:	59 f0       	breq	.+22     	; 0x19f8 <vfprintf+0x372>
    19e2:	a1 fe       	sbrs	r10, 1
    19e4:	02 c0       	rjmp	.+4      	; 0x19ea <vfprintf+0x364>
    19e6:	8b e2       	ldi	r24, 0x2B	; 43
    19e8:	01 c0       	rjmp	.+2      	; 0x19ec <vfprintf+0x366>
    19ea:	80 e2       	ldi	r24, 0x20	; 32
    19ec:	a7 fc       	sbrc	r10, 7
    19ee:	8d e2       	ldi	r24, 0x2D	; 45
    19f0:	b6 01       	movw	r22, r12
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    19f8:	89 14       	cp	r8, r9
    19fa:	38 f4       	brcc	.+14     	; 0x1a0a <vfprintf+0x384>
    19fc:	b6 01       	movw	r22, r12
    19fe:	80 e3       	ldi	r24, 0x30	; 48
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    1a06:	9a 94       	dec	r9
    1a08:	f7 cf       	rjmp	.-18     	; 0x19f8 <vfprintf+0x372>
    1a0a:	8a 94       	dec	r8
    1a0c:	f3 01       	movw	r30, r6
    1a0e:	e8 0d       	add	r30, r8
    1a10:	f1 1d       	adc	r31, r1
    1a12:	80 81       	ld	r24, Z
    1a14:	b6 01       	movw	r22, r12
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    1a1c:	81 10       	cpse	r8, r1
    1a1e:	f5 cf       	rjmp	.-22     	; 0x1a0a <vfprintf+0x384>
    1a20:	22 20       	and	r2, r2
    1a22:	09 f4       	brne	.+2      	; 0x1a26 <vfprintf+0x3a0>
    1a24:	42 ce       	rjmp	.-892    	; 0x16aa <vfprintf+0x24>
    1a26:	b6 01       	movw	r22, r12
    1a28:	80 e2       	ldi	r24, 0x20	; 32
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <fputc>
    1a30:	2a 94       	dec	r2
    1a32:	f6 cf       	rjmp	.-20     	; 0x1a20 <vfprintf+0x39a>
    1a34:	f6 01       	movw	r30, r12
    1a36:	86 81       	ldd	r24, Z+6	; 0x06
    1a38:	97 81       	ldd	r25, Z+7	; 0x07
    1a3a:	02 c0       	rjmp	.+4      	; 0x1a40 <vfprintf+0x3ba>
    1a3c:	8f ef       	ldi	r24, 0xFF	; 255
    1a3e:	9f ef       	ldi	r25, 0xFF	; 255
    1a40:	2b 96       	adiw	r28, 0x0b	; 11
    1a42:	e2 e1       	ldi	r30, 0x12	; 18
    1a44:	0c 94 f0 0d 	jmp	0x1be0	; 0x1be0 <__epilogue_restores__>

00001a48 <strnlen_P>:
    1a48:	fc 01       	movw	r30, r24
    1a4a:	05 90       	lpm	r0, Z+
    1a4c:	61 50       	subi	r22, 0x01	; 1
    1a4e:	70 40       	sbci	r23, 0x00	; 0
    1a50:	01 10       	cpse	r0, r1
    1a52:	d8 f7       	brcc	.-10     	; 0x1a4a <strnlen_P+0x2>
    1a54:	80 95       	com	r24
    1a56:	90 95       	com	r25
    1a58:	8e 0f       	add	r24, r30
    1a5a:	9f 1f       	adc	r25, r31
    1a5c:	08 95       	ret

00001a5e <strnlen>:
    1a5e:	fc 01       	movw	r30, r24
    1a60:	61 50       	subi	r22, 0x01	; 1
    1a62:	70 40       	sbci	r23, 0x00	; 0
    1a64:	01 90       	ld	r0, Z+
    1a66:	01 10       	cpse	r0, r1
    1a68:	d8 f7       	brcc	.-10     	; 0x1a60 <strnlen+0x2>
    1a6a:	80 95       	com	r24
    1a6c:	90 95       	com	r25
    1a6e:	8e 0f       	add	r24, r30
    1a70:	9f 1f       	adc	r25, r31
    1a72:	08 95       	ret

00001a74 <fputc>:
    1a74:	0f 93       	push	r16
    1a76:	1f 93       	push	r17
    1a78:	cf 93       	push	r28
    1a7a:	df 93       	push	r29
    1a7c:	fb 01       	movw	r30, r22
    1a7e:	23 81       	ldd	r18, Z+3	; 0x03
    1a80:	21 fd       	sbrc	r18, 1
    1a82:	03 c0       	rjmp	.+6      	; 0x1a8a <fputc+0x16>
    1a84:	8f ef       	ldi	r24, 0xFF	; 255
    1a86:	9f ef       	ldi	r25, 0xFF	; 255
    1a88:	2c c0       	rjmp	.+88     	; 0x1ae2 <fputc+0x6e>
    1a8a:	22 ff       	sbrs	r18, 2
    1a8c:	16 c0       	rjmp	.+44     	; 0x1aba <fputc+0x46>
    1a8e:	46 81       	ldd	r20, Z+6	; 0x06
    1a90:	57 81       	ldd	r21, Z+7	; 0x07
    1a92:	24 81       	ldd	r18, Z+4	; 0x04
    1a94:	35 81       	ldd	r19, Z+5	; 0x05
    1a96:	42 17       	cp	r20, r18
    1a98:	53 07       	cpc	r21, r19
    1a9a:	44 f4       	brge	.+16     	; 0x1aac <fputc+0x38>
    1a9c:	a0 81       	ld	r26, Z
    1a9e:	b1 81       	ldd	r27, Z+1	; 0x01
    1aa0:	9d 01       	movw	r18, r26
    1aa2:	2f 5f       	subi	r18, 0xFF	; 255
    1aa4:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa6:	31 83       	std	Z+1, r19	; 0x01
    1aa8:	20 83       	st	Z, r18
    1aaa:	8c 93       	st	X, r24
    1aac:	26 81       	ldd	r18, Z+6	; 0x06
    1aae:	37 81       	ldd	r19, Z+7	; 0x07
    1ab0:	2f 5f       	subi	r18, 0xFF	; 255
    1ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab4:	37 83       	std	Z+7, r19	; 0x07
    1ab6:	26 83       	std	Z+6, r18	; 0x06
    1ab8:	14 c0       	rjmp	.+40     	; 0x1ae2 <fputc+0x6e>
    1aba:	8b 01       	movw	r16, r22
    1abc:	ec 01       	movw	r28, r24
    1abe:	fb 01       	movw	r30, r22
    1ac0:	00 84       	ldd	r0, Z+8	; 0x08
    1ac2:	f1 85       	ldd	r31, Z+9	; 0x09
    1ac4:	e0 2d       	mov	r30, r0
    1ac6:	09 95       	icall
    1ac8:	89 2b       	or	r24, r25
    1aca:	e1 f6       	brne	.-72     	; 0x1a84 <fputc+0x10>
    1acc:	d8 01       	movw	r26, r16
    1ace:	16 96       	adiw	r26, 0x06	; 6
    1ad0:	8d 91       	ld	r24, X+
    1ad2:	9c 91       	ld	r25, X
    1ad4:	17 97       	sbiw	r26, 0x07	; 7
    1ad6:	01 96       	adiw	r24, 0x01	; 1
    1ad8:	17 96       	adiw	r26, 0x07	; 7
    1ada:	9c 93       	st	X, r25
    1adc:	8e 93       	st	-X, r24
    1ade:	16 97       	sbiw	r26, 0x06	; 6
    1ae0:	ce 01       	movw	r24, r28
    1ae2:	df 91       	pop	r29
    1ae4:	cf 91       	pop	r28
    1ae6:	1f 91       	pop	r17
    1ae8:	0f 91       	pop	r16
    1aea:	08 95       	ret

00001aec <__ultoa_invert>:
    1aec:	fa 01       	movw	r30, r20
    1aee:	aa 27       	eor	r26, r26
    1af0:	28 30       	cpi	r18, 0x08	; 8
    1af2:	51 f1       	breq	.+84     	; 0x1b48 <__ultoa_invert+0x5c>
    1af4:	20 31       	cpi	r18, 0x10	; 16
    1af6:	81 f1       	breq	.+96     	; 0x1b58 <__ultoa_invert+0x6c>
    1af8:	e8 94       	clt
    1afa:	6f 93       	push	r22
    1afc:	6e 7f       	andi	r22, 0xFE	; 254
    1afe:	6e 5f       	subi	r22, 0xFE	; 254
    1b00:	7f 4f       	sbci	r23, 0xFF	; 255
    1b02:	8f 4f       	sbci	r24, 0xFF	; 255
    1b04:	9f 4f       	sbci	r25, 0xFF	; 255
    1b06:	af 4f       	sbci	r26, 0xFF	; 255
    1b08:	b1 e0       	ldi	r27, 0x01	; 1
    1b0a:	3e d0       	rcall	.+124    	; 0x1b88 <__ultoa_invert+0x9c>
    1b0c:	b4 e0       	ldi	r27, 0x04	; 4
    1b0e:	3c d0       	rcall	.+120    	; 0x1b88 <__ultoa_invert+0x9c>
    1b10:	67 0f       	add	r22, r23
    1b12:	78 1f       	adc	r23, r24
    1b14:	89 1f       	adc	r24, r25
    1b16:	9a 1f       	adc	r25, r26
    1b18:	a1 1d       	adc	r26, r1
    1b1a:	68 0f       	add	r22, r24
    1b1c:	79 1f       	adc	r23, r25
    1b1e:	8a 1f       	adc	r24, r26
    1b20:	91 1d       	adc	r25, r1
    1b22:	a1 1d       	adc	r26, r1
    1b24:	6a 0f       	add	r22, r26
    1b26:	71 1d       	adc	r23, r1
    1b28:	81 1d       	adc	r24, r1
    1b2a:	91 1d       	adc	r25, r1
    1b2c:	a1 1d       	adc	r26, r1
    1b2e:	20 d0       	rcall	.+64     	; 0x1b70 <__ultoa_invert+0x84>
    1b30:	09 f4       	brne	.+2      	; 0x1b34 <__ultoa_invert+0x48>
    1b32:	68 94       	set
    1b34:	3f 91       	pop	r19
    1b36:	2a e0       	ldi	r18, 0x0A	; 10
    1b38:	26 9f       	mul	r18, r22
    1b3a:	11 24       	eor	r1, r1
    1b3c:	30 19       	sub	r19, r0
    1b3e:	30 5d       	subi	r19, 0xD0	; 208
    1b40:	31 93       	st	Z+, r19
    1b42:	de f6       	brtc	.-74     	; 0x1afa <__ultoa_invert+0xe>
    1b44:	cf 01       	movw	r24, r30
    1b46:	08 95       	ret
    1b48:	46 2f       	mov	r20, r22
    1b4a:	47 70       	andi	r20, 0x07	; 7
    1b4c:	40 5d       	subi	r20, 0xD0	; 208
    1b4e:	41 93       	st	Z+, r20
    1b50:	b3 e0       	ldi	r27, 0x03	; 3
    1b52:	0f d0       	rcall	.+30     	; 0x1b72 <__ultoa_invert+0x86>
    1b54:	c9 f7       	brne	.-14     	; 0x1b48 <__ultoa_invert+0x5c>
    1b56:	f6 cf       	rjmp	.-20     	; 0x1b44 <__ultoa_invert+0x58>
    1b58:	46 2f       	mov	r20, r22
    1b5a:	4f 70       	andi	r20, 0x0F	; 15
    1b5c:	40 5d       	subi	r20, 0xD0	; 208
    1b5e:	4a 33       	cpi	r20, 0x3A	; 58
    1b60:	18 f0       	brcs	.+6      	; 0x1b68 <__ultoa_invert+0x7c>
    1b62:	49 5d       	subi	r20, 0xD9	; 217
    1b64:	31 fd       	sbrc	r19, 1
    1b66:	40 52       	subi	r20, 0x20	; 32
    1b68:	41 93       	st	Z+, r20
    1b6a:	02 d0       	rcall	.+4      	; 0x1b70 <__ultoa_invert+0x84>
    1b6c:	a9 f7       	brne	.-22     	; 0x1b58 <__ultoa_invert+0x6c>
    1b6e:	ea cf       	rjmp	.-44     	; 0x1b44 <__ultoa_invert+0x58>
    1b70:	b4 e0       	ldi	r27, 0x04	; 4
    1b72:	a6 95       	lsr	r26
    1b74:	97 95       	ror	r25
    1b76:	87 95       	ror	r24
    1b78:	77 95       	ror	r23
    1b7a:	67 95       	ror	r22
    1b7c:	ba 95       	dec	r27
    1b7e:	c9 f7       	brne	.-14     	; 0x1b72 <__ultoa_invert+0x86>
    1b80:	00 97       	sbiw	r24, 0x00	; 0
    1b82:	61 05       	cpc	r22, r1
    1b84:	71 05       	cpc	r23, r1
    1b86:	08 95       	ret
    1b88:	9b 01       	movw	r18, r22
    1b8a:	ac 01       	movw	r20, r24
    1b8c:	0a 2e       	mov	r0, r26
    1b8e:	06 94       	lsr	r0
    1b90:	57 95       	ror	r21
    1b92:	47 95       	ror	r20
    1b94:	37 95       	ror	r19
    1b96:	27 95       	ror	r18
    1b98:	ba 95       	dec	r27
    1b9a:	c9 f7       	brne	.-14     	; 0x1b8e <__ultoa_invert+0xa2>
    1b9c:	62 0f       	add	r22, r18
    1b9e:	73 1f       	adc	r23, r19
    1ba0:	84 1f       	adc	r24, r20
    1ba2:	95 1f       	adc	r25, r21
    1ba4:	a0 1d       	adc	r26, r0
    1ba6:	08 95       	ret

00001ba8 <__prologue_saves__>:
    1ba8:	2f 92       	push	r2
    1baa:	3f 92       	push	r3
    1bac:	4f 92       	push	r4
    1bae:	5f 92       	push	r5
    1bb0:	6f 92       	push	r6
    1bb2:	7f 92       	push	r7
    1bb4:	8f 92       	push	r8
    1bb6:	9f 92       	push	r9
    1bb8:	af 92       	push	r10
    1bba:	bf 92       	push	r11
    1bbc:	cf 92       	push	r12
    1bbe:	df 92       	push	r13
    1bc0:	ef 92       	push	r14
    1bc2:	ff 92       	push	r15
    1bc4:	0f 93       	push	r16
    1bc6:	1f 93       	push	r17
    1bc8:	cf 93       	push	r28
    1bca:	df 93       	push	r29
    1bcc:	cd b7       	in	r28, 0x3d	; 61
    1bce:	de b7       	in	r29, 0x3e	; 62
    1bd0:	ca 1b       	sub	r28, r26
    1bd2:	db 0b       	sbc	r29, r27
    1bd4:	0f b6       	in	r0, 0x3f	; 63
    1bd6:	f8 94       	cli
    1bd8:	de bf       	out	0x3e, r29	; 62
    1bda:	0f be       	out	0x3f, r0	; 63
    1bdc:	cd bf       	out	0x3d, r28	; 61
    1bde:	09 94       	ijmp

00001be0 <__epilogue_restores__>:
    1be0:	2a 88       	ldd	r2, Y+18	; 0x12
    1be2:	39 88       	ldd	r3, Y+17	; 0x11
    1be4:	48 88       	ldd	r4, Y+16	; 0x10
    1be6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1be8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bea:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bec:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bee:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bf0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bf2:	b9 84       	ldd	r11, Y+9	; 0x09
    1bf4:	c8 84       	ldd	r12, Y+8	; 0x08
    1bf6:	df 80       	ldd	r13, Y+7	; 0x07
    1bf8:	ee 80       	ldd	r14, Y+6	; 0x06
    1bfa:	fd 80       	ldd	r15, Y+5	; 0x05
    1bfc:	0c 81       	ldd	r16, Y+4	; 0x04
    1bfe:	1b 81       	ldd	r17, Y+3	; 0x03
    1c00:	aa 81       	ldd	r26, Y+2	; 0x02
    1c02:	b9 81       	ldd	r27, Y+1	; 0x01
    1c04:	ce 0f       	add	r28, r30
    1c06:	d1 1d       	adc	r29, r1
    1c08:	0f b6       	in	r0, 0x3f	; 63
    1c0a:	f8 94       	cli
    1c0c:	de bf       	out	0x3e, r29	; 62
    1c0e:	0f be       	out	0x3f, r0	; 63
    1c10:	cd bf       	out	0x3d, r28	; 61
    1c12:	ed 01       	movw	r28, r26
    1c14:	08 95       	ret

00001c16 <_exit>:
    1c16:	f8 94       	cli

00001c18 <__stop_program>:
    1c18:	ff cf       	rjmp	.-2      	; 0x1c18 <__stop_program>
