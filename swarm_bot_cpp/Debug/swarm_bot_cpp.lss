
swarm_bot_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  00001a90  00001b24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  0080018c  0080018c  00001bb0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001bb0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00001c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b3f  00000000  00000000  00001eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000167c  00000000  00000000  00004a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000479c  00000000  00000000  000060a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008ec  00000000  00000000  0000a844  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000111df  00000000  00000000  0000b130  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000172b  00000000  00000000  0001c30f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  0001da3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004af3  00000000  00000000  0001dc1a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 42 03 	jmp	0x684	; 0x684 <__vector_1>
       8:	0c 94 02 04 	jmp	0x804	; 0x804 <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 de 04 	jmp	0x9bc	; 0x9bc <__vector_7>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__vector_13>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e0 e9       	ldi	r30, 0x90	; 144
     17e:	fa e1       	ldi	r31, 0x1A	; 26
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 38       	cpi	r26, 0x8C	; 140
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e8       	ldi	r26, 0x8C	; 140
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a4 3d       	cpi	r26, 0xD4	; 212
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 03 07 	call	0xe06	; 0xe06 <main>
     1a0:	0c 94 46 0d 	jmp	0x1a8c	; 0x1a8c <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <_adc_init>:
#include <__adc__.h>

void _adc_init(void)
{
	ADMUX = (1 << REFS0); // AVCC
     1a8:	ec e7       	ldi	r30, 0x7C	; 124
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 e4       	ldi	r24, 0x40	; 64
     1ae:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) | (1 << REFS1); //1v1
	
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN); // Turn ADC On sample: 16M/128 = 125KHz
     1b0:	aa e7       	ldi	r26, 0x7A	; 122
     1b2:	b0 e0       	ldi	r27, 0x00	; 0
     1b4:	8c 91       	ld	r24, X
     1b6:	87 68       	ori	r24, 0x87	; 135
     1b8:	8c 93       	st	X, r24
	ADMUX |= (0 << ADLAR);
     1ba:	80 81       	ld	r24, Z
     1bc:	80 83       	st	Z, r24
     1be:	08 95       	ret

000001c0 <_adc_read>:
	//ADMUX |= (1 << ADLAR); 8 bit
}

int _adc_read(uint8_t channel)
{
	ADMUX |= channel & 0x0f;
     1c0:	ec e7       	ldi	r30, 0x7C	; 124
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	90 81       	ld	r25, Z
     1c6:	8f 70       	andi	r24, 0x0F	; 15
     1c8:	98 2b       	or	r25, r24
     1ca:	90 83       	st	Z, r25
	ADCSRA |= (1 << ADSC);
     1cc:	ea e7       	ldi	r30, 0x7A	; 122
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	80 81       	ld	r24, Z
     1d2:	80 64       	ori	r24, 0x40	; 64
     1d4:	80 83       	st	Z, r24
	while(ADCSRA & (1 << ADSC));
     1d6:	80 81       	ld	r24, Z
     1d8:	86 fd       	sbrc	r24, 6
     1da:	fd cf       	rjmp	.-6      	; 0x1d6 <_adc_read+0x16>
	return ADCW;
     1dc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     1e0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     1e4:	08 95       	ret

000001e6 <_break_motor>:
}


void _break_motor(uint8_t motor)
{
	if (motor == MA)
     1e6:	81 30       	cpi	r24, 0x01	; 1
     1e8:	49 f4       	brne	.+18     	; 0x1fc <_break_motor+0x16>
	{
		_set_pwm_0A(255);
     1ea:	8f ef       	ldi	r24, 0xFF	; 255
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_set_pwm_0A>
		_set_pwm_1A(255);
     1f2:	8f ef       	ldi	r24, 0xFF	; 255
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 00 05 	call	0xa00	; 0xa00 <_set_pwm_1A>
     1fa:	08 95       	ret
	}
	else if (motor == MB)
     1fc:	82 30       	cpi	r24, 0x02	; 2
     1fe:	41 f4       	brne	.+16     	; 0x210 <_break_motor+0x2a>
	{
		_set_pwm_0B(255);
     200:	8f ef       	ldi	r24, 0xFF	; 255
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_set_pwm_0B>
		_set_pwm_1B(255);
     208:	8f ef       	ldi	r24, 0xFF	; 255
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <_set_pwm_1B>
     210:	08 95       	ret

00000212 <_set_speed>:
	{
		return -1;
	}
}
int _set_speed(uint8_t motor, int value)
{
     212:	cf 93       	push	r28
     214:	df 93       	push	r29
     216:	eb 01       	movw	r28, r22
	if(value == 0)
     218:	20 97       	sbiw	r28, 0x00	; 0
     21a:	19 f4       	brne	.+6      	; 0x222 <_set_speed+0x10>
	{
		_break_motor(motor);
     21c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_break_motor>
		return value;
     220:	32 c0       	rjmp	.+100    	; 0x286 <_set_speed+0x74>
	}
	if(value < 0)
     222:	dd 23       	and	r29, r29
     224:	d4 f4       	brge	.+52     	; 0x25a <_set_speed+0x48>
	{
		if (motor == MA)
     226:	81 30       	cpi	r24, 0x01	; 1
     228:	59 f4       	brne	.+22     	; 0x240 <_set_speed+0x2e>
		{
			_set_pwm_0A(-value);
     22a:	88 27       	eor	r24, r24
     22c:	99 27       	eor	r25, r25
     22e:	86 1b       	sub	r24, r22
     230:	97 0b       	sbc	r25, r23
     232:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_set_pwm_0A>
			_set_pwm_1A(0);
     236:	80 e0       	ldi	r24, 0x00	; 0
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	0e 94 00 05 	call	0xa00	; 0xa00 <_set_pwm_1A>
     23e:	23 c0       	rjmp	.+70     	; 0x286 <_set_speed+0x74>
		}
		else if (motor == MB)
     240:	82 30       	cpi	r24, 0x02	; 2
     242:	09 f5       	brne	.+66     	; 0x286 <_set_speed+0x74>
		{
			_set_pwm_0B(0);
     244:	80 e0       	ldi	r24, 0x00	; 0
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_set_pwm_0B>
			_set_pwm_1B(-value);
     24c:	88 27       	eor	r24, r24
     24e:	99 27       	eor	r25, r25
     250:	8c 1b       	sub	r24, r28
     252:	9d 0b       	sbc	r25, r29
     254:	0e 94 0f 05 	call	0xa1e	; 0xa1e <_set_pwm_1B>
     258:	16 c0       	rjmp	.+44     	; 0x286 <_set_speed+0x74>
		}
	}
	else if(value > 0)
     25a:	1c 16       	cp	r1, r28
     25c:	1d 06       	cpc	r1, r29
     25e:	9c f4       	brge	.+38     	; 0x286 <_set_speed+0x74>
	{
		if (motor == MA)
     260:	81 30       	cpi	r24, 0x01	; 1
     262:	41 f4       	brne	.+16     	; 0x274 <_set_speed+0x62>
		{
			_set_pwm_0A(0);
     264:	80 e0       	ldi	r24, 0x00	; 0
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <_set_pwm_0A>
			_set_pwm_1A(value);
     26c:	ce 01       	movw	r24, r28
     26e:	0e 94 00 05 	call	0xa00	; 0xa00 <_set_pwm_1A>
     272:	09 c0       	rjmp	.+18     	; 0x286 <_set_speed+0x74>
		}
		else if (motor == MB)
     274:	82 30       	cpi	r24, 0x02	; 2
     276:	39 f4       	brne	.+14     	; 0x286 <_set_speed+0x74>
		{
			_set_pwm_0B(value);
     278:	cb 01       	movw	r24, r22
     27a:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_set_pwm_0B>
			_set_pwm_1B(0);
     27e:	80 e0       	ldi	r24, 0x00	; 0
     280:	90 e0       	ldi	r25, 0x00	; 0
     282:	0e 94 0f 05 	call	0xa1e	; 0xa1e <_set_pwm_1B>
		}
	}
	return value;
}
     286:	ce 01       	movw	r24, r28
     288:	df 91       	pop	r29
     28a:	cf 91       	pop	r28
     28c:	08 95       	ret

0000028e <_interrupt0_enable>:

#include <__INT_0_1__.h>

void _interrupt0_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT0);
     28e:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1 << ISC00) | (1 << ISC01);
     290:	e9 e6       	ldi	r30, 0x69	; 105
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	80 81       	ld	r24, Z
     296:	83 60       	ori	r24, 0x03	; 3
     298:	80 83       	st	Z, r24
	sei();
     29a:	78 94       	sei
     29c:	08 95       	ret

0000029e <_interrupt1_enable>:
}
void _interrupt1_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT1);
     29e:	e9 9a       	sbi	0x1d, 1	; 29
	EICRA |= (1 << ISC10) | (1 << ISC11);
     2a0:	e9 e6       	ldi	r30, 0x69	; 105
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	80 81       	ld	r24, Z
     2a6:	8c 60       	ori	r24, 0x0C	; 12
     2a8:	80 83       	st	Z, r24
	sei();
     2aa:	78 94       	sei
     2ac:	08 95       	ret

000002ae <_move_forward>:
	
	return out;
}

int64_t _move_forward()
{
     2ae:	6f 92       	push	r6
     2b0:	7f 92       	push	r7
     2b2:	8f 92       	push	r8
     2b4:	9f 92       	push	r9
     2b6:	af 92       	push	r10
     2b8:	bf 92       	push	r11
     2ba:	cf 92       	push	r12
     2bc:	df 92       	push	r13
     2be:	ef 92       	push	r14
     2c0:	ff 92       	push	r15
     2c2:	0f 93       	push	r16
     2c4:	1f 93       	push	r17
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	cd b7       	in	r28, 0x3d	; 61
     2cc:	de b7       	in	r29, 0x3e	; 62
     2ce:	28 97       	sbiw	r28, 0x08	; 8
     2d0:	0f b6       	in	r0, 0x3f	; 63
     2d2:	f8 94       	cli
     2d4:	de bf       	out	0x3e, r29	; 62
     2d6:	0f be       	out	0x3f, r0	; 63
     2d8:	cd bf       	out	0x3d, r28	; 61
	int32_t start_ticksa = _ticksA();
     2da:	0e 94 c2 04 	call	0x984	; 0x984 <_ticksA>
     2de:	4b 01       	movw	r8, r22
     2e0:	5c 01       	movw	r10, r24
	int32_t start_ticksb = _ticksB();
     2e2:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     2e6:	c6 2e       	mov	r12, r22
     2e8:	77 2e       	mov	r7, r23
     2ea:	68 2e       	mov	r6, r24
     2ec:	d9 2e       	mov	r13, r25
	uint64_t start_time = _micros0();
     2ee:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     2f2:	7b 01       	movw	r14, r22
     2f4:	8c 01       	movw	r16, r24
     2f6:	20 e0       	ldi	r18, 0x00	; 0
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	a9 01       	movw	r20, r18
     2fc:	69 83       	std	Y+1, r22	; 0x01
     2fe:	fa 82       	std	Y+2, r15	; 0x02
     300:	0b 83       	std	Y+3, r16	; 0x03
     302:	1c 83       	std	Y+4, r17	; 0x04
     304:	2d 83       	std	Y+5, r18	; 0x05
     306:	3e 83       	std	Y+6, r19	; 0x06
     308:	4f 83       	std	Y+7, r20	; 0x07
     30a:	58 87       	std	Y+8, r21	; 0x08
	
	_set_speed(MA, SPEED);
     30c:	64 e6       	ldi	r22, 0x64	; 100
     30e:	70 e0       	ldi	r23, 0x00	; 0
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	_set_speed(MB, SPEED);
     316:	64 e6       	ldi	r22, 0x64	; 100
     318:	70 e0       	ldi	r23, 0x00	; 0
     31a:	82 e0       	ldi	r24, 0x02	; 2
     31c:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	if(DEBUG_MOVES)
	{
		printf(">>> SET SPEED >>> %d , %d , %ld ||\n",start_ticksa, start_ticksb,start_time );
     320:	1f 92       	push	r1
     322:	1f 92       	push	r1
     324:	1f 92       	push	r1
     326:	1f 92       	push	r1
     328:	1f 93       	push	r17
     32a:	fb 80       	ldd	r15, Y+3	; 0x03
     32c:	ff 92       	push	r15
     32e:	0a 81       	ldd	r16, Y+2	; 0x02
     330:	0f 93       	push	r16
     332:	19 81       	ldd	r17, Y+1	; 0x01
     334:	1f 93       	push	r17
     336:	df 92       	push	r13
     338:	6f 92       	push	r6
     33a:	7f 92       	push	r7
     33c:	cf 92       	push	r12
     33e:	bf 92       	push	r11
     340:	af 92       	push	r10
     342:	9f 92       	push	r9
     344:	8f 92       	push	r8
     346:	8e e0       	ldi	r24, 0x0E	; 14
     348:	91 e0       	ldi	r25, 0x01	; 1
     34a:	9f 93       	push	r25
     34c:	8f 93       	push	r24
     34e:	0e 94 a2 0c 	call	0x1944	; 0x1944 <printf>
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61
		 * Dummy version
		 *
		 */ 
		int ta = (_ticksA() - start_ticksa);
		int e = _ticksA() - _ticksB(); // comment here because it is a shitty solution with very dump starting point...
		_set_speed(MA,SPEED - W*e);
     35c:	16 ef       	ldi	r17, 0xF6	; 246
     35e:	26 c0       	rjmp	.+76     	; 0x3ac <_move_forward+0xfe>
		/*
		 * Proportional Control
		 * Dummy version
		 *
		 */ 
		int ta = (_ticksA() - start_ticksa);
     360:	0e 94 c2 04 	call	0x984	; 0x984 <_ticksA>
		int e = _ticksA() - _ticksB(); // comment here because it is a shitty solution with very dump starting point...
     364:	0e 94 c2 04 	call	0x984	; 0x984 <_ticksA>
     368:	6b 01       	movw	r12, r22
     36a:	7c 01       	movw	r14, r24
     36c:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     370:	c6 1a       	sub	r12, r22
     372:	d7 0a       	sbc	r13, r23
		_set_speed(MA,SPEED - W*e);
     374:	a6 01       	movw	r20, r12
     376:	14 03       	mulsu	r17, r20
     378:	b0 01       	movw	r22, r0
     37a:	15 9f       	mul	r17, r21
     37c:	70 0d       	add	r23, r0
     37e:	11 24       	eor	r1, r1
     380:	6c 59       	subi	r22, 0x9C	; 156
     382:	7f 4f       	sbci	r23, 0xFF	; 255
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
		_set_speed(MB,SPEED + W*e);
     38a:	c6 01       	movw	r24, r12
     38c:	88 0f       	add	r24, r24
     38e:	99 1f       	adc	r25, r25
     390:	cc 0c       	add	r12, r12
     392:	dd 1c       	adc	r13, r13
     394:	cc 0c       	add	r12, r12
     396:	dd 1c       	adc	r13, r13
     398:	cc 0c       	add	r12, r12
     39a:	dd 1c       	adc	r13, r13
     39c:	c8 0e       	add	r12, r24
     39e:	d9 1e       	adc	r13, r25
     3a0:	b6 01       	movw	r22, r12
     3a2:	6c 59       	subi	r22, 0x9C	; 156
     3a4:	7f 4f       	sbci	r23, 0xFF	; 255
     3a6:	82 e0       	ldi	r24, 0x02	; 2
     3a8:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	if(DEBUG_MOVES)
	{
		printf(">>> SET SPEED >>> %d , %d , %ld ||\n",start_ticksa, start_ticksb,start_time );
	}

	while((_ticksA() - start_ticksa) <= DFT_TICKS)
     3ac:	0e 94 c2 04 	call	0x984	; 0x984 <_ticksA>
     3b0:	dc 01       	movw	r26, r24
     3b2:	cb 01       	movw	r24, r22
     3b4:	88 19       	sub	r24, r8
     3b6:	99 09       	sbc	r25, r9
     3b8:	aa 09       	sbc	r26, r10
     3ba:	bb 09       	sbc	r27, r11
     3bc:	82 97       	sbiw	r24, 0x22	; 34
     3be:	a1 05       	cpc	r26, r1
     3c0:	b1 05       	cpc	r27, r1
     3c2:	74 f2       	brlt	.-100    	; 0x360 <_move_forward+0xb2>
		int ta = (_ticksA() - start_ticksa);
		int e = _ticksA() - _ticksB(); // comment here because it is a shitty solution with very dump starting point...
		_set_speed(MA,SPEED - W*e);
		_set_speed(MB,SPEED + W*e);
	}
	_set_speed(MA,0);
     3c4:	60 e0       	ldi	r22, 0x00	; 0
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	81 e0       	ldi	r24, 0x01	; 1
     3ca:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	_set_speed(MB,0);
     3ce:	60 e0       	ldi	r22, 0x00	; 0
     3d0:	70 e0       	ldi	r23, 0x00	; 0
     3d2:	82 e0       	ldi	r24, 0x02	; 2
     3d4:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	return _micros0() - start_time;
     3d8:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     3dc:	4b 01       	movw	r8, r22
     3de:	5c 01       	movw	r10, r24
     3e0:	26 2f       	mov	r18, r22
     3e2:	39 2d       	mov	r19, r9
     3e4:	4a 2d       	mov	r20, r10
     3e6:	5b 2d       	mov	r21, r11
     3e8:	60 e0       	ldi	r22, 0x00	; 0
     3ea:	70 e0       	ldi	r23, 0x00	; 0
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	a9 80       	ldd	r10, Y+1	; 0x01
     3f2:	ba 80       	ldd	r11, Y+2	; 0x02
     3f4:	cb 80       	ldd	r12, Y+3	; 0x03
     3f6:	dc 80       	ldd	r13, Y+4	; 0x04
     3f8:	e1 2c       	mov	r14, r1
     3fa:	f1 2c       	mov	r15, r1
     3fc:	00 e0       	ldi	r16, 0x00	; 0
     3fe:	10 e0       	ldi	r17, 0x00	; 0
     400:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__subdi3>
}
     404:	28 96       	adiw	r28, 0x08	; 8
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	f8 94       	cli
     40a:	de bf       	out	0x3e, r29	; 62
     40c:	0f be       	out	0x3f, r0	; 63
     40e:	cd bf       	out	0x3d, r28	; 61
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	ff 90       	pop	r15
     41a:	ef 90       	pop	r14
     41c:	df 90       	pop	r13
     41e:	cf 90       	pop	r12
     420:	bf 90       	pop	r11
     422:	af 90       	pop	r10
     424:	9f 90       	pop	r9
     426:	8f 90       	pop	r8
     428:	7f 90       	pop	r7
     42a:	6f 90       	pop	r6
     42c:	08 95       	ret

0000042e <_move_left>:

int64_t _move_left()
{
     42e:	2f 92       	push	r2
     430:	3f 92       	push	r3
     432:	4f 92       	push	r4
     434:	5f 92       	push	r5
     436:	6f 92       	push	r6
     438:	7f 92       	push	r7
     43a:	8f 92       	push	r8
     43c:	9f 92       	push	r9
     43e:	af 92       	push	r10
     440:	bf 92       	push	r11
     442:	cf 92       	push	r12
     444:	df 92       	push	r13
     446:	ef 92       	push	r14
     448:	ff 92       	push	r15
     44a:	0f 93       	push	r16
     44c:	1f 93       	push	r17
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
	printf("start of left\n");
     452:	82 e3       	ldi	r24, 0x32	; 50
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	0e 94 b8 0c 	call	0x1970	; 0x1970 <puts>
	int32_t start_ticksa = _ticksA();
     45a:	0e 94 c2 04 	call	0x984	; 0x984 <_ticksA>
	int32_t start_ticksb = _ticksB();
     45e:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     462:	6b 01       	movw	r12, r22
     464:	7c 01       	movw	r14, r24
	uint64_t start_time = _micros0();
     466:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     46a:	1b 01       	movw	r2, r22
     46c:	2c 01       	movw	r4, r24
	
	_set_speed(MA,  60);
     46e:	6c e3       	ldi	r22, 0x3C	; 60
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	_set_speed(MB, -60);
     478:	64 ec       	ldi	r22, 0xC4	; 196
     47a:	7f ef       	ldi	r23, 0xFF	; 255
     47c:	82 e0       	ldi	r24, 0x02	; 2
     47e:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	if(DEBUG_MOVES)
	{
		printf(">>> SET SPEED >>> ||\n");
     482:	80 e4       	ldi	r24, 0x40	; 64
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	0e 94 b8 0c 	call	0x1970	; 0x1970 <puts>
	}

	while((_ticksB() - start_ticksb) <= DFT_TICKS_TURN)
     48a:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     48e:	dc 01       	movw	r26, r24
     490:	cb 01       	movw	r24, r22
     492:	8c 19       	sub	r24, r12
     494:	9d 09       	sbc	r25, r13
     496:	ae 09       	sbc	r26, r14
     498:	bf 09       	sbc	r27, r15
     49a:	0f 97       	sbiw	r24, 0x0f	; 15
     49c:	a1 05       	cpc	r26, r1
     49e:	b1 05       	cpc	r27, r1
     4a0:	a4 f3       	brlt	.-24     	; 0x48a <_move_left+0x5c>
	{
//		int e = (_ticksA() - start_ticksa) -(_ticksB() - start_ticksb); // comment here because it is a shitty solution with very dump starting point...
//		_set_speed(MA,60 - W*e);
//		_set_speed(MB,-(60 + W*e));
	}
	_set_speed(MA,0);
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	81 e0       	ldi	r24, 0x01	; 1
     4a8:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	_set_speed(MB,0);
     4ac:	60 e0       	ldi	r22, 0x00	; 0
     4ae:	70 e0       	ldi	r23, 0x00	; 0
     4b0:	82 e0       	ldi	r24, 0x02	; 2
     4b2:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	printf("stop speed\n");
     4b6:	85 e5       	ldi	r24, 0x55	; 85
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	0e 94 b8 0c 	call	0x1970	; 0x1970 <puts>
	if(DEBUG_MOVES)
	{
		printf("%d\n", (_ticksB() - start_ticksb));
     4be:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     4c2:	dc 01       	movw	r26, r24
     4c4:	cb 01       	movw	r24, r22
     4c6:	8c 19       	sub	r24, r12
     4c8:	9d 09       	sbc	r25, r13
     4ca:	ae 09       	sbc	r26, r14
     4cc:	bf 09       	sbc	r27, r15
     4ce:	bf 93       	push	r27
     4d0:	af 93       	push	r26
     4d2:	9f 93       	push	r25
     4d4:	8f 93       	push	r24
     4d6:	80 e6       	ldi	r24, 0x60	; 96
     4d8:	91 e0       	ldi	r25, 0x01	; 1
     4da:	9f 93       	push	r25
     4dc:	8f 93       	push	r24
     4de:	0e 94 a2 0c 	call	0x1944	; 0x1944 <printf>
	}
	return _micros0() - start_time;
     4e2:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     4e6:	dc 01       	movw	r26, r24
     4e8:	cb 01       	movw	r24, r22
     4ea:	28 2f       	mov	r18, r24
     4ec:	39 2f       	mov	r19, r25
     4ee:	4a 2f       	mov	r20, r26
     4f0:	5b 2f       	mov	r21, r27
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	a2 2c       	mov	r10, r2
     4fc:	b3 2c       	mov	r11, r3
     4fe:	c4 2c       	mov	r12, r4
     500:	d5 2c       	mov	r13, r5
     502:	e1 2c       	mov	r14, r1
     504:	f1 2c       	mov	r15, r1
     506:	00 e0       	ldi	r16, 0x00	; 0
     508:	10 e0       	ldi	r17, 0x00	; 0
     50a:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__subdi3>
     50e:	0f 90       	pop	r0
     510:	0f 90       	pop	r0
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
     516:	0f 90       	pop	r0
     518:	0f 90       	pop	r0
}
     51a:	df 91       	pop	r29
     51c:	cf 91       	pop	r28
     51e:	1f 91       	pop	r17
     520:	0f 91       	pop	r16
     522:	ff 90       	pop	r15
     524:	ef 90       	pop	r14
     526:	df 90       	pop	r13
     528:	cf 90       	pop	r12
     52a:	bf 90       	pop	r11
     52c:	af 90       	pop	r10
     52e:	9f 90       	pop	r9
     530:	8f 90       	pop	r8
     532:	7f 90       	pop	r7
     534:	6f 90       	pop	r6
     536:	5f 90       	pop	r5
     538:	4f 90       	pop	r4
     53a:	3f 90       	pop	r3
     53c:	2f 90       	pop	r2
     53e:	08 95       	ret

00000540 <_move_right>:

int64_t _move_right()
{
     540:	2f 92       	push	r2
     542:	3f 92       	push	r3
     544:	4f 92       	push	r4
     546:	5f 92       	push	r5
     548:	6f 92       	push	r6
     54a:	7f 92       	push	r7
     54c:	8f 92       	push	r8
     54e:	9f 92       	push	r9
     550:	af 92       	push	r10
     552:	bf 92       	push	r11
     554:	cf 92       	push	r12
     556:	df 92       	push	r13
     558:	ef 92       	push	r14
     55a:	ff 92       	push	r15
     55c:	0f 93       	push	r16
     55e:	1f 93       	push	r17
     560:	cf 93       	push	r28
     562:	df 93       	push	r29
	printf("start of left\n");
     564:	82 e3       	ldi	r24, 0x32	; 50
     566:	91 e0       	ldi	r25, 0x01	; 1
     568:	0e 94 b8 0c 	call	0x1970	; 0x1970 <puts>
	int32_t start_ticksa = _ticksA();
     56c:	0e 94 c2 04 	call	0x984	; 0x984 <_ticksA>
	int32_t start_ticksb = _ticksB();
     570:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     574:	6b 01       	movw	r12, r22
     576:	7c 01       	movw	r14, r24
	uint64_t start_time = _micros0();
     578:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     57c:	1b 01       	movw	r2, r22
     57e:	2c 01       	movw	r4, r24
	
	_set_speed(MA, -60);
     580:	64 ec       	ldi	r22, 0xC4	; 196
     582:	7f ef       	ldi	r23, 0xFF	; 255
     584:	81 e0       	ldi	r24, 0x01	; 1
     586:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	_set_speed(MB, 60);
     58a:	6c e3       	ldi	r22, 0x3C	; 60
     58c:	70 e0       	ldi	r23, 0x00	; 0
     58e:	82 e0       	ldi	r24, 0x02	; 2
     590:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	if(DEBUG_MOVES)
	{
		printf(">>> SET SPEED >>> ||\n");
     594:	80 e4       	ldi	r24, 0x40	; 64
     596:	91 e0       	ldi	r25, 0x01	; 1
     598:	0e 94 b8 0c 	call	0x1970	; 0x1970 <puts>
	}

	while((_ticksB() - start_ticksb) <= DFT_TICKS_TURN)
     59c:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     5a0:	dc 01       	movw	r26, r24
     5a2:	cb 01       	movw	r24, r22
     5a4:	8c 19       	sub	r24, r12
     5a6:	9d 09       	sbc	r25, r13
     5a8:	ae 09       	sbc	r26, r14
     5aa:	bf 09       	sbc	r27, r15
     5ac:	0f 97       	sbiw	r24, 0x0f	; 15
     5ae:	a1 05       	cpc	r26, r1
     5b0:	b1 05       	cpc	r27, r1
     5b2:	a4 f3       	brlt	.-24     	; 0x59c <_move_right+0x5c>
	{
		//		int e = (_ticksA() - start_ticksa) -(_ticksB() - start_ticksb); // comment here because it is a shitty solution with very dump starting point...
		//		_set_speed(MA,60 - W*e);
		//		_set_speed(MB,-(60 + W*e));
	}
	_set_speed(MA,0);
     5b4:	60 e0       	ldi	r22, 0x00	; 0
     5b6:	70 e0       	ldi	r23, 0x00	; 0
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	_set_speed(MB,0);
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	82 e0       	ldi	r24, 0x02	; 2
     5c4:	0e 94 09 01 	call	0x212	; 0x212 <_set_speed>
	printf("stop speed\n");
     5c8:	85 e5       	ldi	r24, 0x55	; 85
     5ca:	91 e0       	ldi	r25, 0x01	; 1
     5cc:	0e 94 b8 0c 	call	0x1970	; 0x1970 <puts>
	if(DEBUG_MOVES)
	{
		printf("%d\n", (_ticksB() - start_ticksb));
     5d0:	0e 94 cb 04 	call	0x996	; 0x996 <_ticksB>
     5d4:	dc 01       	movw	r26, r24
     5d6:	cb 01       	movw	r24, r22
     5d8:	8c 19       	sub	r24, r12
     5da:	9d 09       	sbc	r25, r13
     5dc:	ae 09       	sbc	r26, r14
     5de:	bf 09       	sbc	r27, r15
     5e0:	bf 93       	push	r27
     5e2:	af 93       	push	r26
     5e4:	9f 93       	push	r25
     5e6:	8f 93       	push	r24
     5e8:	80 e6       	ldi	r24, 0x60	; 96
     5ea:	91 e0       	ldi	r25, 0x01	; 1
     5ec:	9f 93       	push	r25
     5ee:	8f 93       	push	r24
     5f0:	0e 94 a2 0c 	call	0x1944	; 0x1944 <printf>
	}
	return _micros0() - start_time;
     5f4:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	28 2f       	mov	r18, r24
     5fe:	39 2f       	mov	r19, r25
     600:	4a 2f       	mov	r20, r26
     602:	5b 2f       	mov	r21, r27
     604:	60 e0       	ldi	r22, 0x00	; 0
     606:	70 e0       	ldi	r23, 0x00	; 0
     608:	80 e0       	ldi	r24, 0x00	; 0
     60a:	90 e0       	ldi	r25, 0x00	; 0
     60c:	a2 2c       	mov	r10, r2
     60e:	b3 2c       	mov	r11, r3
     610:	c4 2c       	mov	r12, r4
     612:	d5 2c       	mov	r13, r5
     614:	e1 2c       	mov	r14, r1
     616:	f1 2c       	mov	r15, r1
     618:	00 e0       	ldi	r16, 0x00	; 0
     61a:	10 e0       	ldi	r17, 0x00	; 0
     61c:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__subdi3>
     620:	0f 90       	pop	r0
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	0f 90       	pop	r0
     62a:	0f 90       	pop	r0
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	1f 91       	pop	r17
     632:	0f 91       	pop	r16
     634:	ff 90       	pop	r15
     636:	ef 90       	pop	r14
     638:	df 90       	pop	r13
     63a:	cf 90       	pop	r12
     63c:	bf 90       	pop	r11
     63e:	af 90       	pop	r10
     640:	9f 90       	pop	r9
     642:	8f 90       	pop	r8
     644:	7f 90       	pop	r7
     646:	6f 90       	pop	r6
     648:	5f 90       	pop	r5
     64a:	4f 90       	pop	r4
     64c:	3f 90       	pop	r3
     64e:	2f 90       	pop	r2
     650:	08 95       	ret

00000652 <_move>:

#define W 10
int64_t _move(int dir)
{
	int64_t out;
	switch (dir)
     652:	83 30       	cpi	r24, 0x03	; 3
     654:	91 05       	cpc	r25, r1
     656:	51 f0       	breq	.+20     	; 0x66c <_move+0x1a>
     658:	84 30       	cpi	r24, 0x04	; 4
     65a:	91 05       	cpc	r25, r1
     65c:	61 f0       	breq	.+24     	; 0x676 <_move+0x24>
     65e:	01 97       	sbiw	r24, 0x01	; 1
     660:	71 f4       	brne	.+28     	; 0x67e <_move+0x2c>
	{
		case FRWD: out =  _move_forward(); break;
     662:	0e 94 57 01 	call	0x2ae	; 0x2ae <_move_forward>
     666:	f8 2f       	mov	r31, r24
     668:	e9 2f       	mov	r30, r25
     66a:	09 c0       	rjmp	.+18     	; 0x67e <_move+0x2c>
//		case BCKD: out =  _move_backward(); break;
		case LEFT: out =  _move_left(); break;
     66c:	0e 94 17 02 	call	0x42e	; 0x42e <_move_left>
     670:	f8 2f       	mov	r31, r24
     672:	e9 2f       	mov	r30, r25
     674:	04 c0       	rjmp	.+8      	; 0x67e <_move+0x2c>
		case RIGT: out =  _move_right(); break;
     676:	0e 94 a0 02 	call	0x540	; 0x540 <_move_right>
     67a:	f8 2f       	mov	r31, r24
     67c:	e9 2f       	mov	r30, r25
		default: break;
	}
	
	return out;
}
     67e:	8f 2f       	mov	r24, r31
     680:	9e 2f       	mov	r25, r30
     682:	08 95       	ret

00000684 <__vector_1>:
	{
		_omega_encb_prev = _omega_enc_b;
		return _dirb * _omega_enc_b;
	}
	//return _tick_timeA;
}
     684:	1f 92       	push	r1
     686:	0f 92       	push	r0
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	0f 92       	push	r0
     68c:	11 24       	eor	r1, r1
     68e:	2f 92       	push	r2
     690:	3f 92       	push	r3
     692:	4f 92       	push	r4
     694:	5f 92       	push	r5
     696:	6f 92       	push	r6
     698:	7f 92       	push	r7
     69a:	8f 92       	push	r8
     69c:	9f 92       	push	r9
     69e:	af 92       	push	r10
     6a0:	bf 92       	push	r11
     6a2:	cf 92       	push	r12
     6a4:	df 92       	push	r13
     6a6:	ef 92       	push	r14
     6a8:	ff 92       	push	r15
     6aa:	0f 93       	push	r16
     6ac:	1f 93       	push	r17
     6ae:	2f 93       	push	r18
     6b0:	3f 93       	push	r19
     6b2:	4f 93       	push	r20
     6b4:	5f 93       	push	r21
     6b6:	6f 93       	push	r22
     6b8:	7f 93       	push	r23
     6ba:	8f 93       	push	r24
     6bc:	9f 93       	push	r25
     6be:	af 93       	push	r26
     6c0:	bf 93       	push	r27
     6c2:	cf 93       	push	r28
     6c4:	df 93       	push	r29
     6c6:	ef 93       	push	r30
     6c8:	ff 93       	push	r31
     6ca:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_enca_count>
     6ce:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <_enca_count+0x1>
     6d2:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <_enca_count+0x2>
     6d6:	b0 91 93 01 	lds	r27, 0x0193	; 0x800193 <_enca_count+0x3>
     6da:	89 2b       	or	r24, r25
     6dc:	8a 2b       	or	r24, r26
     6de:	8b 2b       	or	r24, r27
     6e0:	e9 f4       	brne	.+58     	; 0x71c <__vector_1+0x98>
     6e2:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     6e6:	dc 01       	movw	r26, r24
     6e8:	cb 01       	movw	r24, r22
     6ea:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <_prev_tick_timeA>
     6ee:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <_prev_tick_timeA+0x1>
     6f2:	a0 93 a6 01 	sts	0x01A6, r26	; 0x8001a6 <_prev_tick_timeA+0x2>
     6f6:	b0 93 a7 01 	sts	0x01A7, r27	; 0x8001a7 <_prev_tick_timeA+0x3>
     6fa:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <_prev_tick_timeA+0x4>
     6fe:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <_prev_tick_timeA+0x5>
     702:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <_prev_tick_timeA+0x6>
     706:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <_prev_tick_timeA+0x7>
     70a:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <_omega_enc_a>
     70e:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <_omega_enc_a+0x1>
     712:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <_omega_enc_a+0x2>
     716:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <_omega_enc_a+0x3>
     71a:	3e c0       	rjmp	.+124    	; 0x798 <__vector_1+0x114>
     71c:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     720:	1b 01       	movw	r2, r22
     722:	2c 01       	movw	r4, r24
     724:	a0 90 a4 01 	lds	r10, 0x01A4	; 0x8001a4 <_prev_tick_timeA>
     728:	b0 90 a5 01 	lds	r11, 0x01A5	; 0x8001a5 <_prev_tick_timeA+0x1>
     72c:	c0 90 a6 01 	lds	r12, 0x01A6	; 0x8001a6 <_prev_tick_timeA+0x2>
     730:	d0 90 a7 01 	lds	r13, 0x01A7	; 0x8001a7 <_prev_tick_timeA+0x3>
     734:	e0 90 a8 01 	lds	r14, 0x01A8	; 0x8001a8 <_prev_tick_timeA+0x4>
     738:	f0 90 a9 01 	lds	r15, 0x01A9	; 0x8001a9 <_prev_tick_timeA+0x5>
     73c:	00 91 aa 01 	lds	r16, 0x01AA	; 0x8001aa <_prev_tick_timeA+0x6>
     740:	10 91 ab 01 	lds	r17, 0x01AB	; 0x8001ab <_prev_tick_timeA+0x7>
     744:	26 2f       	mov	r18, r22
     746:	33 2d       	mov	r19, r3
     748:	44 2d       	mov	r20, r4
     74a:	55 2d       	mov	r21, r5
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	70 e0       	ldi	r23, 0x00	; 0
     750:	80 e0       	ldi	r24, 0x00	; 0
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__subdi3>
     758:	20 93 b4 01 	sts	0x01B4, r18	; 0x8001b4 <_tick_timeA>
     75c:	30 93 b5 01 	sts	0x01B5, r19	; 0x8001b5 <_tick_timeA+0x1>
     760:	40 93 b6 01 	sts	0x01B6, r20	; 0x8001b6 <_tick_timeA+0x2>
     764:	50 93 b7 01 	sts	0x01B7, r21	; 0x8001b7 <_tick_timeA+0x3>
     768:	60 93 b8 01 	sts	0x01B8, r22	; 0x8001b8 <_tick_timeA+0x4>
     76c:	70 93 b9 01 	sts	0x01B9, r23	; 0x8001b9 <_tick_timeA+0x5>
     770:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <_tick_timeA+0x6>
     774:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <_tick_timeA+0x7>
     778:	20 92 a4 01 	sts	0x01A4, r2	; 0x8001a4 <_prev_tick_timeA>
     77c:	30 92 a5 01 	sts	0x01A5, r3	; 0x8001a5 <_prev_tick_timeA+0x1>
     780:	40 92 a6 01 	sts	0x01A6, r4	; 0x8001a6 <_prev_tick_timeA+0x2>
     784:	50 92 a7 01 	sts	0x01A7, r5	; 0x8001a7 <_prev_tick_timeA+0x3>
     788:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <_prev_tick_timeA+0x4>
     78c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <_prev_tick_timeA+0x5>
     790:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <_prev_tick_timeA+0x6>
     794:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <_prev_tick_timeA+0x7>
     798:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <_enca_count>
     79c:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <_enca_count+0x1>
     7a0:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <_enca_count+0x2>
     7a4:	b0 91 93 01 	lds	r27, 0x0193	; 0x800193 <_enca_count+0x3>
     7a8:	01 96       	adiw	r24, 0x01	; 1
     7aa:	a1 1d       	adc	r26, r1
     7ac:	b1 1d       	adc	r27, r1
     7ae:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <_enca_count>
     7b2:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <_enca_count+0x1>
     7b6:	a0 93 92 01 	sts	0x0192, r26	; 0x800192 <_enca_count+0x2>
     7ba:	b0 93 93 01 	sts	0x0193, r27	; 0x800193 <_enca_count+0x3>
     7be:	ff 91       	pop	r31
     7c0:	ef 91       	pop	r30
     7c2:	df 91       	pop	r29
     7c4:	cf 91       	pop	r28
     7c6:	bf 91       	pop	r27
     7c8:	af 91       	pop	r26
     7ca:	9f 91       	pop	r25
     7cc:	8f 91       	pop	r24
     7ce:	7f 91       	pop	r23
     7d0:	6f 91       	pop	r22
     7d2:	5f 91       	pop	r21
     7d4:	4f 91       	pop	r20
     7d6:	3f 91       	pop	r19
     7d8:	2f 91       	pop	r18
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	ff 90       	pop	r15
     7e0:	ef 90       	pop	r14
     7e2:	df 90       	pop	r13
     7e4:	cf 90       	pop	r12
     7e6:	bf 90       	pop	r11
     7e8:	af 90       	pop	r10
     7ea:	9f 90       	pop	r9
     7ec:	8f 90       	pop	r8
     7ee:	7f 90       	pop	r7
     7f0:	6f 90       	pop	r6
     7f2:	5f 90       	pop	r5
     7f4:	4f 90       	pop	r4
     7f6:	3f 90       	pop	r3
     7f8:	2f 90       	pop	r2
     7fa:	0f 90       	pop	r0
     7fc:	0f be       	out	0x3f, r0	; 63
     7fe:	0f 90       	pop	r0
     800:	1f 90       	pop	r1
     802:	18 95       	reti

00000804 <__vector_2>:
     804:	1f 92       	push	r1
     806:	0f 92       	push	r0
     808:	0f b6       	in	r0, 0x3f	; 63
     80a:	0f 92       	push	r0
     80c:	11 24       	eor	r1, r1
     80e:	2f 92       	push	r2
     810:	3f 92       	push	r3
     812:	4f 92       	push	r4
     814:	5f 92       	push	r5
     816:	6f 92       	push	r6
     818:	7f 92       	push	r7
     81a:	8f 92       	push	r8
     81c:	9f 92       	push	r9
     81e:	af 92       	push	r10
     820:	bf 92       	push	r11
     822:	cf 92       	push	r12
     824:	df 92       	push	r13
     826:	ef 92       	push	r14
     828:	ff 92       	push	r15
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	2f 93       	push	r18
     830:	3f 93       	push	r19
     832:	4f 93       	push	r20
     834:	5f 93       	push	r21
     836:	6f 93       	push	r22
     838:	7f 93       	push	r23
     83a:	8f 93       	push	r24
     83c:	9f 93       	push	r25
     83e:	af 93       	push	r26
     840:	bf 93       	push	r27
     842:	cf 93       	push	r28
     844:	df 93       	push	r29
     846:	ef 93       	push	r30
     848:	ff 93       	push	r31
     84a:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
     84e:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
     852:	a0 91 8e 01 	lds	r26, 0x018E	; 0x80018e <__data_end+0x2>
     856:	b0 91 8f 01 	lds	r27, 0x018F	; 0x80018f <__data_end+0x3>
     85a:	89 2b       	or	r24, r25
     85c:	8a 2b       	or	r24, r26
     85e:	8b 2b       	or	r24, r27
     860:	e9 f4       	brne	.+58     	; 0x89c <__vector_2+0x98>
     862:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     866:	dc 01       	movw	r26, r24
     868:	cb 01       	movw	r24, r22
     86a:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <_prev_tick_timeB>
     86e:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <_prev_tick_timeB+0x1>
     872:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <_prev_tick_timeB+0x2>
     876:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <_prev_tick_timeB+0x3>
     87a:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <_prev_tick_timeB+0x4>
     87e:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <_prev_tick_timeB+0x5>
     882:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <_prev_tick_timeB+0x6>
     886:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <_prev_tick_timeB+0x7>
     88a:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <_omega_enc_b>
     88e:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <_omega_enc_b+0x1>
     892:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <_omega_enc_b+0x2>
     896:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <_omega_enc_b+0x3>
     89a:	3e c0       	rjmp	.+124    	; 0x918 <__stack+0x19>
     89c:	0e 94 2e 05 	call	0xa5c	; 0xa5c <_micros0>
     8a0:	1b 01       	movw	r2, r22
     8a2:	2c 01       	movw	r4, r24
     8a4:	a0 90 9c 01 	lds	r10, 0x019C	; 0x80019c <_prev_tick_timeB>
     8a8:	b0 90 9d 01 	lds	r11, 0x019D	; 0x80019d <_prev_tick_timeB+0x1>
     8ac:	c0 90 9e 01 	lds	r12, 0x019E	; 0x80019e <_prev_tick_timeB+0x2>
     8b0:	d0 90 9f 01 	lds	r13, 0x019F	; 0x80019f <_prev_tick_timeB+0x3>
     8b4:	e0 90 a0 01 	lds	r14, 0x01A0	; 0x8001a0 <_prev_tick_timeB+0x4>
     8b8:	f0 90 a1 01 	lds	r15, 0x01A1	; 0x8001a1 <_prev_tick_timeB+0x5>
     8bc:	00 91 a2 01 	lds	r16, 0x01A2	; 0x8001a2 <_prev_tick_timeB+0x6>
     8c0:	10 91 a3 01 	lds	r17, 0x01A3	; 0x8001a3 <_prev_tick_timeB+0x7>
     8c4:	26 2f       	mov	r18, r22
     8c6:	33 2d       	mov	r19, r3
     8c8:	44 2d       	mov	r20, r4
     8ca:	55 2d       	mov	r21, r5
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	70 e0       	ldi	r23, 0x00	; 0
     8d0:	80 e0       	ldi	r24, 0x00	; 0
     8d2:	90 e0       	ldi	r25, 0x00	; 0
     8d4:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__subdi3>
     8d8:	20 93 ac 01 	sts	0x01AC, r18	; 0x8001ac <_tick_timeB>
     8dc:	30 93 ad 01 	sts	0x01AD, r19	; 0x8001ad <_tick_timeB+0x1>
     8e0:	40 93 ae 01 	sts	0x01AE, r20	; 0x8001ae <_tick_timeB+0x2>
     8e4:	50 93 af 01 	sts	0x01AF, r21	; 0x8001af <_tick_timeB+0x3>
     8e8:	60 93 b0 01 	sts	0x01B0, r22	; 0x8001b0 <_tick_timeB+0x4>
     8ec:	70 93 b1 01 	sts	0x01B1, r23	; 0x8001b1 <_tick_timeB+0x5>
     8f0:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <_tick_timeB+0x6>
     8f4:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <_tick_timeB+0x7>
     8f8:	20 92 9c 01 	sts	0x019C, r2	; 0x80019c <_prev_tick_timeB>
     8fc:	30 92 9d 01 	sts	0x019D, r3	; 0x80019d <_prev_tick_timeB+0x1>
     900:	40 92 9e 01 	sts	0x019E, r4	; 0x80019e <_prev_tick_timeB+0x2>
     904:	50 92 9f 01 	sts	0x019F, r5	; 0x80019f <_prev_tick_timeB+0x3>
     908:	10 92 a0 01 	sts	0x01A0, r1	; 0x8001a0 <_prev_tick_timeB+0x4>
     90c:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <_prev_tick_timeB+0x5>
     910:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <_prev_tick_timeB+0x6>
     914:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <_prev_tick_timeB+0x7>
     918:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <__data_end>
     91c:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <__data_end+0x1>
     920:	a0 91 8e 01 	lds	r26, 0x018E	; 0x80018e <__data_end+0x2>
     924:	b0 91 8f 01 	lds	r27, 0x018F	; 0x80018f <__data_end+0x3>
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	a1 1d       	adc	r26, r1
     92c:	b1 1d       	adc	r27, r1
     92e:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
     932:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <__data_end+0x1>
     936:	a0 93 8e 01 	sts	0x018E, r26	; 0x80018e <__data_end+0x2>
     93a:	b0 93 8f 01 	sts	0x018F, r27	; 0x80018f <__data_end+0x3>
     93e:	ff 91       	pop	r31
     940:	ef 91       	pop	r30
     942:	df 91       	pop	r29
     944:	cf 91       	pop	r28
     946:	bf 91       	pop	r27
     948:	af 91       	pop	r26
     94a:	9f 91       	pop	r25
     94c:	8f 91       	pop	r24
     94e:	7f 91       	pop	r23
     950:	6f 91       	pop	r22
     952:	5f 91       	pop	r21
     954:	4f 91       	pop	r20
     956:	3f 91       	pop	r19
     958:	2f 91       	pop	r18
     95a:	1f 91       	pop	r17
     95c:	0f 91       	pop	r16
     95e:	ff 90       	pop	r15
     960:	ef 90       	pop	r14
     962:	df 90       	pop	r13
     964:	cf 90       	pop	r12
     966:	bf 90       	pop	r11
     968:	af 90       	pop	r10
     96a:	9f 90       	pop	r9
     96c:	8f 90       	pop	r8
     96e:	7f 90       	pop	r7
     970:	6f 90       	pop	r6
     972:	5f 90       	pop	r5
     974:	4f 90       	pop	r4
     976:	3f 90       	pop	r3
     978:	2f 90       	pop	r2
     97a:	0f 90       	pop	r0
     97c:	0f be       	out	0x3f, r0	; 63
     97e:	0f 90       	pop	r0
     980:	1f 90       	pop	r1
     982:	18 95       	reti

00000984 <_ticksA>:
     984:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <_enca_count>
     988:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <_enca_count+0x1>
     98c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <_enca_count+0x2>
     990:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <_enca_count+0x3>
     994:	08 95       	ret

00000996 <_ticksB>:
     996:	60 91 8c 01 	lds	r22, 0x018C	; 0x80018c <__data_end>
     99a:	70 91 8d 01 	lds	r23, 0x018D	; 0x80018d <__data_end+0x1>
     99e:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <__data_end+0x2>
     9a2:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <__data_end+0x3>
     9a6:	08 95       	ret

000009a8 <__vector_9>:

ISR(TIMER2_OVF_vect)
{
     9a8:	1f 92       	push	r1
     9aa:	0f 92       	push	r0
     9ac:	0f b6       	in	r0, 0x3f	; 63
     9ae:	0f 92       	push	r0
     9b0:	11 24       	eor	r1, r1
// ewmmber to turn it on if you wanna use it
}
     9b2:	0f 90       	pop	r0
     9b4:	0f be       	out	0x3f, r0	; 63
     9b6:	0f 90       	pop	r0
     9b8:	1f 90       	pop	r1
     9ba:	18 95       	reti

000009bc <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
     9bc:	1f 92       	push	r1
     9be:	0f 92       	push	r0
     9c0:	0f b6       	in	r0, 0x3f	; 63
     9c2:	0f 92       	push	r0
     9c4:	11 24       	eor	r1, r1
	// ewmmber to turn it on if you wanna use it
     9c6:	0f 90       	pop	r0
     9c8:	0f be       	out	0x3f, r0	; 63
     9ca:	0f 90       	pop	r0
     9cc:	1f 90       	pop	r1
     9ce:	18 95       	reti

000009d0 <_set_pwm_0A>:

/**
       * sets the PWM output of OCR0A (Motor A rear) 
       */
void _set_pwm_0A(int input/**< [in] @param input a number (0 --> 255) */)
{
     9d0:	99 23       	and	r25, r25
     9d2:	14 f4       	brge	.+4      	; 0x9d8 <_set_pwm_0A+0x8>
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR0A = (uint8_t)input;
     9d8:	8f 3f       	cpi	r24, 0xFF	; 255
     9da:	91 05       	cpc	r25, r1
     9dc:	19 f0       	breq	.+6      	; 0x9e4 <_set_pwm_0A+0x14>
     9de:	14 f0       	brlt	.+4      	; 0x9e4 <_set_pwm_0A+0x14>
     9e0:	8f ef       	ldi	r24, 0xFF	; 255
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	87 bd       	out	0x27, r24	; 39
     9e6:	08 95       	ret

000009e8 <_set_pwm_0B>:

/**
       * sets the PWM output of OCR0B (Motor B rear) 
       */
void _set_pwm_0B(int input/**< [in] @param input a number (0 --> 255)*/)
{
     9e8:	99 23       	and	r25, r25
     9ea:	14 f4       	brge	.+4      	; 0x9f0 <_set_pwm_0B+0x8>
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	90 e0       	ldi	r25, 0x00	; 0
	if (input > 255)
		{input = 255;}
	else if (input < 0)
		{input = 0;}
		
	OCR0B = (uint8_t)input;
     9f0:	8f 3f       	cpi	r24, 0xFF	; 255
     9f2:	91 05       	cpc	r25, r1
     9f4:	19 f0       	breq	.+6      	; 0x9fc <_set_pwm_0B+0x14>
     9f6:	14 f0       	brlt	.+4      	; 0x9fc <_set_pwm_0B+0x14>
     9f8:	8f ef       	ldi	r24, 0xFF	; 255
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	88 bd       	out	0x28, r24	; 40
     9fe:	08 95       	ret

00000a00 <_set_pwm_1A>:

/**
       * sets the PWM output of OCR1A (Motor A front) 
       */
void _set_pwm_1A(int input/**< [in] @param input a number (0 --> 255) */)
{
     a00:	99 23       	and	r25, r25
     a02:	14 f4       	brge	.+4      	; 0xa08 <_set_pwm_1A+0x8>
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1AH = (uint8_t)(input);
     a08:	8f 3f       	cpi	r24, 0xFF	; 255
     a0a:	91 05       	cpc	r25, r1
     a0c:	19 f0       	breq	.+6      	; 0xa14 <_set_pwm_1A+0x14>
     a0e:	14 f0       	brlt	.+4      	; 0xa14 <_set_pwm_1A+0x14>
     a10:	8f ef       	ldi	r24, 0xFF	; 255
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0;
     a18:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     a1c:	08 95       	ret

00000a1e <_set_pwm_1B>:

/**
       * sets the PWM output of OCR1B (Motor B front) 
       */
void _set_pwm_1B(int input /**< [in] @param input a number (0 --> 255)*/)
{
     a1e:	99 23       	and	r25, r25
     a20:	14 f4       	brge	.+4      	; 0xa26 <_set_pwm_1B+0x8>
     a22:	80 e0       	ldi	r24, 0x00	; 0
     a24:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1BH = (uint8_t)(input);
     a26:	8f 3f       	cpi	r24, 0xFF	; 255
     a28:	91 05       	cpc	r25, r1
     a2a:	19 f0       	breq	.+6      	; 0xa32 <_set_pwm_1B+0x14>
     a2c:	14 f0       	brlt	.+4      	; 0xa32 <_set_pwm_1B+0x14>
     a2e:	8f ef       	ldi	r24, 0xFF	; 255
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
	OCR1BL = 0;
     a36:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     a3a:	08 95       	ret

00000a3c <_timer0_init>:
	if ((TIFR0 & (1 << TOV0)) && (TCNT0 < 255))
	{
		_timer0_ovf_cnt++;
	}
	return _TICK_MS_0*(((_timer0_ovf_cnt << 8) + TCNT0));
}
     a3c:	84 b5       	in	r24, 0x24	; 36
     a3e:	80 6a       	ori	r24, 0xA0	; 160
     a40:	84 bd       	out	0x24, r24	; 36
     a42:	84 b5       	in	r24, 0x24	; 36
     a44:	83 60       	ori	r24, 0x03	; 3
     a46:	84 bd       	out	0x24, r24	; 36
     a48:	85 b5       	in	r24, 0x25	; 37
     a4a:	84 60       	ori	r24, 0x04	; 4
     a4c:	85 bd       	out	0x25, r24	; 37
     a4e:	ee e6       	ldi	r30, 0x6E	; 110
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	80 81       	ld	r24, Z
     a54:	81 60       	ori	r24, 0x01	; 1
     a56:	80 83       	st	Z, r24
     a58:	78 94       	sei
     a5a:	08 95       	ret

00000a5c <_micros0>:
     a5c:	af 92       	push	r10
     a5e:	bf 92       	push	r11
     a60:	cf 92       	push	r12
     a62:	df 92       	push	r13
     a64:	ef 92       	push	r14
     a66:	ff 92       	push	r15
     a68:	0f 93       	push	r16
     a6a:	1f 93       	push	r17
     a6c:	a8 9b       	sbis	0x15, 0	; 21
     a6e:	26 c0       	rjmp	.+76     	; 0xabc <_micros0+0x60>
     a70:	86 b5       	in	r24, 0x26	; 38
     a72:	8f 3f       	cpi	r24, 0xFF	; 255
     a74:	19 f1       	breq	.+70     	; 0xabc <_micros0+0x60>
     a76:	20 91 bc 01 	lds	r18, 0x01BC	; 0x8001bc <_timer0_ovf_cnt>
     a7a:	30 91 bd 01 	lds	r19, 0x01BD	; 0x8001bd <_timer0_ovf_cnt+0x1>
     a7e:	40 91 be 01 	lds	r20, 0x01BE	; 0x8001be <_timer0_ovf_cnt+0x2>
     a82:	50 91 bf 01 	lds	r21, 0x01BF	; 0x8001bf <_timer0_ovf_cnt+0x3>
     a86:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <_timer0_ovf_cnt+0x4>
     a8a:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <_timer0_ovf_cnt+0x5>
     a8e:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <_timer0_ovf_cnt+0x6>
     a92:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <_timer0_ovf_cnt+0x7>
     a96:	a1 e0       	ldi	r26, 0x01	; 1
     a98:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__adddi3_s8>
     a9c:	20 93 bc 01 	sts	0x01BC, r18	; 0x8001bc <_timer0_ovf_cnt>
     aa0:	30 93 bd 01 	sts	0x01BD, r19	; 0x8001bd <_timer0_ovf_cnt+0x1>
     aa4:	40 93 be 01 	sts	0x01BE, r20	; 0x8001be <_timer0_ovf_cnt+0x2>
     aa8:	50 93 bf 01 	sts	0x01BF, r21	; 0x8001bf <_timer0_ovf_cnt+0x3>
     aac:	60 93 c0 01 	sts	0x01C0, r22	; 0x8001c0 <_timer0_ovf_cnt+0x4>
     ab0:	70 93 c1 01 	sts	0x01C1, r23	; 0x8001c1 <_timer0_ovf_cnt+0x5>
     ab4:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <_timer0_ovf_cnt+0x6>
     ab8:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <_timer0_ovf_cnt+0x7>
     abc:	a6 b4       	in	r10, 0x26	; 38
     abe:	20 91 bc 01 	lds	r18, 0x01BC	; 0x8001bc <_timer0_ovf_cnt>
     ac2:	30 91 bd 01 	lds	r19, 0x01BD	; 0x8001bd <_timer0_ovf_cnt+0x1>
     ac6:	40 91 be 01 	lds	r20, 0x01BE	; 0x8001be <_timer0_ovf_cnt+0x2>
     aca:	50 91 bf 01 	lds	r21, 0x01BF	; 0x8001bf <_timer0_ovf_cnt+0x3>
     ace:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <_timer0_ovf_cnt+0x4>
     ad2:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <_timer0_ovf_cnt+0x5>
     ad6:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <_timer0_ovf_cnt+0x6>
     ada:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <_timer0_ovf_cnt+0x7>
     ade:	08 e0       	ldi	r16, 0x08	; 8
     ae0:	0e 94 35 0b 	call	0x166a	; 0x166a <__ashldi3>
     ae4:	b1 2c       	mov	r11, r1
     ae6:	c1 2c       	mov	r12, r1
     ae8:	d1 2c       	mov	r13, r1
     aea:	e1 2c       	mov	r14, r1
     aec:	f1 2c       	mov	r15, r1
     aee:	00 e0       	ldi	r16, 0x00	; 0
     af0:	10 e0       	ldi	r17, 0x00	; 0
     af2:	0e 94 4e 0b 	call	0x169c	; 0x169c <__adddi3>
     af6:	82 2f       	mov	r24, r18
     af8:	93 2f       	mov	r25, r19
     afa:	a4 2f       	mov	r26, r20
     afc:	b5 2f       	mov	r27, r21
     afe:	88 0f       	add	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	aa 1f       	adc	r26, r26
     b04:	bb 1f       	adc	r27, r27
     b06:	88 0f       	add	r24, r24
     b08:	99 1f       	adc	r25, r25
     b0a:	aa 1f       	adc	r26, r26
     b0c:	bb 1f       	adc	r27, r27
     b0e:	bc 01       	movw	r22, r24
     b10:	cd 01       	movw	r24, r26
     b12:	66 0f       	add	r22, r22
     b14:	77 1f       	adc	r23, r23
     b16:	88 1f       	adc	r24, r24
     b18:	99 1f       	adc	r25, r25
     b1a:	66 0f       	add	r22, r22
     b1c:	77 1f       	adc	r23, r23
     b1e:	88 1f       	adc	r24, r24
     b20:	99 1f       	adc	r25, r25
     b22:	1f 91       	pop	r17
     b24:	0f 91       	pop	r16
     b26:	ff 90       	pop	r15
     b28:	ef 90       	pop	r14
     b2a:	df 90       	pop	r13
     b2c:	cf 90       	pop	r12
     b2e:	bf 90       	pop	r11
     b30:	af 90       	pop	r10
     b32:	08 95       	ret

00000b34 <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     b34:	1f 92       	push	r1
     b36:	0f 92       	push	r0
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	0f 92       	push	r0
     b3c:	11 24       	eor	r1, r1
     b3e:	2f 93       	push	r18
     b40:	3f 93       	push	r19
     b42:	4f 93       	push	r20
     b44:	5f 93       	push	r21
     b46:	6f 93       	push	r22
     b48:	7f 93       	push	r23
     b4a:	8f 93       	push	r24
     b4c:	9f 93       	push	r25
     b4e:	af 93       	push	r26
	_timer0_ovf_cnt++;
     b50:	20 91 bc 01 	lds	r18, 0x01BC	; 0x8001bc <_timer0_ovf_cnt>
     b54:	30 91 bd 01 	lds	r19, 0x01BD	; 0x8001bd <_timer0_ovf_cnt+0x1>
     b58:	40 91 be 01 	lds	r20, 0x01BE	; 0x8001be <_timer0_ovf_cnt+0x2>
     b5c:	50 91 bf 01 	lds	r21, 0x01BF	; 0x8001bf <_timer0_ovf_cnt+0x3>
     b60:	60 91 c0 01 	lds	r22, 0x01C0	; 0x8001c0 <_timer0_ovf_cnt+0x4>
     b64:	70 91 c1 01 	lds	r23, 0x01C1	; 0x8001c1 <_timer0_ovf_cnt+0x5>
     b68:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <_timer0_ovf_cnt+0x6>
     b6c:	90 91 c3 01 	lds	r25, 0x01C3	; 0x8001c3 <_timer0_ovf_cnt+0x7>
     b70:	a1 e0       	ldi	r26, 0x01	; 1
     b72:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__adddi3_s8>
     b76:	20 93 bc 01 	sts	0x01BC, r18	; 0x8001bc <_timer0_ovf_cnt>
     b7a:	30 93 bd 01 	sts	0x01BD, r19	; 0x8001bd <_timer0_ovf_cnt+0x1>
     b7e:	40 93 be 01 	sts	0x01BE, r20	; 0x8001be <_timer0_ovf_cnt+0x2>
     b82:	50 93 bf 01 	sts	0x01BF, r21	; 0x8001bf <_timer0_ovf_cnt+0x3>
     b86:	60 93 c0 01 	sts	0x01C0, r22	; 0x8001c0 <_timer0_ovf_cnt+0x4>
     b8a:	70 93 c1 01 	sts	0x01C1, r23	; 0x8001c1 <_timer0_ovf_cnt+0x5>
     b8e:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <_timer0_ovf_cnt+0x6>
     b92:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <_timer0_ovf_cnt+0x7>
     b96:	af 91       	pop	r26
     b98:	9f 91       	pop	r25
     b9a:	8f 91       	pop	r24
     b9c:	7f 91       	pop	r23
     b9e:	6f 91       	pop	r22
     ba0:	5f 91       	pop	r21
     ba2:	4f 91       	pop	r20
     ba4:	3f 91       	pop	r19
     ba6:	2f 91       	pop	r18
     ba8:	0f 90       	pop	r0
     baa:	0f be       	out	0x3f, r0	; 63
     bac:	0f 90       	pop	r0
     bae:	1f 90       	pop	r1
     bb0:	18 95       	reti

00000bb2 <_timer1_init>:
uint64_t _millis1(void)
{
	uint16_t tmr = TCNT1L;
	tmr |= (TCNT1H << 8);
	return _TICK_MS_1*(tmr + ( _tmr_overflow_count << 16));
}
     bb2:	e0 e8       	ldi	r30, 0x80	; 128
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	80 81       	ld	r24, Z
     bb8:	80 6a       	ori	r24, 0xA0	; 160
     bba:	80 83       	st	Z, r24
     bbc:	80 81       	ld	r24, Z
     bbe:	82 60       	ori	r24, 0x02	; 2
     bc0:	80 83       	st	Z, r24
     bc2:	8f ef       	ldi	r24, 0xFF	; 255
     bc4:	9f ef       	ldi	r25, 0xFF	; 255
     bc6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     bca:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     bce:	e1 e8       	ldi	r30, 0x81	; 129
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	80 81       	ld	r24, Z
     bd4:	88 61       	ori	r24, 0x18	; 24
     bd6:	80 83       	st	Z, r24
     bd8:	80 81       	ld	r24, Z
     bda:	81 60       	ori	r24, 0x01	; 1
     bdc:	80 83       	st	Z, r24
     bde:	ef e6       	ldi	r30, 0x6F	; 111
     be0:	f0 e0       	ldi	r31, 0x00	; 0
     be2:	80 81       	ld	r24, Z
     be4:	81 60       	ori	r24, 0x01	; 1
     be6:	80 83       	st	Z, r24
     be8:	78 94       	sei
     bea:	08 95       	ret

00000bec <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     bec:	1f 92       	push	r1
     bee:	0f 92       	push	r0
     bf0:	0f b6       	in	r0, 0x3f	; 63
     bf2:	0f 92       	push	r0
     bf4:	11 24       	eor	r1, r1
     bf6:	af 92       	push	r10
     bf8:	bf 92       	push	r11
     bfa:	cf 92       	push	r12
     bfc:	df 92       	push	r13
     bfe:	ef 92       	push	r14
     c00:	ff 92       	push	r15
     c02:	0f 93       	push	r16
     c04:	1f 93       	push	r17
     c06:	2f 93       	push	r18
     c08:	3f 93       	push	r19
     c0a:	4f 93       	push	r20
     c0c:	5f 93       	push	r21
     c0e:	6f 93       	push	r22
     c10:	7f 93       	push	r23
     c12:	8f 93       	push	r24
     c14:	9f 93       	push	r25
     c16:	af 93       	push	r26
     c18:	bf 93       	push	r27
     c1a:	ef 93       	push	r30
     c1c:	ff 93       	push	r31
	_tmr_overflow_count++;
     c1e:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <_tmr_overflow_count>
     c22:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <_tmr_overflow_count+0x1>
     c26:	40 91 c8 01 	lds	r20, 0x01C8	; 0x8001c8 <_tmr_overflow_count+0x2>
     c2a:	50 91 c9 01 	lds	r21, 0x01C9	; 0x8001c9 <_tmr_overflow_count+0x3>
     c2e:	60 91 ca 01 	lds	r22, 0x01CA	; 0x8001ca <_tmr_overflow_count+0x4>
     c32:	70 91 cb 01 	lds	r23, 0x01CB	; 0x8001cb <_tmr_overflow_count+0x5>
     c36:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <_tmr_overflow_count+0x6>
     c3a:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <_tmr_overflow_count+0x7>
     c3e:	a1 e0       	ldi	r26, 0x01	; 1
     c40:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__adddi3_s8>
     c44:	20 93 c6 01 	sts	0x01C6, r18	; 0x8001c6 <_tmr_overflow_count>
     c48:	30 93 c7 01 	sts	0x01C7, r19	; 0x8001c7 <_tmr_overflow_count+0x1>
     c4c:	40 93 c8 01 	sts	0x01C8, r20	; 0x8001c8 <_tmr_overflow_count+0x2>
     c50:	50 93 c9 01 	sts	0x01C9, r21	; 0x8001c9 <_tmr_overflow_count+0x3>
     c54:	60 93 ca 01 	sts	0x01CA, r22	; 0x8001ca <_tmr_overflow_count+0x4>
     c58:	70 93 cb 01 	sts	0x01CB, r23	; 0x8001cb <_tmr_overflow_count+0x5>
     c5c:	80 93 cc 01 	sts	0x01CC, r24	; 0x8001cc <_tmr_overflow_count+0x6>
     c60:	90 93 cd 01 	sts	0x01CD, r25	; 0x8001cd <_tmr_overflow_count+0x7>
	if(_tmr_overflow_count % 6 == 0)
     c64:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <_tmr_overflow_count>
     c68:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <_tmr_overflow_count+0x1>
     c6c:	40 91 c8 01 	lds	r20, 0x01C8	; 0x8001c8 <_tmr_overflow_count+0x2>
     c70:	50 91 c9 01 	lds	r21, 0x01C9	; 0x8001c9 <_tmr_overflow_count+0x3>
     c74:	60 91 ca 01 	lds	r22, 0x01CA	; 0x8001ca <_tmr_overflow_count+0x4>
     c78:	70 91 cb 01 	lds	r23, 0x01CB	; 0x8001cb <_tmr_overflow_count+0x5>
     c7c:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <_tmr_overflow_count+0x6>
     c80:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <_tmr_overflow_count+0x7>
     c84:	0f 2e       	mov	r0, r31
     c86:	f6 e0       	ldi	r31, 0x06	; 6
     c88:	af 2e       	mov	r10, r31
     c8a:	f0 2d       	mov	r31, r0
     c8c:	b1 2c       	mov	r11, r1
     c8e:	c1 2c       	mov	r12, r1
     c90:	d1 2c       	mov	r13, r1
     c92:	e1 2c       	mov	r14, r1
     c94:	f1 2c       	mov	r15, r1
     c96:	00 e0       	ldi	r16, 0x00	; 0
     c98:	10 e0       	ldi	r17, 0x00	; 0
     c9a:	0e 94 9f 0a 	call	0x153e	; 0x153e <__umoddi3>
     c9e:	a0 e0       	ldi	r26, 0x00	; 0
     ca0:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__cmpdi2_s8>
     ca4:	29 f4       	brne	.+10     	; 0xcb0 <__vector_13+0xc4>
	{
		_controler_flag_A = 1;
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	80 93 c5 01 	sts	0x01C5, r24	; 0x8001c5 <_controler_flag_A>
		_controler_flag_B = 1;
     cac:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <_controler_flag_B>
	}
	if (_tmr_overflow_count%2440 == 0 )
     cb0:	20 91 c6 01 	lds	r18, 0x01C6	; 0x8001c6 <_tmr_overflow_count>
     cb4:	30 91 c7 01 	lds	r19, 0x01C7	; 0x8001c7 <_tmr_overflow_count+0x1>
     cb8:	40 91 c8 01 	lds	r20, 0x01C8	; 0x8001c8 <_tmr_overflow_count+0x2>
     cbc:	50 91 c9 01 	lds	r21, 0x01C9	; 0x8001c9 <_tmr_overflow_count+0x3>
     cc0:	60 91 ca 01 	lds	r22, 0x01CA	; 0x8001ca <_tmr_overflow_count+0x4>
     cc4:	70 91 cb 01 	lds	r23, 0x01CB	; 0x8001cb <_tmr_overflow_count+0x5>
     cc8:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <_tmr_overflow_count+0x6>
     ccc:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <_tmr_overflow_count+0x7>
     cd0:	0f 2e       	mov	r0, r31
     cd2:	f8 e8       	ldi	r31, 0x88	; 136
     cd4:	af 2e       	mov	r10, r31
     cd6:	f0 2d       	mov	r31, r0
     cd8:	0f 2e       	mov	r0, r31
     cda:	f9 e0       	ldi	r31, 0x09	; 9
     cdc:	bf 2e       	mov	r11, r31
     cde:	f0 2d       	mov	r31, r0
     ce0:	c1 2c       	mov	r12, r1
     ce2:	d1 2c       	mov	r13, r1
     ce4:	e1 2c       	mov	r14, r1
     ce6:	f1 2c       	mov	r15, r1
     ce8:	00 e0       	ldi	r16, 0x00	; 0
     cea:	10 e0       	ldi	r17, 0x00	; 0
     cec:	0e 94 9f 0a 	call	0x153e	; 0x153e <__umoddi3>
     cf0:	a0 e0       	ldi	r26, 0x00	; 0
     cf2:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__cmpdi2_s8>
     cf6:	79 f4       	brne	.+30     	; 0xd16 <__vector_13+0x12a>
	{
		printf("<btr>%d</btr>\n", __read_btr__);
     cf8:	82 e0       	ldi	r24, 0x02	; 2
     cfa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <_adc_read>
     cfe:	9f 93       	push	r25
     d00:	8f 93       	push	r24
     d02:	84 e6       	ldi	r24, 0x64	; 100
     d04:	91 e0       	ldi	r25, 0x01	; 1
     d06:	9f 93       	push	r25
     d08:	8f 93       	push	r24
     d0a:	0e 94 a2 0c 	call	0x1944	; 0x1944 <printf>
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	0f 90       	pop	r0
     d14:	0f 90       	pop	r0
	}
     d16:	ff 91       	pop	r31
     d18:	ef 91       	pop	r30
     d1a:	bf 91       	pop	r27
     d1c:	af 91       	pop	r26
     d1e:	9f 91       	pop	r25
     d20:	8f 91       	pop	r24
     d22:	7f 91       	pop	r23
     d24:	6f 91       	pop	r22
     d26:	5f 91       	pop	r21
     d28:	4f 91       	pop	r20
     d2a:	3f 91       	pop	r19
     d2c:	2f 91       	pop	r18
     d2e:	1f 91       	pop	r17
     d30:	0f 91       	pop	r16
     d32:	ff 90       	pop	r15
     d34:	ef 90       	pop	r14
     d36:	df 90       	pop	r13
     d38:	cf 90       	pop	r12
     d3a:	bf 90       	pop	r11
     d3c:	af 90       	pop	r10
     d3e:	0f 90       	pop	r0
     d40:	0f be       	out	0x3f, r0	; 63
     d42:	0f 90       	pop	r0
     d44:	1f 90       	pop	r1
     d46:	18 95       	reti

00000d48 <_timer2_init>:

#include <__timer2__.h>

void _timer2_init(void)
{
	TCCR2A = 0;
     d48:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	OCR2A = 128;
     d4c:	80 e8       	ldi	r24, 0x80	; 128
     d4e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	TCCR2B |=(1 << CS22) | (1 << CS21) | (1 << CS20);
     d52:	e1 eb       	ldi	r30, 0xB1	; 177
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	80 81       	ld	r24, Z
     d58:	87 60       	ori	r24, 0x07	; 7
     d5a:	80 83       	st	Z, r24
	TIMSK2 |= (0 << OCIE2A) | (0 << TOIE2);
     d5c:	e0 e7       	ldi	r30, 0x70	; 112
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	80 83       	st	Z, r24
     d64:	08 95       	ret

00000d66 <_uart_put_char>:
static int _uart_put_char(char input, FILE *stream)
{
	//if (input == '\n')
	//_uart_put_char('\r', stream);
	
	while(!((UCSR0A >> UDRE0) & 1)); // wait until buffer is ready for data
     d66:	e0 ec       	ldi	r30, 0xC0	; 192
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	90 81       	ld	r25, Z
     d6c:	95 ff       	sbrs	r25, 5
     d6e:	fd cf       	rjmp	.-6      	; 0xd6a <_uart_put_char+0x4>
	UDR0 = input;
     d70:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	08 95       	ret

00000d7a <_uart_get_char>:

static int _uart_get_char(FILE *stream)
{
	uint8_t c;
	while(!(UCSR0A&(1<<RXC0)));
     d7a:	e0 ec       	ldi	r30, 0xC0	; 192
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	88 23       	and	r24, r24
     d82:	ec f7       	brge	.-6      	; 0xd7e <_uart_get_char+0x4>
	c = UDR0;
     d84:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//_uart_put_char(c,stream); // for debug only
	return c;
}
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	08 95       	ret

00000d8c <usart_init>:

void usart_init(void)
{
	UBRR0H = (uint8_t) (BRC >> 8); // baud
     d8c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t) BRC; // baud
     d90:	80 e1       	ldi	r24, 0x10	; 16
     d92:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	UCSR0B = (1 << TXEN0) | (1 << RXEN0); // enable rx and tx
     d96:	88 e1       	ldi	r24, 0x18	; 24
     d98:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // clock
     d9c:	86 e0       	ldi	r24, 0x06	; 6
     d9e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	//UCSR0A |= (1 << U2X0); // double speed
	
	stdin = stdout = &uart_str; // link stdin and stdout to uart
     da2:	ee ec       	ldi	r30, 0xCE	; 206
     da4:	f1 e0       	ldi	r31, 0x01	; 1
     da6:	80 e0       	ldi	r24, 0x00	; 0
     da8:	91 e0       	ldi	r25, 0x01	; 1
     daa:	93 83       	std	Z+3, r25	; 0x03
     dac:	82 83       	std	Z+2, r24	; 0x02
     dae:	91 83       	std	Z+1, r25	; 0x01
     db0:	80 83       	st	Z, r24
     db2:	08 95       	ret

00000db4 <board_init>:
	 * specific board configuration, found in conf_board.h.
	 */
	
	// IO init
	
	DDRB = 0xFF;
     db4:	8f ef       	ldi	r24, 0xFF	; 255
     db6:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b01100010;
     db8:	82 e6       	ldi	r24, 0x62	; 98
     dba:	8a b9       	out	0x0a, r24	; 10
	
	__led_low(D4);
     dbc:	85 b1       	in	r24, 0x05	; 5
     dbe:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dc0:	2f ef       	ldi	r18, 0xFF	; 255
     dc2:	81 ee       	ldi	r24, 0xE1	; 225
     dc4:	94 e0       	ldi	r25, 0x04	; 4
     dc6:	21 50       	subi	r18, 0x01	; 1
     dc8:	80 40       	sbci	r24, 0x00	; 0
     dca:	90 40       	sbci	r25, 0x00	; 0
     dcc:	e1 f7       	brne	.-8      	; 0xdc6 <board_init+0x12>
     dce:	00 c0       	rjmp	.+0      	; 0xdd0 <board_init+0x1c>
     dd0:	00 00       	nop
	_delay_ms(100);
	__led_high(D4);
     dd2:	28 9a       	sbi	0x05, 0	; 5
	
	
	usart_init();
     dd4:	0e 94 c6 06 	call	0xd8c	; 0xd8c <usart_init>
	_adc_init();
     dd8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <_adc_init>
	_timer1_init();
     ddc:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <_timer1_init>
	_timer0_init();
     de0:	0e 94 1e 05 	call	0xa3c	; 0xa3c <_timer0_init>
	_timer2_init();
     de4:	0e 94 a4 06 	call	0xd48	; 0xd48 <_timer2_init>
	_interrupt0_enable(_INT_RISING_EDGE);
     de8:	83 e0       	ldi	r24, 0x03	; 3
     dea:	0e 94 47 01 	call	0x28e	; 0x28e <_interrupt0_enable>
	_interrupt1_enable(_INT_RISING_EDGE);
     dee:	83 e0       	ldi	r24, 0x03	; 3
     df0:	0e 94 4f 01 	call	0x29e	; 0x29e <_interrupt1_enable>
	printf("---BOARD-INITIALIZED---");
     df4:	83 e7       	ldi	r24, 0x73	; 115
     df6:	91 e0       	ldi	r25, 0x01	; 1
     df8:	9f 93       	push	r25
     dfa:	8f 93       	push	r24
     dfc:	0e 94 a2 0c 	call	0x1944	; 0x1944 <printf>
	
	
}
     e00:	0f 90       	pop	r0
     e02:	0f 90       	pop	r0
     e04:	08 95       	ret

00000e06 <main>:
	_set_speed(MA,val);
	_set_speed(MB,val);
}
int main (void)
{
	cli();
     e06:	f8 94       	cli
	board_init();
     e08:	0e 94 da 06 	call	0xdb4	; 0xdb4 <board_init>
	sei();
     e0c:	78 94       	sei
	while(1)
	{
		_move(FRWD);
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 29 03 	call	0x652	; 0x652 <_move>
     e16:	2f ef       	ldi	r18, 0xFF	; 255
     e18:	87 ea       	ldi	r24, 0xA7	; 167
     e1a:	91 e6       	ldi	r25, 0x61	; 97
     e1c:	21 50       	subi	r18, 0x01	; 1
     e1e:	80 40       	sbci	r24, 0x00	; 0
     e20:	90 40       	sbci	r25, 0x00	; 0
     e22:	e1 f7       	brne	.-8      	; 0xe1c <main+0x16>
     e24:	00 c0       	rjmp	.+0      	; 0xe26 <main+0x20>
     e26:	00 00       	nop
		_delay_ms(2000);
		_move(LEFT);
     e28:	83 e0       	ldi	r24, 0x03	; 3
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 29 03 	call	0x652	; 0x652 <_move>
     e30:	2f ef       	ldi	r18, 0xFF	; 255
     e32:	83 ed       	ldi	r24, 0xD3	; 211
     e34:	90 e3       	ldi	r25, 0x30	; 48
     e36:	21 50       	subi	r18, 0x01	; 1
     e38:	80 40       	sbci	r24, 0x00	; 0
     e3a:	90 40       	sbci	r25, 0x00	; 0
     e3c:	e1 f7       	brne	.-8      	; 0xe36 <main+0x30>
     e3e:	00 c0       	rjmp	.+0      	; 0xe40 <main+0x3a>
     e40:	00 00       	nop
     e42:	e5 cf       	rjmp	.-54     	; 0xe0e <main+0x8>

00000e44 <vfprintf>:
     e44:	a0 e1       	ldi	r26, 0x10	; 16
     e46:	b0 e0       	ldi	r27, 0x00	; 0
     e48:	e8 e2       	ldi	r30, 0x28	; 40
     e4a:	f7 e0       	ldi	r31, 0x07	; 7
     e4c:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__prologue_saves__>
     e50:	7c 01       	movw	r14, r24
     e52:	1b 01       	movw	r2, r22
     e54:	6a 01       	movw	r12, r20
     e56:	fc 01       	movw	r30, r24
     e58:	17 82       	std	Z+7, r1	; 0x07
     e5a:	16 82       	std	Z+6, r1	; 0x06
     e5c:	83 81       	ldd	r24, Z+3	; 0x03
     e5e:	81 ff       	sbrs	r24, 1
     e60:	44 c3       	rjmp	.+1672   	; 0x14ea <vfprintf+0x6a6>
     e62:	9e 01       	movw	r18, r28
     e64:	2f 5f       	subi	r18, 0xFF	; 255
     e66:	3f 4f       	sbci	r19, 0xFF	; 255
     e68:	39 01       	movw	r6, r18
     e6a:	f7 01       	movw	r30, r14
     e6c:	93 81       	ldd	r25, Z+3	; 0x03
     e6e:	f1 01       	movw	r30, r2
     e70:	93 fd       	sbrc	r25, 3
     e72:	85 91       	lpm	r24, Z+
     e74:	93 ff       	sbrs	r25, 3
     e76:	81 91       	ld	r24, Z+
     e78:	1f 01       	movw	r2, r30
     e7a:	88 23       	and	r24, r24
     e7c:	09 f4       	brne	.+2      	; 0xe80 <vfprintf+0x3c>
     e7e:	31 c3       	rjmp	.+1634   	; 0x14e2 <vfprintf+0x69e>
     e80:	85 32       	cpi	r24, 0x25	; 37
     e82:	39 f4       	brne	.+14     	; 0xe92 <vfprintf+0x4e>
     e84:	93 fd       	sbrc	r25, 3
     e86:	85 91       	lpm	r24, Z+
     e88:	93 ff       	sbrs	r25, 3
     e8a:	81 91       	ld	r24, Z+
     e8c:	1f 01       	movw	r2, r30
     e8e:	85 32       	cpi	r24, 0x25	; 37
     e90:	39 f4       	brne	.+14     	; 0xea0 <vfprintf+0x5c>
     e92:	b7 01       	movw	r22, r14
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
     e9a:	56 01       	movw	r10, r12
     e9c:	65 01       	movw	r12, r10
     e9e:	e5 cf       	rjmp	.-54     	; 0xe6a <vfprintf+0x26>
     ea0:	10 e0       	ldi	r17, 0x00	; 0
     ea2:	51 2c       	mov	r5, r1
     ea4:	91 2c       	mov	r9, r1
     ea6:	ff e1       	ldi	r31, 0x1F	; 31
     ea8:	f9 15       	cp	r31, r9
     eaa:	d8 f0       	brcs	.+54     	; 0xee2 <vfprintf+0x9e>
     eac:	8b 32       	cpi	r24, 0x2B	; 43
     eae:	79 f0       	breq	.+30     	; 0xece <vfprintf+0x8a>
     eb0:	38 f4       	brcc	.+14     	; 0xec0 <vfprintf+0x7c>
     eb2:	80 32       	cpi	r24, 0x20	; 32
     eb4:	79 f0       	breq	.+30     	; 0xed4 <vfprintf+0x90>
     eb6:	83 32       	cpi	r24, 0x23	; 35
     eb8:	a1 f4       	brne	.+40     	; 0xee2 <vfprintf+0x9e>
     eba:	f9 2d       	mov	r31, r9
     ebc:	f0 61       	ori	r31, 0x10	; 16
     ebe:	2e c0       	rjmp	.+92     	; 0xf1c <vfprintf+0xd8>
     ec0:	8d 32       	cpi	r24, 0x2D	; 45
     ec2:	61 f0       	breq	.+24     	; 0xedc <vfprintf+0x98>
     ec4:	80 33       	cpi	r24, 0x30	; 48
     ec6:	69 f4       	brne	.+26     	; 0xee2 <vfprintf+0x9e>
     ec8:	29 2d       	mov	r18, r9
     eca:	21 60       	ori	r18, 0x01	; 1
     ecc:	2d c0       	rjmp	.+90     	; 0xf28 <vfprintf+0xe4>
     ece:	39 2d       	mov	r19, r9
     ed0:	32 60       	ori	r19, 0x02	; 2
     ed2:	93 2e       	mov	r9, r19
     ed4:	89 2d       	mov	r24, r9
     ed6:	84 60       	ori	r24, 0x04	; 4
     ed8:	98 2e       	mov	r9, r24
     eda:	2a c0       	rjmp	.+84     	; 0xf30 <vfprintf+0xec>
     edc:	e9 2d       	mov	r30, r9
     ede:	e8 60       	ori	r30, 0x08	; 8
     ee0:	15 c0       	rjmp	.+42     	; 0xf0c <vfprintf+0xc8>
     ee2:	97 fc       	sbrc	r9, 7
     ee4:	2d c0       	rjmp	.+90     	; 0xf40 <vfprintf+0xfc>
     ee6:	20 ed       	ldi	r18, 0xD0	; 208
     ee8:	28 0f       	add	r18, r24
     eea:	2a 30       	cpi	r18, 0x0A	; 10
     eec:	88 f4       	brcc	.+34     	; 0xf10 <vfprintf+0xcc>
     eee:	96 fe       	sbrs	r9, 6
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <vfprintf+0xba>
     ef2:	3a e0       	ldi	r19, 0x0A	; 10
     ef4:	13 9f       	mul	r17, r19
     ef6:	20 0d       	add	r18, r0
     ef8:	11 24       	eor	r1, r1
     efa:	12 2f       	mov	r17, r18
     efc:	19 c0       	rjmp	.+50     	; 0xf30 <vfprintf+0xec>
     efe:	8a e0       	ldi	r24, 0x0A	; 10
     f00:	58 9e       	mul	r5, r24
     f02:	20 0d       	add	r18, r0
     f04:	11 24       	eor	r1, r1
     f06:	52 2e       	mov	r5, r18
     f08:	e9 2d       	mov	r30, r9
     f0a:	e0 62       	ori	r30, 0x20	; 32
     f0c:	9e 2e       	mov	r9, r30
     f0e:	10 c0       	rjmp	.+32     	; 0xf30 <vfprintf+0xec>
     f10:	8e 32       	cpi	r24, 0x2E	; 46
     f12:	31 f4       	brne	.+12     	; 0xf20 <vfprintf+0xdc>
     f14:	96 fc       	sbrc	r9, 6
     f16:	e5 c2       	rjmp	.+1482   	; 0x14e2 <vfprintf+0x69e>
     f18:	f9 2d       	mov	r31, r9
     f1a:	f0 64       	ori	r31, 0x40	; 64
     f1c:	9f 2e       	mov	r9, r31
     f1e:	08 c0       	rjmp	.+16     	; 0xf30 <vfprintf+0xec>
     f20:	8c 36       	cpi	r24, 0x6C	; 108
     f22:	21 f4       	brne	.+8      	; 0xf2c <vfprintf+0xe8>
     f24:	29 2d       	mov	r18, r9
     f26:	20 68       	ori	r18, 0x80	; 128
     f28:	92 2e       	mov	r9, r18
     f2a:	02 c0       	rjmp	.+4      	; 0xf30 <vfprintf+0xec>
     f2c:	88 36       	cpi	r24, 0x68	; 104
     f2e:	41 f4       	brne	.+16     	; 0xf40 <vfprintf+0xfc>
     f30:	f1 01       	movw	r30, r2
     f32:	93 fd       	sbrc	r25, 3
     f34:	85 91       	lpm	r24, Z+
     f36:	93 ff       	sbrs	r25, 3
     f38:	81 91       	ld	r24, Z+
     f3a:	1f 01       	movw	r2, r30
     f3c:	81 11       	cpse	r24, r1
     f3e:	b3 cf       	rjmp	.-154    	; 0xea6 <vfprintf+0x62>
     f40:	9b eb       	ldi	r25, 0xBB	; 187
     f42:	98 0f       	add	r25, r24
     f44:	93 30       	cpi	r25, 0x03	; 3
     f46:	20 f4       	brcc	.+8      	; 0xf50 <vfprintf+0x10c>
     f48:	99 2d       	mov	r25, r9
     f4a:	90 61       	ori	r25, 0x10	; 16
     f4c:	80 5e       	subi	r24, 0xE0	; 224
     f4e:	07 c0       	rjmp	.+14     	; 0xf5e <vfprintf+0x11a>
     f50:	9b e9       	ldi	r25, 0x9B	; 155
     f52:	98 0f       	add	r25, r24
     f54:	93 30       	cpi	r25, 0x03	; 3
     f56:	08 f0       	brcs	.+2      	; 0xf5a <vfprintf+0x116>
     f58:	66 c1       	rjmp	.+716    	; 0x1226 <vfprintf+0x3e2>
     f5a:	99 2d       	mov	r25, r9
     f5c:	9f 7e       	andi	r25, 0xEF	; 239
     f5e:	96 ff       	sbrs	r25, 6
     f60:	16 e0       	ldi	r17, 0x06	; 6
     f62:	9f 73       	andi	r25, 0x3F	; 63
     f64:	99 2e       	mov	r9, r25
     f66:	85 36       	cpi	r24, 0x65	; 101
     f68:	19 f4       	brne	.+6      	; 0xf70 <vfprintf+0x12c>
     f6a:	90 64       	ori	r25, 0x40	; 64
     f6c:	99 2e       	mov	r9, r25
     f6e:	08 c0       	rjmp	.+16     	; 0xf80 <vfprintf+0x13c>
     f70:	86 36       	cpi	r24, 0x66	; 102
     f72:	21 f4       	brne	.+8      	; 0xf7c <vfprintf+0x138>
     f74:	39 2f       	mov	r19, r25
     f76:	30 68       	ori	r19, 0x80	; 128
     f78:	93 2e       	mov	r9, r19
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <vfprintf+0x13c>
     f7c:	11 11       	cpse	r17, r1
     f7e:	11 50       	subi	r17, 0x01	; 1
     f80:	97 fe       	sbrs	r9, 7
     f82:	07 c0       	rjmp	.+14     	; 0xf92 <vfprintf+0x14e>
     f84:	1c 33       	cpi	r17, 0x3C	; 60
     f86:	50 f4       	brcc	.+20     	; 0xf9c <vfprintf+0x158>
     f88:	44 24       	eor	r4, r4
     f8a:	43 94       	inc	r4
     f8c:	41 0e       	add	r4, r17
     f8e:	27 e0       	ldi	r18, 0x07	; 7
     f90:	0b c0       	rjmp	.+22     	; 0xfa8 <vfprintf+0x164>
     f92:	18 30       	cpi	r17, 0x08	; 8
     f94:	38 f0       	brcs	.+14     	; 0xfa4 <vfprintf+0x160>
     f96:	27 e0       	ldi	r18, 0x07	; 7
     f98:	17 e0       	ldi	r17, 0x07	; 7
     f9a:	05 c0       	rjmp	.+10     	; 0xfa6 <vfprintf+0x162>
     f9c:	27 e0       	ldi	r18, 0x07	; 7
     f9e:	9c e3       	ldi	r25, 0x3C	; 60
     fa0:	49 2e       	mov	r4, r25
     fa2:	02 c0       	rjmp	.+4      	; 0xfa8 <vfprintf+0x164>
     fa4:	21 2f       	mov	r18, r17
     fa6:	41 2c       	mov	r4, r1
     fa8:	56 01       	movw	r10, r12
     faa:	84 e0       	ldi	r24, 0x04	; 4
     fac:	a8 0e       	add	r10, r24
     fae:	b1 1c       	adc	r11, r1
     fb0:	f6 01       	movw	r30, r12
     fb2:	60 81       	ld	r22, Z
     fb4:	71 81       	ldd	r23, Z+1	; 0x01
     fb6:	82 81       	ldd	r24, Z+2	; 0x02
     fb8:	93 81       	ldd	r25, Z+3	; 0x03
     fba:	04 2d       	mov	r16, r4
     fbc:	a3 01       	movw	r20, r6
     fbe:	0e 94 78 0b 	call	0x16f0	; 0x16f0 <__ftoa_engine>
     fc2:	6c 01       	movw	r12, r24
     fc4:	f9 81       	ldd	r31, Y+1	; 0x01
     fc6:	fc 87       	std	Y+12, r31	; 0x0c
     fc8:	f0 ff       	sbrs	r31, 0
     fca:	02 c0       	rjmp	.+4      	; 0xfd0 <vfprintf+0x18c>
     fcc:	f3 ff       	sbrs	r31, 3
     fce:	06 c0       	rjmp	.+12     	; 0xfdc <vfprintf+0x198>
     fd0:	91 fc       	sbrc	r9, 1
     fd2:	06 c0       	rjmp	.+12     	; 0xfe0 <vfprintf+0x19c>
     fd4:	92 fe       	sbrs	r9, 2
     fd6:	06 c0       	rjmp	.+12     	; 0xfe4 <vfprintf+0x1a0>
     fd8:	00 e2       	ldi	r16, 0x20	; 32
     fda:	05 c0       	rjmp	.+10     	; 0xfe6 <vfprintf+0x1a2>
     fdc:	0d e2       	ldi	r16, 0x2D	; 45
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <vfprintf+0x1a2>
     fe0:	0b e2       	ldi	r16, 0x2B	; 43
     fe2:	01 c0       	rjmp	.+2      	; 0xfe6 <vfprintf+0x1a2>
     fe4:	00 e0       	ldi	r16, 0x00	; 0
     fe6:	8c 85       	ldd	r24, Y+12	; 0x0c
     fe8:	8c 70       	andi	r24, 0x0C	; 12
     fea:	19 f0       	breq	.+6      	; 0xff2 <vfprintf+0x1ae>
     fec:	01 11       	cpse	r16, r1
     fee:	5a c2       	rjmp	.+1204   	; 0x14a4 <vfprintf+0x660>
     ff0:	9b c2       	rjmp	.+1334   	; 0x1528 <vfprintf+0x6e4>
     ff2:	97 fe       	sbrs	r9, 7
     ff4:	10 c0       	rjmp	.+32     	; 0x1016 <vfprintf+0x1d2>
     ff6:	4c 0c       	add	r4, r12
     ff8:	fc 85       	ldd	r31, Y+12	; 0x0c
     ffa:	f4 ff       	sbrs	r31, 4
     ffc:	04 c0       	rjmp	.+8      	; 0x1006 <vfprintf+0x1c2>
     ffe:	8a 81       	ldd	r24, Y+2	; 0x02
    1000:	81 33       	cpi	r24, 0x31	; 49
    1002:	09 f4       	brne	.+2      	; 0x1006 <vfprintf+0x1c2>
    1004:	4a 94       	dec	r4
    1006:	14 14       	cp	r1, r4
    1008:	74 f5       	brge	.+92     	; 0x1066 <vfprintf+0x222>
    100a:	28 e0       	ldi	r18, 0x08	; 8
    100c:	24 15       	cp	r18, r4
    100e:	78 f5       	brcc	.+94     	; 0x106e <vfprintf+0x22a>
    1010:	88 e0       	ldi	r24, 0x08	; 8
    1012:	48 2e       	mov	r4, r24
    1014:	2c c0       	rjmp	.+88     	; 0x106e <vfprintf+0x22a>
    1016:	96 fc       	sbrc	r9, 6
    1018:	2a c0       	rjmp	.+84     	; 0x106e <vfprintf+0x22a>
    101a:	81 2f       	mov	r24, r17
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	8c 15       	cp	r24, r12
    1020:	9d 05       	cpc	r25, r13
    1022:	9c f0       	brlt	.+38     	; 0x104a <vfprintf+0x206>
    1024:	3c ef       	ldi	r19, 0xFC	; 252
    1026:	c3 16       	cp	r12, r19
    1028:	3f ef       	ldi	r19, 0xFF	; 255
    102a:	d3 06       	cpc	r13, r19
    102c:	74 f0       	brlt	.+28     	; 0x104a <vfprintf+0x206>
    102e:	89 2d       	mov	r24, r9
    1030:	80 68       	ori	r24, 0x80	; 128
    1032:	98 2e       	mov	r9, r24
    1034:	0a c0       	rjmp	.+20     	; 0x104a <vfprintf+0x206>
    1036:	e2 e0       	ldi	r30, 0x02	; 2
    1038:	f0 e0       	ldi	r31, 0x00	; 0
    103a:	ec 0f       	add	r30, r28
    103c:	fd 1f       	adc	r31, r29
    103e:	e1 0f       	add	r30, r17
    1040:	f1 1d       	adc	r31, r1
    1042:	80 81       	ld	r24, Z
    1044:	80 33       	cpi	r24, 0x30	; 48
    1046:	19 f4       	brne	.+6      	; 0x104e <vfprintf+0x20a>
    1048:	11 50       	subi	r17, 0x01	; 1
    104a:	11 11       	cpse	r17, r1
    104c:	f4 cf       	rjmp	.-24     	; 0x1036 <vfprintf+0x1f2>
    104e:	97 fe       	sbrs	r9, 7
    1050:	0e c0       	rjmp	.+28     	; 0x106e <vfprintf+0x22a>
    1052:	44 24       	eor	r4, r4
    1054:	43 94       	inc	r4
    1056:	41 0e       	add	r4, r17
    1058:	81 2f       	mov	r24, r17
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	c8 16       	cp	r12, r24
    105e:	d9 06       	cpc	r13, r25
    1060:	2c f4       	brge	.+10     	; 0x106c <vfprintf+0x228>
    1062:	1c 19       	sub	r17, r12
    1064:	04 c0       	rjmp	.+8      	; 0x106e <vfprintf+0x22a>
    1066:	44 24       	eor	r4, r4
    1068:	43 94       	inc	r4
    106a:	01 c0       	rjmp	.+2      	; 0x106e <vfprintf+0x22a>
    106c:	10 e0       	ldi	r17, 0x00	; 0
    106e:	97 fe       	sbrs	r9, 7
    1070:	06 c0       	rjmp	.+12     	; 0x107e <vfprintf+0x23a>
    1072:	1c 14       	cp	r1, r12
    1074:	1d 04       	cpc	r1, r13
    1076:	34 f4       	brge	.+12     	; 0x1084 <vfprintf+0x240>
    1078:	c6 01       	movw	r24, r12
    107a:	01 96       	adiw	r24, 0x01	; 1
    107c:	05 c0       	rjmp	.+10     	; 0x1088 <vfprintf+0x244>
    107e:	85 e0       	ldi	r24, 0x05	; 5
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	02 c0       	rjmp	.+4      	; 0x1088 <vfprintf+0x244>
    1084:	81 e0       	ldi	r24, 0x01	; 1
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	01 11       	cpse	r16, r1
    108a:	01 96       	adiw	r24, 0x01	; 1
    108c:	11 23       	and	r17, r17
    108e:	31 f0       	breq	.+12     	; 0x109c <vfprintf+0x258>
    1090:	21 2f       	mov	r18, r17
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	2f 5f       	subi	r18, 0xFF	; 255
    1096:	3f 4f       	sbci	r19, 0xFF	; 255
    1098:	82 0f       	add	r24, r18
    109a:	93 1f       	adc	r25, r19
    109c:	25 2d       	mov	r18, r5
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	82 17       	cp	r24, r18
    10a2:	93 07       	cpc	r25, r19
    10a4:	14 f4       	brge	.+4      	; 0x10aa <vfprintf+0x266>
    10a6:	58 1a       	sub	r5, r24
    10a8:	01 c0       	rjmp	.+2      	; 0x10ac <vfprintf+0x268>
    10aa:	51 2c       	mov	r5, r1
    10ac:	89 2d       	mov	r24, r9
    10ae:	89 70       	andi	r24, 0x09	; 9
    10b0:	49 f4       	brne	.+18     	; 0x10c4 <vfprintf+0x280>
    10b2:	55 20       	and	r5, r5
    10b4:	39 f0       	breq	.+14     	; 0x10c4 <vfprintf+0x280>
    10b6:	b7 01       	movw	r22, r14
    10b8:	80 e2       	ldi	r24, 0x20	; 32
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    10c0:	5a 94       	dec	r5
    10c2:	f7 cf       	rjmp	.-18     	; 0x10b2 <vfprintf+0x26e>
    10c4:	00 23       	and	r16, r16
    10c6:	29 f0       	breq	.+10     	; 0x10d2 <vfprintf+0x28e>
    10c8:	b7 01       	movw	r22, r14
    10ca:	80 2f       	mov	r24, r16
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    10d2:	93 fc       	sbrc	r9, 3
    10d4:	09 c0       	rjmp	.+18     	; 0x10e8 <vfprintf+0x2a4>
    10d6:	55 20       	and	r5, r5
    10d8:	39 f0       	breq	.+14     	; 0x10e8 <vfprintf+0x2a4>
    10da:	b7 01       	movw	r22, r14
    10dc:	80 e3       	ldi	r24, 0x30	; 48
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    10e4:	5a 94       	dec	r5
    10e6:	f7 cf       	rjmp	.-18     	; 0x10d6 <vfprintf+0x292>
    10e8:	97 fe       	sbrs	r9, 7
    10ea:	4c c0       	rjmp	.+152    	; 0x1184 <vfprintf+0x340>
    10ec:	46 01       	movw	r8, r12
    10ee:	d7 fe       	sbrs	r13, 7
    10f0:	02 c0       	rjmp	.+4      	; 0x10f6 <vfprintf+0x2b2>
    10f2:	81 2c       	mov	r8, r1
    10f4:	91 2c       	mov	r9, r1
    10f6:	c6 01       	movw	r24, r12
    10f8:	88 19       	sub	r24, r8
    10fa:	99 09       	sbc	r25, r9
    10fc:	f3 01       	movw	r30, r6
    10fe:	e8 0f       	add	r30, r24
    1100:	f9 1f       	adc	r31, r25
    1102:	fe 87       	std	Y+14, r31	; 0x0e
    1104:	ed 87       	std	Y+13, r30	; 0x0d
    1106:	96 01       	movw	r18, r12
    1108:	24 19       	sub	r18, r4
    110a:	31 09       	sbc	r19, r1
    110c:	38 8b       	std	Y+16, r19	; 0x10
    110e:	2f 87       	std	Y+15, r18	; 0x0f
    1110:	01 2f       	mov	r16, r17
    1112:	10 e0       	ldi	r17, 0x00	; 0
    1114:	11 95       	neg	r17
    1116:	01 95       	neg	r16
    1118:	11 09       	sbc	r17, r1
    111a:	3f ef       	ldi	r19, 0xFF	; 255
    111c:	83 16       	cp	r8, r19
    111e:	93 06       	cpc	r9, r19
    1120:	29 f4       	brne	.+10     	; 0x112c <vfprintf+0x2e8>
    1122:	b7 01       	movw	r22, r14
    1124:	8e e2       	ldi	r24, 0x2E	; 46
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    112c:	c8 14       	cp	r12, r8
    112e:	d9 04       	cpc	r13, r9
    1130:	4c f0       	brlt	.+18     	; 0x1144 <vfprintf+0x300>
    1132:	8f 85       	ldd	r24, Y+15	; 0x0f
    1134:	98 89       	ldd	r25, Y+16	; 0x10
    1136:	88 15       	cp	r24, r8
    1138:	99 05       	cpc	r25, r9
    113a:	24 f4       	brge	.+8      	; 0x1144 <vfprintf+0x300>
    113c:	ed 85       	ldd	r30, Y+13	; 0x0d
    113e:	fe 85       	ldd	r31, Y+14	; 0x0e
    1140:	81 81       	ldd	r24, Z+1	; 0x01
    1142:	01 c0       	rjmp	.+2      	; 0x1146 <vfprintf+0x302>
    1144:	80 e3       	ldi	r24, 0x30	; 48
    1146:	f1 e0       	ldi	r31, 0x01	; 1
    1148:	8f 1a       	sub	r8, r31
    114a:	91 08       	sbc	r9, r1
    114c:	2d 85       	ldd	r18, Y+13	; 0x0d
    114e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1150:	2f 5f       	subi	r18, 0xFF	; 255
    1152:	3f 4f       	sbci	r19, 0xFF	; 255
    1154:	3e 87       	std	Y+14, r19	; 0x0e
    1156:	2d 87       	std	Y+13, r18	; 0x0d
    1158:	80 16       	cp	r8, r16
    115a:	91 06       	cpc	r9, r17
    115c:	2c f0       	brlt	.+10     	; 0x1168 <vfprintf+0x324>
    115e:	b7 01       	movw	r22, r14
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    1166:	d9 cf       	rjmp	.-78     	; 0x111a <vfprintf+0x2d6>
    1168:	c8 14       	cp	r12, r8
    116a:	d9 04       	cpc	r13, r9
    116c:	41 f4       	brne	.+16     	; 0x117e <vfprintf+0x33a>
    116e:	9a 81       	ldd	r25, Y+2	; 0x02
    1170:	96 33       	cpi	r25, 0x36	; 54
    1172:	20 f4       	brcc	.+8      	; 0x117c <vfprintf+0x338>
    1174:	95 33       	cpi	r25, 0x35	; 53
    1176:	19 f4       	brne	.+6      	; 0x117e <vfprintf+0x33a>
    1178:	3c 85       	ldd	r19, Y+12	; 0x0c
    117a:	34 ff       	sbrs	r19, 4
    117c:	81 e3       	ldi	r24, 0x31	; 49
    117e:	b7 01       	movw	r22, r14
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	4e c0       	rjmp	.+156    	; 0x1220 <vfprintf+0x3dc>
    1184:	8a 81       	ldd	r24, Y+2	; 0x02
    1186:	81 33       	cpi	r24, 0x31	; 49
    1188:	19 f0       	breq	.+6      	; 0x1190 <vfprintf+0x34c>
    118a:	9c 85       	ldd	r25, Y+12	; 0x0c
    118c:	9f 7e       	andi	r25, 0xEF	; 239
    118e:	9c 87       	std	Y+12, r25	; 0x0c
    1190:	b7 01       	movw	r22, r14
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    1198:	11 11       	cpse	r17, r1
    119a:	05 c0       	rjmp	.+10     	; 0x11a6 <vfprintf+0x362>
    119c:	94 fc       	sbrc	r9, 4
    119e:	18 c0       	rjmp	.+48     	; 0x11d0 <vfprintf+0x38c>
    11a0:	85 e6       	ldi	r24, 0x65	; 101
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	17 c0       	rjmp	.+46     	; 0x11d4 <vfprintf+0x390>
    11a6:	b7 01       	movw	r22, r14
    11a8:	8e e2       	ldi	r24, 0x2E	; 46
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    11b0:	1e 5f       	subi	r17, 0xFE	; 254
    11b2:	82 e0       	ldi	r24, 0x02	; 2
    11b4:	01 e0       	ldi	r16, 0x01	; 1
    11b6:	08 0f       	add	r16, r24
    11b8:	f3 01       	movw	r30, r6
    11ba:	e8 0f       	add	r30, r24
    11bc:	f1 1d       	adc	r31, r1
    11be:	80 81       	ld	r24, Z
    11c0:	b7 01       	movw	r22, r14
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    11c8:	80 2f       	mov	r24, r16
    11ca:	01 13       	cpse	r16, r17
    11cc:	f3 cf       	rjmp	.-26     	; 0x11b4 <vfprintf+0x370>
    11ce:	e6 cf       	rjmp	.-52     	; 0x119c <vfprintf+0x358>
    11d0:	85 e4       	ldi	r24, 0x45	; 69
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	b7 01       	movw	r22, r14
    11d6:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    11da:	d7 fc       	sbrc	r13, 7
    11dc:	06 c0       	rjmp	.+12     	; 0x11ea <vfprintf+0x3a6>
    11de:	c1 14       	cp	r12, r1
    11e0:	d1 04       	cpc	r13, r1
    11e2:	41 f4       	brne	.+16     	; 0x11f4 <vfprintf+0x3b0>
    11e4:	ec 85       	ldd	r30, Y+12	; 0x0c
    11e6:	e4 ff       	sbrs	r30, 4
    11e8:	05 c0       	rjmp	.+10     	; 0x11f4 <vfprintf+0x3b0>
    11ea:	d1 94       	neg	r13
    11ec:	c1 94       	neg	r12
    11ee:	d1 08       	sbc	r13, r1
    11f0:	8d e2       	ldi	r24, 0x2D	; 45
    11f2:	01 c0       	rjmp	.+2      	; 0x11f6 <vfprintf+0x3b2>
    11f4:	8b e2       	ldi	r24, 0x2B	; 43
    11f6:	b7 01       	movw	r22, r14
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    11fe:	80 e3       	ldi	r24, 0x30	; 48
    1200:	2a e0       	ldi	r18, 0x0A	; 10
    1202:	c2 16       	cp	r12, r18
    1204:	d1 04       	cpc	r13, r1
    1206:	2c f0       	brlt	.+10     	; 0x1212 <vfprintf+0x3ce>
    1208:	8f 5f       	subi	r24, 0xFF	; 255
    120a:	fa e0       	ldi	r31, 0x0A	; 10
    120c:	cf 1a       	sub	r12, r31
    120e:	d1 08       	sbc	r13, r1
    1210:	f7 cf       	rjmp	.-18     	; 0x1200 <vfprintf+0x3bc>
    1212:	b7 01       	movw	r22, r14
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    121a:	b7 01       	movw	r22, r14
    121c:	c6 01       	movw	r24, r12
    121e:	c0 96       	adiw	r24, 0x30	; 48
    1220:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    1224:	54 c1       	rjmp	.+680    	; 0x14ce <vfprintf+0x68a>
    1226:	83 36       	cpi	r24, 0x63	; 99
    1228:	31 f0       	breq	.+12     	; 0x1236 <vfprintf+0x3f2>
    122a:	83 37       	cpi	r24, 0x73	; 115
    122c:	79 f0       	breq	.+30     	; 0x124c <vfprintf+0x408>
    122e:	83 35       	cpi	r24, 0x53	; 83
    1230:	09 f0       	breq	.+2      	; 0x1234 <vfprintf+0x3f0>
    1232:	56 c0       	rjmp	.+172    	; 0x12e0 <vfprintf+0x49c>
    1234:	20 c0       	rjmp	.+64     	; 0x1276 <vfprintf+0x432>
    1236:	56 01       	movw	r10, r12
    1238:	32 e0       	ldi	r19, 0x02	; 2
    123a:	a3 0e       	add	r10, r19
    123c:	b1 1c       	adc	r11, r1
    123e:	f6 01       	movw	r30, r12
    1240:	80 81       	ld	r24, Z
    1242:	89 83       	std	Y+1, r24	; 0x01
    1244:	01 e0       	ldi	r16, 0x01	; 1
    1246:	10 e0       	ldi	r17, 0x00	; 0
    1248:	63 01       	movw	r12, r6
    124a:	12 c0       	rjmp	.+36     	; 0x1270 <vfprintf+0x42c>
    124c:	56 01       	movw	r10, r12
    124e:	f2 e0       	ldi	r31, 0x02	; 2
    1250:	af 0e       	add	r10, r31
    1252:	b1 1c       	adc	r11, r1
    1254:	f6 01       	movw	r30, r12
    1256:	c0 80       	ld	r12, Z
    1258:	d1 80       	ldd	r13, Z+1	; 0x01
    125a:	96 fe       	sbrs	r9, 6
    125c:	03 c0       	rjmp	.+6      	; 0x1264 <vfprintf+0x420>
    125e:	61 2f       	mov	r22, r17
    1260:	70 e0       	ldi	r23, 0x00	; 0
    1262:	02 c0       	rjmp	.+4      	; 0x1268 <vfprintf+0x424>
    1264:	6f ef       	ldi	r22, 0xFF	; 255
    1266:	7f ef       	ldi	r23, 0xFF	; 255
    1268:	c6 01       	movw	r24, r12
    126a:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <strnlen>
    126e:	8c 01       	movw	r16, r24
    1270:	f9 2d       	mov	r31, r9
    1272:	ff 77       	andi	r31, 0x7F	; 127
    1274:	14 c0       	rjmp	.+40     	; 0x129e <vfprintf+0x45a>
    1276:	56 01       	movw	r10, r12
    1278:	22 e0       	ldi	r18, 0x02	; 2
    127a:	a2 0e       	add	r10, r18
    127c:	b1 1c       	adc	r11, r1
    127e:	f6 01       	movw	r30, r12
    1280:	c0 80       	ld	r12, Z
    1282:	d1 80       	ldd	r13, Z+1	; 0x01
    1284:	96 fe       	sbrs	r9, 6
    1286:	03 c0       	rjmp	.+6      	; 0x128e <vfprintf+0x44a>
    1288:	61 2f       	mov	r22, r17
    128a:	70 e0       	ldi	r23, 0x00	; 0
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <vfprintf+0x44e>
    128e:	6f ef       	ldi	r22, 0xFF	; 255
    1290:	7f ef       	ldi	r23, 0xFF	; 255
    1292:	c6 01       	movw	r24, r12
    1294:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <strnlen_P>
    1298:	8c 01       	movw	r16, r24
    129a:	f9 2d       	mov	r31, r9
    129c:	f0 68       	ori	r31, 0x80	; 128
    129e:	9f 2e       	mov	r9, r31
    12a0:	f3 fd       	sbrc	r31, 3
    12a2:	1a c0       	rjmp	.+52     	; 0x12d8 <vfprintf+0x494>
    12a4:	85 2d       	mov	r24, r5
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	08 17       	cp	r16, r24
    12aa:	19 07       	cpc	r17, r25
    12ac:	a8 f4       	brcc	.+42     	; 0x12d8 <vfprintf+0x494>
    12ae:	b7 01       	movw	r22, r14
    12b0:	80 e2       	ldi	r24, 0x20	; 32
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    12b8:	5a 94       	dec	r5
    12ba:	f4 cf       	rjmp	.-24     	; 0x12a4 <vfprintf+0x460>
    12bc:	f6 01       	movw	r30, r12
    12be:	97 fc       	sbrc	r9, 7
    12c0:	85 91       	lpm	r24, Z+
    12c2:	97 fe       	sbrs	r9, 7
    12c4:	81 91       	ld	r24, Z+
    12c6:	6f 01       	movw	r12, r30
    12c8:	b7 01       	movw	r22, r14
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    12d0:	51 10       	cpse	r5, r1
    12d2:	5a 94       	dec	r5
    12d4:	01 50       	subi	r16, 0x01	; 1
    12d6:	11 09       	sbc	r17, r1
    12d8:	01 15       	cp	r16, r1
    12da:	11 05       	cpc	r17, r1
    12dc:	79 f7       	brne	.-34     	; 0x12bc <vfprintf+0x478>
    12de:	f7 c0       	rjmp	.+494    	; 0x14ce <vfprintf+0x68a>
    12e0:	84 36       	cpi	r24, 0x64	; 100
    12e2:	11 f0       	breq	.+4      	; 0x12e8 <vfprintf+0x4a4>
    12e4:	89 36       	cpi	r24, 0x69	; 105
    12e6:	61 f5       	brne	.+88     	; 0x1340 <vfprintf+0x4fc>
    12e8:	56 01       	movw	r10, r12
    12ea:	97 fe       	sbrs	r9, 7
    12ec:	09 c0       	rjmp	.+18     	; 0x1300 <vfprintf+0x4bc>
    12ee:	24 e0       	ldi	r18, 0x04	; 4
    12f0:	a2 0e       	add	r10, r18
    12f2:	b1 1c       	adc	r11, r1
    12f4:	f6 01       	movw	r30, r12
    12f6:	60 81       	ld	r22, Z
    12f8:	71 81       	ldd	r23, Z+1	; 0x01
    12fa:	82 81       	ldd	r24, Z+2	; 0x02
    12fc:	93 81       	ldd	r25, Z+3	; 0x03
    12fe:	0a c0       	rjmp	.+20     	; 0x1314 <vfprintf+0x4d0>
    1300:	f2 e0       	ldi	r31, 0x02	; 2
    1302:	af 0e       	add	r10, r31
    1304:	b1 1c       	adc	r11, r1
    1306:	f6 01       	movw	r30, r12
    1308:	60 81       	ld	r22, Z
    130a:	71 81       	ldd	r23, Z+1	; 0x01
    130c:	07 2e       	mov	r0, r23
    130e:	00 0c       	add	r0, r0
    1310:	88 0b       	sbc	r24, r24
    1312:	99 0b       	sbc	r25, r25
    1314:	f9 2d       	mov	r31, r9
    1316:	ff 76       	andi	r31, 0x6F	; 111
    1318:	9f 2e       	mov	r9, r31
    131a:	97 ff       	sbrs	r25, 7
    131c:	09 c0       	rjmp	.+18     	; 0x1330 <vfprintf+0x4ec>
    131e:	90 95       	com	r25
    1320:	80 95       	com	r24
    1322:	70 95       	com	r23
    1324:	61 95       	neg	r22
    1326:	7f 4f       	sbci	r23, 0xFF	; 255
    1328:	8f 4f       	sbci	r24, 0xFF	; 255
    132a:	9f 4f       	sbci	r25, 0xFF	; 255
    132c:	f0 68       	ori	r31, 0x80	; 128
    132e:	9f 2e       	mov	r9, r31
    1330:	2a e0       	ldi	r18, 0x0A	; 10
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	a3 01       	movw	r20, r6
    1336:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__ultoa_invert>
    133a:	c8 2e       	mov	r12, r24
    133c:	c6 18       	sub	r12, r6
    133e:	3f c0       	rjmp	.+126    	; 0x13be <vfprintf+0x57a>
    1340:	09 2d       	mov	r16, r9
    1342:	85 37       	cpi	r24, 0x75	; 117
    1344:	21 f4       	brne	.+8      	; 0x134e <vfprintf+0x50a>
    1346:	0f 7e       	andi	r16, 0xEF	; 239
    1348:	2a e0       	ldi	r18, 0x0A	; 10
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	1d c0       	rjmp	.+58     	; 0x1388 <vfprintf+0x544>
    134e:	09 7f       	andi	r16, 0xF9	; 249
    1350:	8f 36       	cpi	r24, 0x6F	; 111
    1352:	91 f0       	breq	.+36     	; 0x1378 <vfprintf+0x534>
    1354:	18 f4       	brcc	.+6      	; 0x135c <vfprintf+0x518>
    1356:	88 35       	cpi	r24, 0x58	; 88
    1358:	59 f0       	breq	.+22     	; 0x1370 <vfprintf+0x52c>
    135a:	c3 c0       	rjmp	.+390    	; 0x14e2 <vfprintf+0x69e>
    135c:	80 37       	cpi	r24, 0x70	; 112
    135e:	19 f0       	breq	.+6      	; 0x1366 <vfprintf+0x522>
    1360:	88 37       	cpi	r24, 0x78	; 120
    1362:	11 f0       	breq	.+4      	; 0x1368 <vfprintf+0x524>
    1364:	be c0       	rjmp	.+380    	; 0x14e2 <vfprintf+0x69e>
    1366:	00 61       	ori	r16, 0x10	; 16
    1368:	04 ff       	sbrs	r16, 4
    136a:	09 c0       	rjmp	.+18     	; 0x137e <vfprintf+0x53a>
    136c:	04 60       	ori	r16, 0x04	; 4
    136e:	07 c0       	rjmp	.+14     	; 0x137e <vfprintf+0x53a>
    1370:	94 fe       	sbrs	r9, 4
    1372:	08 c0       	rjmp	.+16     	; 0x1384 <vfprintf+0x540>
    1374:	06 60       	ori	r16, 0x06	; 6
    1376:	06 c0       	rjmp	.+12     	; 0x1384 <vfprintf+0x540>
    1378:	28 e0       	ldi	r18, 0x08	; 8
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	05 c0       	rjmp	.+10     	; 0x1388 <vfprintf+0x544>
    137e:	20 e1       	ldi	r18, 0x10	; 16
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <vfprintf+0x544>
    1384:	20 e1       	ldi	r18, 0x10	; 16
    1386:	32 e0       	ldi	r19, 0x02	; 2
    1388:	56 01       	movw	r10, r12
    138a:	07 ff       	sbrs	r16, 7
    138c:	09 c0       	rjmp	.+18     	; 0x13a0 <vfprintf+0x55c>
    138e:	84 e0       	ldi	r24, 0x04	; 4
    1390:	a8 0e       	add	r10, r24
    1392:	b1 1c       	adc	r11, r1
    1394:	f6 01       	movw	r30, r12
    1396:	60 81       	ld	r22, Z
    1398:	71 81       	ldd	r23, Z+1	; 0x01
    139a:	82 81       	ldd	r24, Z+2	; 0x02
    139c:	93 81       	ldd	r25, Z+3	; 0x03
    139e:	08 c0       	rjmp	.+16     	; 0x13b0 <vfprintf+0x56c>
    13a0:	f2 e0       	ldi	r31, 0x02	; 2
    13a2:	af 0e       	add	r10, r31
    13a4:	b1 1c       	adc	r11, r1
    13a6:	f6 01       	movw	r30, r12
    13a8:	60 81       	ld	r22, Z
    13aa:	71 81       	ldd	r23, Z+1	; 0x01
    13ac:	80 e0       	ldi	r24, 0x00	; 0
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	a3 01       	movw	r20, r6
    13b2:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <__ultoa_invert>
    13b6:	c8 2e       	mov	r12, r24
    13b8:	c6 18       	sub	r12, r6
    13ba:	0f 77       	andi	r16, 0x7F	; 127
    13bc:	90 2e       	mov	r9, r16
    13be:	96 fe       	sbrs	r9, 6
    13c0:	0b c0       	rjmp	.+22     	; 0x13d8 <vfprintf+0x594>
    13c2:	09 2d       	mov	r16, r9
    13c4:	0e 7f       	andi	r16, 0xFE	; 254
    13c6:	c1 16       	cp	r12, r17
    13c8:	50 f4       	brcc	.+20     	; 0x13de <vfprintf+0x59a>
    13ca:	94 fe       	sbrs	r9, 4
    13cc:	0a c0       	rjmp	.+20     	; 0x13e2 <vfprintf+0x59e>
    13ce:	92 fc       	sbrc	r9, 2
    13d0:	08 c0       	rjmp	.+16     	; 0x13e2 <vfprintf+0x59e>
    13d2:	09 2d       	mov	r16, r9
    13d4:	0e 7e       	andi	r16, 0xEE	; 238
    13d6:	05 c0       	rjmp	.+10     	; 0x13e2 <vfprintf+0x59e>
    13d8:	dc 2c       	mov	r13, r12
    13da:	09 2d       	mov	r16, r9
    13dc:	03 c0       	rjmp	.+6      	; 0x13e4 <vfprintf+0x5a0>
    13de:	dc 2c       	mov	r13, r12
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <vfprintf+0x5a0>
    13e2:	d1 2e       	mov	r13, r17
    13e4:	04 ff       	sbrs	r16, 4
    13e6:	0d c0       	rjmp	.+26     	; 0x1402 <vfprintf+0x5be>
    13e8:	fe 01       	movw	r30, r28
    13ea:	ec 0d       	add	r30, r12
    13ec:	f1 1d       	adc	r31, r1
    13ee:	80 81       	ld	r24, Z
    13f0:	80 33       	cpi	r24, 0x30	; 48
    13f2:	11 f4       	brne	.+4      	; 0x13f8 <vfprintf+0x5b4>
    13f4:	09 7e       	andi	r16, 0xE9	; 233
    13f6:	09 c0       	rjmp	.+18     	; 0x140a <vfprintf+0x5c6>
    13f8:	02 ff       	sbrs	r16, 2
    13fa:	06 c0       	rjmp	.+12     	; 0x1408 <vfprintf+0x5c4>
    13fc:	d3 94       	inc	r13
    13fe:	d3 94       	inc	r13
    1400:	04 c0       	rjmp	.+8      	; 0x140a <vfprintf+0x5c6>
    1402:	80 2f       	mov	r24, r16
    1404:	86 78       	andi	r24, 0x86	; 134
    1406:	09 f0       	breq	.+2      	; 0x140a <vfprintf+0x5c6>
    1408:	d3 94       	inc	r13
    140a:	03 fd       	sbrc	r16, 3
    140c:	11 c0       	rjmp	.+34     	; 0x1430 <vfprintf+0x5ec>
    140e:	00 ff       	sbrs	r16, 0
    1410:	06 c0       	rjmp	.+12     	; 0x141e <vfprintf+0x5da>
    1412:	1c 2d       	mov	r17, r12
    1414:	d5 14       	cp	r13, r5
    1416:	80 f4       	brcc	.+32     	; 0x1438 <vfprintf+0x5f4>
    1418:	15 0d       	add	r17, r5
    141a:	1d 19       	sub	r17, r13
    141c:	0d c0       	rjmp	.+26     	; 0x1438 <vfprintf+0x5f4>
    141e:	d5 14       	cp	r13, r5
    1420:	58 f4       	brcc	.+22     	; 0x1438 <vfprintf+0x5f4>
    1422:	b7 01       	movw	r22, r14
    1424:	80 e2       	ldi	r24, 0x20	; 32
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    142c:	d3 94       	inc	r13
    142e:	f7 cf       	rjmp	.-18     	; 0x141e <vfprintf+0x5da>
    1430:	d5 14       	cp	r13, r5
    1432:	10 f4       	brcc	.+4      	; 0x1438 <vfprintf+0x5f4>
    1434:	5d 18       	sub	r5, r13
    1436:	01 c0       	rjmp	.+2      	; 0x143a <vfprintf+0x5f6>
    1438:	51 2c       	mov	r5, r1
    143a:	04 ff       	sbrs	r16, 4
    143c:	10 c0       	rjmp	.+32     	; 0x145e <vfprintf+0x61a>
    143e:	b7 01       	movw	r22, r14
    1440:	80 e3       	ldi	r24, 0x30	; 48
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    1448:	02 ff       	sbrs	r16, 2
    144a:	17 c0       	rjmp	.+46     	; 0x147a <vfprintf+0x636>
    144c:	01 fd       	sbrc	r16, 1
    144e:	03 c0       	rjmp	.+6      	; 0x1456 <vfprintf+0x612>
    1450:	88 e7       	ldi	r24, 0x78	; 120
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	02 c0       	rjmp	.+4      	; 0x145a <vfprintf+0x616>
    1456:	88 e5       	ldi	r24, 0x58	; 88
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	b7 01       	movw	r22, r14
    145c:	0c c0       	rjmp	.+24     	; 0x1476 <vfprintf+0x632>
    145e:	80 2f       	mov	r24, r16
    1460:	86 78       	andi	r24, 0x86	; 134
    1462:	59 f0       	breq	.+22     	; 0x147a <vfprintf+0x636>
    1464:	01 ff       	sbrs	r16, 1
    1466:	02 c0       	rjmp	.+4      	; 0x146c <vfprintf+0x628>
    1468:	8b e2       	ldi	r24, 0x2B	; 43
    146a:	01 c0       	rjmp	.+2      	; 0x146e <vfprintf+0x62a>
    146c:	80 e2       	ldi	r24, 0x20	; 32
    146e:	07 fd       	sbrc	r16, 7
    1470:	8d e2       	ldi	r24, 0x2D	; 45
    1472:	b7 01       	movw	r22, r14
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    147a:	c1 16       	cp	r12, r17
    147c:	38 f4       	brcc	.+14     	; 0x148c <vfprintf+0x648>
    147e:	b7 01       	movw	r22, r14
    1480:	80 e3       	ldi	r24, 0x30	; 48
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    1488:	11 50       	subi	r17, 0x01	; 1
    148a:	f7 cf       	rjmp	.-18     	; 0x147a <vfprintf+0x636>
    148c:	ca 94       	dec	r12
    148e:	f3 01       	movw	r30, r6
    1490:	ec 0d       	add	r30, r12
    1492:	f1 1d       	adc	r31, r1
    1494:	80 81       	ld	r24, Z
    1496:	b7 01       	movw	r22, r14
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    149e:	c1 10       	cpse	r12, r1
    14a0:	f5 cf       	rjmp	.-22     	; 0x148c <vfprintf+0x648>
    14a2:	15 c0       	rjmp	.+42     	; 0x14ce <vfprintf+0x68a>
    14a4:	f4 e0       	ldi	r31, 0x04	; 4
    14a6:	f5 15       	cp	r31, r5
    14a8:	60 f5       	brcc	.+88     	; 0x1502 <vfprintf+0x6be>
    14aa:	84 e0       	ldi	r24, 0x04	; 4
    14ac:	58 1a       	sub	r5, r24
    14ae:	93 fe       	sbrs	r9, 3
    14b0:	1f c0       	rjmp	.+62     	; 0x14f0 <vfprintf+0x6ac>
    14b2:	01 11       	cpse	r16, r1
    14b4:	27 c0       	rjmp	.+78     	; 0x1504 <vfprintf+0x6c0>
    14b6:	2c 85       	ldd	r18, Y+12	; 0x0c
    14b8:	23 ff       	sbrs	r18, 3
    14ba:	2a c0       	rjmp	.+84     	; 0x1510 <vfprintf+0x6cc>
    14bc:	08 e6       	ldi	r16, 0x68	; 104
    14be:	10 e0       	ldi	r17, 0x00	; 0
    14c0:	39 2d       	mov	r19, r9
    14c2:	30 71       	andi	r19, 0x10	; 16
    14c4:	93 2e       	mov	r9, r19
    14c6:	f8 01       	movw	r30, r16
    14c8:	84 91       	lpm	r24, Z
    14ca:	81 11       	cpse	r24, r1
    14cc:	24 c0       	rjmp	.+72     	; 0x1516 <vfprintf+0x6d2>
    14ce:	55 20       	and	r5, r5
    14d0:	09 f4       	brne	.+2      	; 0x14d4 <vfprintf+0x690>
    14d2:	e4 cc       	rjmp	.-1592   	; 0xe9c <vfprintf+0x58>
    14d4:	b7 01       	movw	r22, r14
    14d6:	80 e2       	ldi	r24, 0x20	; 32
    14d8:	90 e0       	ldi	r25, 0x00	; 0
    14da:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    14de:	5a 94       	dec	r5
    14e0:	f6 cf       	rjmp	.-20     	; 0x14ce <vfprintf+0x68a>
    14e2:	f7 01       	movw	r30, r14
    14e4:	86 81       	ldd	r24, Z+6	; 0x06
    14e6:	97 81       	ldd	r25, Z+7	; 0x07
    14e8:	26 c0       	rjmp	.+76     	; 0x1536 <vfprintf+0x6f2>
    14ea:	8f ef       	ldi	r24, 0xFF	; 255
    14ec:	9f ef       	ldi	r25, 0xFF	; 255
    14ee:	23 c0       	rjmp	.+70     	; 0x1536 <vfprintf+0x6f2>
    14f0:	b7 01       	movw	r22, r14
    14f2:	80 e2       	ldi	r24, 0x20	; 32
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    14fa:	5a 94       	dec	r5
    14fc:	51 10       	cpse	r5, r1
    14fe:	f8 cf       	rjmp	.-16     	; 0x14f0 <vfprintf+0x6ac>
    1500:	d8 cf       	rjmp	.-80     	; 0x14b2 <vfprintf+0x66e>
    1502:	51 2c       	mov	r5, r1
    1504:	b7 01       	movw	r22, r14
    1506:	80 2f       	mov	r24, r16
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    150e:	d3 cf       	rjmp	.-90     	; 0x14b6 <vfprintf+0x672>
    1510:	0c e6       	ldi	r16, 0x6C	; 108
    1512:	10 e0       	ldi	r17, 0x00	; 0
    1514:	d5 cf       	rjmp	.-86     	; 0x14c0 <vfprintf+0x67c>
    1516:	91 10       	cpse	r9, r1
    1518:	80 52       	subi	r24, 0x20	; 32
    151a:	b7 01       	movw	r22, r14
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	0e 94 66 0c 	call	0x18cc	; 0x18cc <fputc>
    1522:	0f 5f       	subi	r16, 0xFF	; 255
    1524:	1f 4f       	sbci	r17, 0xFF	; 255
    1526:	cf cf       	rjmp	.-98     	; 0x14c6 <vfprintf+0x682>
    1528:	23 e0       	ldi	r18, 0x03	; 3
    152a:	25 15       	cp	r18, r5
    152c:	10 f4       	brcc	.+4      	; 0x1532 <vfprintf+0x6ee>
    152e:	83 e0       	ldi	r24, 0x03	; 3
    1530:	bd cf       	rjmp	.-134    	; 0x14ac <vfprintf+0x668>
    1532:	51 2c       	mov	r5, r1
    1534:	c0 cf       	rjmp	.-128    	; 0x14b6 <vfprintf+0x672>
    1536:	60 96       	adiw	r28, 0x10	; 16
    1538:	e2 e1       	ldi	r30, 0x12	; 18
    153a:	0c 94 1a 0b 	jmp	0x1634	; 0x1634 <__epilogue_restores__>

0000153e <__umoddi3>:
    153e:	68 94       	set
    1540:	01 c0       	rjmp	.+2      	; 0x1544 <__udivdi3_umoddi3>

00001542 <__udivdi3>:
    1542:	e8 94       	clt

00001544 <__udivdi3_umoddi3>:
    1544:	8f 92       	push	r8
    1546:	9f 92       	push	r9
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	0e 94 ad 0a 	call	0x155a	; 0x155a <__udivmod64>
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	9f 90       	pop	r9
    1556:	8f 90       	pop	r8
    1558:	08 95       	ret

0000155a <__udivmod64>:
    155a:	88 24       	eor	r8, r8
    155c:	99 24       	eor	r9, r9
    155e:	f4 01       	movw	r30, r8
    1560:	e4 01       	movw	r28, r8
    1562:	b0 e4       	ldi	r27, 0x40	; 64
    1564:	9f 93       	push	r25
    1566:	aa 27       	eor	r26, r26
    1568:	9a 15       	cp	r25, r10
    156a:	8b 04       	cpc	r8, r11
    156c:	9c 04       	cpc	r9, r12
    156e:	ed 05       	cpc	r30, r13
    1570:	fe 05       	cpc	r31, r14
    1572:	cf 05       	cpc	r28, r15
    1574:	d0 07       	cpc	r29, r16
    1576:	a1 07       	cpc	r26, r17
    1578:	98 f4       	brcc	.+38     	; 0x15a0 <__udivmod64+0x46>
    157a:	ad 2f       	mov	r26, r29
    157c:	dc 2f       	mov	r29, r28
    157e:	cf 2f       	mov	r28, r31
    1580:	fe 2f       	mov	r31, r30
    1582:	e9 2d       	mov	r30, r9
    1584:	98 2c       	mov	r9, r8
    1586:	89 2e       	mov	r8, r25
    1588:	98 2f       	mov	r25, r24
    158a:	87 2f       	mov	r24, r23
    158c:	76 2f       	mov	r23, r22
    158e:	65 2f       	mov	r22, r21
    1590:	54 2f       	mov	r21, r20
    1592:	43 2f       	mov	r20, r19
    1594:	32 2f       	mov	r19, r18
    1596:	22 27       	eor	r18, r18
    1598:	b8 50       	subi	r27, 0x08	; 8
    159a:	31 f7       	brne	.-52     	; 0x1568 <__udivmod64+0xe>
    159c:	bf 91       	pop	r27
    159e:	27 c0       	rjmp	.+78     	; 0x15ee <__udivmod64+0x94>
    15a0:	1b 2e       	mov	r1, r27
    15a2:	bf 91       	pop	r27
    15a4:	bb 27       	eor	r27, r27
    15a6:	22 0f       	add	r18, r18
    15a8:	33 1f       	adc	r19, r19
    15aa:	44 1f       	adc	r20, r20
    15ac:	55 1f       	adc	r21, r21
    15ae:	66 1f       	adc	r22, r22
    15b0:	77 1f       	adc	r23, r23
    15b2:	88 1f       	adc	r24, r24
    15b4:	99 1f       	adc	r25, r25
    15b6:	88 1c       	adc	r8, r8
    15b8:	99 1c       	adc	r9, r9
    15ba:	ee 1f       	adc	r30, r30
    15bc:	ff 1f       	adc	r31, r31
    15be:	cc 1f       	adc	r28, r28
    15c0:	dd 1f       	adc	r29, r29
    15c2:	aa 1f       	adc	r26, r26
    15c4:	bb 1f       	adc	r27, r27
    15c6:	8a 14       	cp	r8, r10
    15c8:	9b 04       	cpc	r9, r11
    15ca:	ec 05       	cpc	r30, r12
    15cc:	fd 05       	cpc	r31, r13
    15ce:	ce 05       	cpc	r28, r14
    15d0:	df 05       	cpc	r29, r15
    15d2:	a0 07       	cpc	r26, r16
    15d4:	b1 07       	cpc	r27, r17
    15d6:	48 f0       	brcs	.+18     	; 0x15ea <__udivmod64+0x90>
    15d8:	8a 18       	sub	r8, r10
    15da:	9b 08       	sbc	r9, r11
    15dc:	ec 09       	sbc	r30, r12
    15de:	fd 09       	sbc	r31, r13
    15e0:	ce 09       	sbc	r28, r14
    15e2:	df 09       	sbc	r29, r15
    15e4:	a0 0b       	sbc	r26, r16
    15e6:	b1 0b       	sbc	r27, r17
    15e8:	21 60       	ori	r18, 0x01	; 1
    15ea:	1a 94       	dec	r1
    15ec:	e1 f6       	brne	.-72     	; 0x15a6 <__udivmod64+0x4c>
    15ee:	2e f4       	brtc	.+10     	; 0x15fa <__udivmod64+0xa0>
    15f0:	94 01       	movw	r18, r8
    15f2:	af 01       	movw	r20, r30
    15f4:	be 01       	movw	r22, r28
    15f6:	cd 01       	movw	r24, r26
    15f8:	00 0c       	add	r0, r0
    15fa:	08 95       	ret

000015fc <__prologue_saves__>:
    15fc:	2f 92       	push	r2
    15fe:	3f 92       	push	r3
    1600:	4f 92       	push	r4
    1602:	5f 92       	push	r5
    1604:	6f 92       	push	r6
    1606:	7f 92       	push	r7
    1608:	8f 92       	push	r8
    160a:	9f 92       	push	r9
    160c:	af 92       	push	r10
    160e:	bf 92       	push	r11
    1610:	cf 92       	push	r12
    1612:	df 92       	push	r13
    1614:	ef 92       	push	r14
    1616:	ff 92       	push	r15
    1618:	0f 93       	push	r16
    161a:	1f 93       	push	r17
    161c:	cf 93       	push	r28
    161e:	df 93       	push	r29
    1620:	cd b7       	in	r28, 0x3d	; 61
    1622:	de b7       	in	r29, 0x3e	; 62
    1624:	ca 1b       	sub	r28, r26
    1626:	db 0b       	sbc	r29, r27
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	f8 94       	cli
    162c:	de bf       	out	0x3e, r29	; 62
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	cd bf       	out	0x3d, r28	; 61
    1632:	09 94       	ijmp

00001634 <__epilogue_restores__>:
    1634:	2a 88       	ldd	r2, Y+18	; 0x12
    1636:	39 88       	ldd	r3, Y+17	; 0x11
    1638:	48 88       	ldd	r4, Y+16	; 0x10
    163a:	5f 84       	ldd	r5, Y+15	; 0x0f
    163c:	6e 84       	ldd	r6, Y+14	; 0x0e
    163e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1640:	8c 84       	ldd	r8, Y+12	; 0x0c
    1642:	9b 84       	ldd	r9, Y+11	; 0x0b
    1644:	aa 84       	ldd	r10, Y+10	; 0x0a
    1646:	b9 84       	ldd	r11, Y+9	; 0x09
    1648:	c8 84       	ldd	r12, Y+8	; 0x08
    164a:	df 80       	ldd	r13, Y+7	; 0x07
    164c:	ee 80       	ldd	r14, Y+6	; 0x06
    164e:	fd 80       	ldd	r15, Y+5	; 0x05
    1650:	0c 81       	ldd	r16, Y+4	; 0x04
    1652:	1b 81       	ldd	r17, Y+3	; 0x03
    1654:	aa 81       	ldd	r26, Y+2	; 0x02
    1656:	b9 81       	ldd	r27, Y+1	; 0x01
    1658:	ce 0f       	add	r28, r30
    165a:	d1 1d       	adc	r29, r1
    165c:	0f b6       	in	r0, 0x3f	; 63
    165e:	f8 94       	cli
    1660:	de bf       	out	0x3e, r29	; 62
    1662:	0f be       	out	0x3f, r0	; 63
    1664:	cd bf       	out	0x3d, r28	; 61
    1666:	ed 01       	movw	r28, r26
    1668:	08 95       	ret

0000166a <__ashldi3>:
    166a:	0f 93       	push	r16
    166c:	08 30       	cpi	r16, 0x08	; 8
    166e:	90 f0       	brcs	.+36     	; 0x1694 <__ashldi3+0x2a>
    1670:	98 2f       	mov	r25, r24
    1672:	87 2f       	mov	r24, r23
    1674:	76 2f       	mov	r23, r22
    1676:	65 2f       	mov	r22, r21
    1678:	54 2f       	mov	r21, r20
    167a:	43 2f       	mov	r20, r19
    167c:	32 2f       	mov	r19, r18
    167e:	22 27       	eor	r18, r18
    1680:	08 50       	subi	r16, 0x08	; 8
    1682:	f4 cf       	rjmp	.-24     	; 0x166c <__ashldi3+0x2>
    1684:	22 0f       	add	r18, r18
    1686:	33 1f       	adc	r19, r19
    1688:	44 1f       	adc	r20, r20
    168a:	55 1f       	adc	r21, r21
    168c:	66 1f       	adc	r22, r22
    168e:	77 1f       	adc	r23, r23
    1690:	88 1f       	adc	r24, r24
    1692:	99 1f       	adc	r25, r25
    1694:	0a 95       	dec	r16
    1696:	b2 f7       	brpl	.-20     	; 0x1684 <__ashldi3+0x1a>
    1698:	0f 91       	pop	r16
    169a:	08 95       	ret

0000169c <__adddi3>:
    169c:	2a 0d       	add	r18, r10
    169e:	3b 1d       	adc	r19, r11
    16a0:	4c 1d       	adc	r20, r12
    16a2:	5d 1d       	adc	r21, r13
    16a4:	6e 1d       	adc	r22, r14
    16a6:	7f 1d       	adc	r23, r15
    16a8:	80 1f       	adc	r24, r16
    16aa:	91 1f       	adc	r25, r17
    16ac:	08 95       	ret

000016ae <__adddi3_s8>:
    16ae:	00 24       	eor	r0, r0
    16b0:	a7 fd       	sbrc	r26, 7
    16b2:	00 94       	com	r0
    16b4:	2a 0f       	add	r18, r26
    16b6:	30 1d       	adc	r19, r0
    16b8:	40 1d       	adc	r20, r0
    16ba:	50 1d       	adc	r21, r0
    16bc:	60 1d       	adc	r22, r0
    16be:	70 1d       	adc	r23, r0
    16c0:	80 1d       	adc	r24, r0
    16c2:	90 1d       	adc	r25, r0
    16c4:	08 95       	ret

000016c6 <__subdi3>:
    16c6:	2a 19       	sub	r18, r10
    16c8:	3b 09       	sbc	r19, r11
    16ca:	4c 09       	sbc	r20, r12
    16cc:	5d 09       	sbc	r21, r13
    16ce:	6e 09       	sbc	r22, r14
    16d0:	7f 09       	sbc	r23, r15
    16d2:	80 0b       	sbc	r24, r16
    16d4:	91 0b       	sbc	r25, r17
    16d6:	08 95       	ret

000016d8 <__cmpdi2_s8>:
    16d8:	00 24       	eor	r0, r0
    16da:	a7 fd       	sbrc	r26, 7
    16dc:	00 94       	com	r0
    16de:	2a 17       	cp	r18, r26
    16e0:	30 05       	cpc	r19, r0
    16e2:	40 05       	cpc	r20, r0
    16e4:	50 05       	cpc	r21, r0
    16e6:	60 05       	cpc	r22, r0
    16e8:	70 05       	cpc	r23, r0
    16ea:	80 05       	cpc	r24, r0
    16ec:	90 05       	cpc	r25, r0
    16ee:	08 95       	ret

000016f0 <__ftoa_engine>:
    16f0:	28 30       	cpi	r18, 0x08	; 8
    16f2:	08 f0       	brcs	.+2      	; 0x16f6 <__ftoa_engine+0x6>
    16f4:	27 e0       	ldi	r18, 0x07	; 7
    16f6:	33 27       	eor	r19, r19
    16f8:	da 01       	movw	r26, r20
    16fa:	99 0f       	add	r25, r25
    16fc:	31 1d       	adc	r19, r1
    16fe:	87 fd       	sbrc	r24, 7
    1700:	91 60       	ori	r25, 0x01	; 1
    1702:	00 96       	adiw	r24, 0x00	; 0
    1704:	61 05       	cpc	r22, r1
    1706:	71 05       	cpc	r23, r1
    1708:	39 f4       	brne	.+14     	; 0x1718 <__ftoa_engine+0x28>
    170a:	32 60       	ori	r19, 0x02	; 2
    170c:	2e 5f       	subi	r18, 0xFE	; 254
    170e:	3d 93       	st	X+, r19
    1710:	30 e3       	ldi	r19, 0x30	; 48
    1712:	2a 95       	dec	r18
    1714:	e1 f7       	brne	.-8      	; 0x170e <__ftoa_engine+0x1e>
    1716:	08 95       	ret
    1718:	9f 3f       	cpi	r25, 0xFF	; 255
    171a:	30 f0       	brcs	.+12     	; 0x1728 <__ftoa_engine+0x38>
    171c:	80 38       	cpi	r24, 0x80	; 128
    171e:	71 05       	cpc	r23, r1
    1720:	61 05       	cpc	r22, r1
    1722:	09 f0       	breq	.+2      	; 0x1726 <__ftoa_engine+0x36>
    1724:	3c 5f       	subi	r19, 0xFC	; 252
    1726:	3c 5f       	subi	r19, 0xFC	; 252
    1728:	3d 93       	st	X+, r19
    172a:	91 30       	cpi	r25, 0x01	; 1
    172c:	08 f0       	brcs	.+2      	; 0x1730 <__ftoa_engine+0x40>
    172e:	80 68       	ori	r24, 0x80	; 128
    1730:	91 1d       	adc	r25, r1
    1732:	df 93       	push	r29
    1734:	cf 93       	push	r28
    1736:	1f 93       	push	r17
    1738:	0f 93       	push	r16
    173a:	ff 92       	push	r15
    173c:	ef 92       	push	r14
    173e:	19 2f       	mov	r17, r25
    1740:	98 7f       	andi	r25, 0xF8	; 248
    1742:	96 95       	lsr	r25
    1744:	e9 2f       	mov	r30, r25
    1746:	96 95       	lsr	r25
    1748:	96 95       	lsr	r25
    174a:	e9 0f       	add	r30, r25
    174c:	ff 27       	eor	r31, r31
    174e:	e6 53       	subi	r30, 0x36	; 54
    1750:	ff 4f       	sbci	r31, 0xFF	; 255
    1752:	99 27       	eor	r25, r25
    1754:	33 27       	eor	r19, r19
    1756:	ee 24       	eor	r14, r14
    1758:	ff 24       	eor	r15, r15
    175a:	a7 01       	movw	r20, r14
    175c:	e7 01       	movw	r28, r14
    175e:	05 90       	lpm	r0, Z+
    1760:	08 94       	sec
    1762:	07 94       	ror	r0
    1764:	28 f4       	brcc	.+10     	; 0x1770 <__ftoa_engine+0x80>
    1766:	36 0f       	add	r19, r22
    1768:	e7 1e       	adc	r14, r23
    176a:	f8 1e       	adc	r15, r24
    176c:	49 1f       	adc	r20, r25
    176e:	51 1d       	adc	r21, r1
    1770:	66 0f       	add	r22, r22
    1772:	77 1f       	adc	r23, r23
    1774:	88 1f       	adc	r24, r24
    1776:	99 1f       	adc	r25, r25
    1778:	06 94       	lsr	r0
    177a:	a1 f7       	brne	.-24     	; 0x1764 <__ftoa_engine+0x74>
    177c:	05 90       	lpm	r0, Z+
    177e:	07 94       	ror	r0
    1780:	28 f4       	brcc	.+10     	; 0x178c <__ftoa_engine+0x9c>
    1782:	e7 0e       	add	r14, r23
    1784:	f8 1e       	adc	r15, r24
    1786:	49 1f       	adc	r20, r25
    1788:	56 1f       	adc	r21, r22
    178a:	c1 1d       	adc	r28, r1
    178c:	77 0f       	add	r23, r23
    178e:	88 1f       	adc	r24, r24
    1790:	99 1f       	adc	r25, r25
    1792:	66 1f       	adc	r22, r22
    1794:	06 94       	lsr	r0
    1796:	a1 f7       	brne	.-24     	; 0x1780 <__ftoa_engine+0x90>
    1798:	05 90       	lpm	r0, Z+
    179a:	07 94       	ror	r0
    179c:	28 f4       	brcc	.+10     	; 0x17a8 <__ftoa_engine+0xb8>
    179e:	f8 0e       	add	r15, r24
    17a0:	49 1f       	adc	r20, r25
    17a2:	56 1f       	adc	r21, r22
    17a4:	c7 1f       	adc	r28, r23
    17a6:	d1 1d       	adc	r29, r1
    17a8:	88 0f       	add	r24, r24
    17aa:	99 1f       	adc	r25, r25
    17ac:	66 1f       	adc	r22, r22
    17ae:	77 1f       	adc	r23, r23
    17b0:	06 94       	lsr	r0
    17b2:	a1 f7       	brne	.-24     	; 0x179c <__ftoa_engine+0xac>
    17b4:	05 90       	lpm	r0, Z+
    17b6:	07 94       	ror	r0
    17b8:	20 f4       	brcc	.+8      	; 0x17c2 <__ftoa_engine+0xd2>
    17ba:	49 0f       	add	r20, r25
    17bc:	56 1f       	adc	r21, r22
    17be:	c7 1f       	adc	r28, r23
    17c0:	d8 1f       	adc	r29, r24
    17c2:	99 0f       	add	r25, r25
    17c4:	66 1f       	adc	r22, r22
    17c6:	77 1f       	adc	r23, r23
    17c8:	88 1f       	adc	r24, r24
    17ca:	06 94       	lsr	r0
    17cc:	a9 f7       	brne	.-22     	; 0x17b8 <__ftoa_engine+0xc8>
    17ce:	84 91       	lpm	r24, Z
    17d0:	10 95       	com	r17
    17d2:	17 70       	andi	r17, 0x07	; 7
    17d4:	41 f0       	breq	.+16     	; 0x17e6 <__ftoa_engine+0xf6>
    17d6:	d6 95       	lsr	r29
    17d8:	c7 95       	ror	r28
    17da:	57 95       	ror	r21
    17dc:	47 95       	ror	r20
    17de:	f7 94       	ror	r15
    17e0:	e7 94       	ror	r14
    17e2:	1a 95       	dec	r17
    17e4:	c1 f7       	brne	.-16     	; 0x17d6 <__ftoa_engine+0xe6>
    17e6:	e0 e7       	ldi	r30, 0x70	; 112
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	68 94       	set
    17ec:	15 90       	lpm	r1, Z+
    17ee:	15 91       	lpm	r17, Z+
    17f0:	35 91       	lpm	r19, Z+
    17f2:	65 91       	lpm	r22, Z+
    17f4:	95 91       	lpm	r25, Z+
    17f6:	05 90       	lpm	r0, Z+
    17f8:	7f e2       	ldi	r23, 0x2F	; 47
    17fa:	73 95       	inc	r23
    17fc:	e1 18       	sub	r14, r1
    17fe:	f1 0a       	sbc	r15, r17
    1800:	43 0b       	sbc	r20, r19
    1802:	56 0b       	sbc	r21, r22
    1804:	c9 0b       	sbc	r28, r25
    1806:	d0 09       	sbc	r29, r0
    1808:	c0 f7       	brcc	.-16     	; 0x17fa <__ftoa_engine+0x10a>
    180a:	e1 0c       	add	r14, r1
    180c:	f1 1e       	adc	r15, r17
    180e:	43 1f       	adc	r20, r19
    1810:	56 1f       	adc	r21, r22
    1812:	c9 1f       	adc	r28, r25
    1814:	d0 1d       	adc	r29, r0
    1816:	7e f4       	brtc	.+30     	; 0x1836 <__ftoa_engine+0x146>
    1818:	70 33       	cpi	r23, 0x30	; 48
    181a:	11 f4       	brne	.+4      	; 0x1820 <__ftoa_engine+0x130>
    181c:	8a 95       	dec	r24
    181e:	e6 cf       	rjmp	.-52     	; 0x17ec <__ftoa_engine+0xfc>
    1820:	e8 94       	clt
    1822:	01 50       	subi	r16, 0x01	; 1
    1824:	30 f0       	brcs	.+12     	; 0x1832 <__ftoa_engine+0x142>
    1826:	08 0f       	add	r16, r24
    1828:	0a f4       	brpl	.+2      	; 0x182c <__ftoa_engine+0x13c>
    182a:	00 27       	eor	r16, r16
    182c:	02 17       	cp	r16, r18
    182e:	08 f4       	brcc	.+2      	; 0x1832 <__ftoa_engine+0x142>
    1830:	20 2f       	mov	r18, r16
    1832:	23 95       	inc	r18
    1834:	02 2f       	mov	r16, r18
    1836:	7a 33       	cpi	r23, 0x3A	; 58
    1838:	28 f0       	brcs	.+10     	; 0x1844 <__ftoa_engine+0x154>
    183a:	79 e3       	ldi	r23, 0x39	; 57
    183c:	7d 93       	st	X+, r23
    183e:	2a 95       	dec	r18
    1840:	e9 f7       	brne	.-6      	; 0x183c <__ftoa_engine+0x14c>
    1842:	10 c0       	rjmp	.+32     	; 0x1864 <__ftoa_engine+0x174>
    1844:	7d 93       	st	X+, r23
    1846:	2a 95       	dec	r18
    1848:	89 f6       	brne	.-94     	; 0x17ec <__ftoa_engine+0xfc>
    184a:	06 94       	lsr	r0
    184c:	97 95       	ror	r25
    184e:	67 95       	ror	r22
    1850:	37 95       	ror	r19
    1852:	17 95       	ror	r17
    1854:	17 94       	ror	r1
    1856:	e1 18       	sub	r14, r1
    1858:	f1 0a       	sbc	r15, r17
    185a:	43 0b       	sbc	r20, r19
    185c:	56 0b       	sbc	r21, r22
    185e:	c9 0b       	sbc	r28, r25
    1860:	d0 09       	sbc	r29, r0
    1862:	98 f0       	brcs	.+38     	; 0x188a <__ftoa_engine+0x19a>
    1864:	23 95       	inc	r18
    1866:	7e 91       	ld	r23, -X
    1868:	73 95       	inc	r23
    186a:	7a 33       	cpi	r23, 0x3A	; 58
    186c:	08 f0       	brcs	.+2      	; 0x1870 <__ftoa_engine+0x180>
    186e:	70 e3       	ldi	r23, 0x30	; 48
    1870:	7c 93       	st	X, r23
    1872:	20 13       	cpse	r18, r16
    1874:	b8 f7       	brcc	.-18     	; 0x1864 <__ftoa_engine+0x174>
    1876:	7e 91       	ld	r23, -X
    1878:	70 61       	ori	r23, 0x10	; 16
    187a:	7d 93       	st	X+, r23
    187c:	30 f0       	brcs	.+12     	; 0x188a <__ftoa_engine+0x19a>
    187e:	83 95       	inc	r24
    1880:	71 e3       	ldi	r23, 0x31	; 49
    1882:	7d 93       	st	X+, r23
    1884:	70 e3       	ldi	r23, 0x30	; 48
    1886:	2a 95       	dec	r18
    1888:	e1 f7       	brne	.-8      	; 0x1882 <__ftoa_engine+0x192>
    188a:	11 24       	eor	r1, r1
    188c:	ef 90       	pop	r14
    188e:	ff 90       	pop	r15
    1890:	0f 91       	pop	r16
    1892:	1f 91       	pop	r17
    1894:	cf 91       	pop	r28
    1896:	df 91       	pop	r29
    1898:	99 27       	eor	r25, r25
    189a:	87 fd       	sbrc	r24, 7
    189c:	90 95       	com	r25
    189e:	08 95       	ret

000018a0 <strnlen_P>:
    18a0:	fc 01       	movw	r30, r24
    18a2:	05 90       	lpm	r0, Z+
    18a4:	61 50       	subi	r22, 0x01	; 1
    18a6:	70 40       	sbci	r23, 0x00	; 0
    18a8:	01 10       	cpse	r0, r1
    18aa:	d8 f7       	brcc	.-10     	; 0x18a2 <strnlen_P+0x2>
    18ac:	80 95       	com	r24
    18ae:	90 95       	com	r25
    18b0:	8e 0f       	add	r24, r30
    18b2:	9f 1f       	adc	r25, r31
    18b4:	08 95       	ret

000018b6 <strnlen>:
    18b6:	fc 01       	movw	r30, r24
    18b8:	61 50       	subi	r22, 0x01	; 1
    18ba:	70 40       	sbci	r23, 0x00	; 0
    18bc:	01 90       	ld	r0, Z+
    18be:	01 10       	cpse	r0, r1
    18c0:	d8 f7       	brcc	.-10     	; 0x18b8 <strnlen+0x2>
    18c2:	80 95       	com	r24
    18c4:	90 95       	com	r25
    18c6:	8e 0f       	add	r24, r30
    18c8:	9f 1f       	adc	r25, r31
    18ca:	08 95       	ret

000018cc <fputc>:
    18cc:	0f 93       	push	r16
    18ce:	1f 93       	push	r17
    18d0:	cf 93       	push	r28
    18d2:	df 93       	push	r29
    18d4:	fb 01       	movw	r30, r22
    18d6:	23 81       	ldd	r18, Z+3	; 0x03
    18d8:	21 fd       	sbrc	r18, 1
    18da:	03 c0       	rjmp	.+6      	; 0x18e2 <fputc+0x16>
    18dc:	8f ef       	ldi	r24, 0xFF	; 255
    18de:	9f ef       	ldi	r25, 0xFF	; 255
    18e0:	2c c0       	rjmp	.+88     	; 0x193a <fputc+0x6e>
    18e2:	22 ff       	sbrs	r18, 2
    18e4:	16 c0       	rjmp	.+44     	; 0x1912 <fputc+0x46>
    18e6:	46 81       	ldd	r20, Z+6	; 0x06
    18e8:	57 81       	ldd	r21, Z+7	; 0x07
    18ea:	24 81       	ldd	r18, Z+4	; 0x04
    18ec:	35 81       	ldd	r19, Z+5	; 0x05
    18ee:	42 17       	cp	r20, r18
    18f0:	53 07       	cpc	r21, r19
    18f2:	44 f4       	brge	.+16     	; 0x1904 <fputc+0x38>
    18f4:	a0 81       	ld	r26, Z
    18f6:	b1 81       	ldd	r27, Z+1	; 0x01
    18f8:	9d 01       	movw	r18, r26
    18fa:	2f 5f       	subi	r18, 0xFF	; 255
    18fc:	3f 4f       	sbci	r19, 0xFF	; 255
    18fe:	31 83       	std	Z+1, r19	; 0x01
    1900:	20 83       	st	Z, r18
    1902:	8c 93       	st	X, r24
    1904:	26 81       	ldd	r18, Z+6	; 0x06
    1906:	37 81       	ldd	r19, Z+7	; 0x07
    1908:	2f 5f       	subi	r18, 0xFF	; 255
    190a:	3f 4f       	sbci	r19, 0xFF	; 255
    190c:	37 83       	std	Z+7, r19	; 0x07
    190e:	26 83       	std	Z+6, r18	; 0x06
    1910:	14 c0       	rjmp	.+40     	; 0x193a <fputc+0x6e>
    1912:	8b 01       	movw	r16, r22
    1914:	ec 01       	movw	r28, r24
    1916:	fb 01       	movw	r30, r22
    1918:	00 84       	ldd	r0, Z+8	; 0x08
    191a:	f1 85       	ldd	r31, Z+9	; 0x09
    191c:	e0 2d       	mov	r30, r0
    191e:	09 95       	icall
    1920:	89 2b       	or	r24, r25
    1922:	e1 f6       	brne	.-72     	; 0x18dc <fputc+0x10>
    1924:	d8 01       	movw	r26, r16
    1926:	16 96       	adiw	r26, 0x06	; 6
    1928:	8d 91       	ld	r24, X+
    192a:	9c 91       	ld	r25, X
    192c:	17 97       	sbiw	r26, 0x07	; 7
    192e:	01 96       	adiw	r24, 0x01	; 1
    1930:	17 96       	adiw	r26, 0x07	; 7
    1932:	9c 93       	st	X, r25
    1934:	8e 93       	st	-X, r24
    1936:	16 97       	sbiw	r26, 0x06	; 6
    1938:	ce 01       	movw	r24, r28
    193a:	df 91       	pop	r29
    193c:	cf 91       	pop	r28
    193e:	1f 91       	pop	r17
    1940:	0f 91       	pop	r16
    1942:	08 95       	ret

00001944 <printf>:
    1944:	a0 e0       	ldi	r26, 0x00	; 0
    1946:	b0 e0       	ldi	r27, 0x00	; 0
    1948:	e8 ea       	ldi	r30, 0xA8	; 168
    194a:	fc e0       	ldi	r31, 0x0C	; 12
    194c:	0c 94 0e 0b 	jmp	0x161c	; 0x161c <__prologue_saves__+0x20>
    1950:	ae 01       	movw	r20, r28
    1952:	4b 5f       	subi	r20, 0xFB	; 251
    1954:	5f 4f       	sbci	r21, 0xFF	; 255
    1956:	fa 01       	movw	r30, r20
    1958:	61 91       	ld	r22, Z+
    195a:	71 91       	ld	r23, Z+
    195c:	af 01       	movw	r20, r30
    195e:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <__iob+0x2>
    1962:	90 91 d1 01 	lds	r25, 0x01D1	; 0x8001d1 <__iob+0x3>
    1966:	0e 94 22 07 	call	0xe44	; 0xe44 <vfprintf>
    196a:	e2 e0       	ldi	r30, 0x02	; 2
    196c:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <__epilogue_restores__+0x20>

00001970 <puts>:
    1970:	0f 93       	push	r16
    1972:	1f 93       	push	r17
    1974:	cf 93       	push	r28
    1976:	df 93       	push	r29
    1978:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <__iob+0x2>
    197c:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <__iob+0x3>
    1980:	23 81       	ldd	r18, Z+3	; 0x03
    1982:	21 ff       	sbrs	r18, 1
    1984:	1b c0       	rjmp	.+54     	; 0x19bc <puts+0x4c>
    1986:	8c 01       	movw	r16, r24
    1988:	d0 e0       	ldi	r29, 0x00	; 0
    198a:	c0 e0       	ldi	r28, 0x00	; 0
    198c:	f8 01       	movw	r30, r16
    198e:	81 91       	ld	r24, Z+
    1990:	8f 01       	movw	r16, r30
    1992:	60 91 d0 01 	lds	r22, 0x01D0	; 0x8001d0 <__iob+0x2>
    1996:	70 91 d1 01 	lds	r23, 0x01D1	; 0x8001d1 <__iob+0x3>
    199a:	db 01       	movw	r26, r22
    199c:	18 96       	adiw	r26, 0x08	; 8
    199e:	ed 91       	ld	r30, X+
    19a0:	fc 91       	ld	r31, X
    19a2:	19 97       	sbiw	r26, 0x09	; 9
    19a4:	88 23       	and	r24, r24
    19a6:	31 f0       	breq	.+12     	; 0x19b4 <puts+0x44>
    19a8:	09 95       	icall
    19aa:	89 2b       	or	r24, r25
    19ac:	79 f3       	breq	.-34     	; 0x198c <puts+0x1c>
    19ae:	df ef       	ldi	r29, 0xFF	; 255
    19b0:	cf ef       	ldi	r28, 0xFF	; 255
    19b2:	ec cf       	rjmp	.-40     	; 0x198c <puts+0x1c>
    19b4:	8a e0       	ldi	r24, 0x0A	; 10
    19b6:	09 95       	icall
    19b8:	89 2b       	or	r24, r25
    19ba:	19 f0       	breq	.+6      	; 0x19c2 <puts+0x52>
    19bc:	8f ef       	ldi	r24, 0xFF	; 255
    19be:	9f ef       	ldi	r25, 0xFF	; 255
    19c0:	02 c0       	rjmp	.+4      	; 0x19c6 <puts+0x56>
    19c2:	8d 2f       	mov	r24, r29
    19c4:	9c 2f       	mov	r25, r28
    19c6:	df 91       	pop	r29
    19c8:	cf 91       	pop	r28
    19ca:	1f 91       	pop	r17
    19cc:	0f 91       	pop	r16
    19ce:	08 95       	ret

000019d0 <__ultoa_invert>:
    19d0:	fa 01       	movw	r30, r20
    19d2:	aa 27       	eor	r26, r26
    19d4:	28 30       	cpi	r18, 0x08	; 8
    19d6:	51 f1       	breq	.+84     	; 0x1a2c <__ultoa_invert+0x5c>
    19d8:	20 31       	cpi	r18, 0x10	; 16
    19da:	81 f1       	breq	.+96     	; 0x1a3c <__ultoa_invert+0x6c>
    19dc:	e8 94       	clt
    19de:	6f 93       	push	r22
    19e0:	6e 7f       	andi	r22, 0xFE	; 254
    19e2:	6e 5f       	subi	r22, 0xFE	; 254
    19e4:	7f 4f       	sbci	r23, 0xFF	; 255
    19e6:	8f 4f       	sbci	r24, 0xFF	; 255
    19e8:	9f 4f       	sbci	r25, 0xFF	; 255
    19ea:	af 4f       	sbci	r26, 0xFF	; 255
    19ec:	b1 e0       	ldi	r27, 0x01	; 1
    19ee:	3e d0       	rcall	.+124    	; 0x1a6c <__ultoa_invert+0x9c>
    19f0:	b4 e0       	ldi	r27, 0x04	; 4
    19f2:	3c d0       	rcall	.+120    	; 0x1a6c <__ultoa_invert+0x9c>
    19f4:	67 0f       	add	r22, r23
    19f6:	78 1f       	adc	r23, r24
    19f8:	89 1f       	adc	r24, r25
    19fa:	9a 1f       	adc	r25, r26
    19fc:	a1 1d       	adc	r26, r1
    19fe:	68 0f       	add	r22, r24
    1a00:	79 1f       	adc	r23, r25
    1a02:	8a 1f       	adc	r24, r26
    1a04:	91 1d       	adc	r25, r1
    1a06:	a1 1d       	adc	r26, r1
    1a08:	6a 0f       	add	r22, r26
    1a0a:	71 1d       	adc	r23, r1
    1a0c:	81 1d       	adc	r24, r1
    1a0e:	91 1d       	adc	r25, r1
    1a10:	a1 1d       	adc	r26, r1
    1a12:	20 d0       	rcall	.+64     	; 0x1a54 <__ultoa_invert+0x84>
    1a14:	09 f4       	brne	.+2      	; 0x1a18 <__ultoa_invert+0x48>
    1a16:	68 94       	set
    1a18:	3f 91       	pop	r19
    1a1a:	2a e0       	ldi	r18, 0x0A	; 10
    1a1c:	26 9f       	mul	r18, r22
    1a1e:	11 24       	eor	r1, r1
    1a20:	30 19       	sub	r19, r0
    1a22:	30 5d       	subi	r19, 0xD0	; 208
    1a24:	31 93       	st	Z+, r19
    1a26:	de f6       	brtc	.-74     	; 0x19de <__ultoa_invert+0xe>
    1a28:	cf 01       	movw	r24, r30
    1a2a:	08 95       	ret
    1a2c:	46 2f       	mov	r20, r22
    1a2e:	47 70       	andi	r20, 0x07	; 7
    1a30:	40 5d       	subi	r20, 0xD0	; 208
    1a32:	41 93       	st	Z+, r20
    1a34:	b3 e0       	ldi	r27, 0x03	; 3
    1a36:	0f d0       	rcall	.+30     	; 0x1a56 <__ultoa_invert+0x86>
    1a38:	c9 f7       	brne	.-14     	; 0x1a2c <__ultoa_invert+0x5c>
    1a3a:	f6 cf       	rjmp	.-20     	; 0x1a28 <__ultoa_invert+0x58>
    1a3c:	46 2f       	mov	r20, r22
    1a3e:	4f 70       	andi	r20, 0x0F	; 15
    1a40:	40 5d       	subi	r20, 0xD0	; 208
    1a42:	4a 33       	cpi	r20, 0x3A	; 58
    1a44:	18 f0       	brcs	.+6      	; 0x1a4c <__ultoa_invert+0x7c>
    1a46:	49 5d       	subi	r20, 0xD9	; 217
    1a48:	31 fd       	sbrc	r19, 1
    1a4a:	40 52       	subi	r20, 0x20	; 32
    1a4c:	41 93       	st	Z+, r20
    1a4e:	02 d0       	rcall	.+4      	; 0x1a54 <__ultoa_invert+0x84>
    1a50:	a9 f7       	brne	.-22     	; 0x1a3c <__ultoa_invert+0x6c>
    1a52:	ea cf       	rjmp	.-44     	; 0x1a28 <__ultoa_invert+0x58>
    1a54:	b4 e0       	ldi	r27, 0x04	; 4
    1a56:	a6 95       	lsr	r26
    1a58:	97 95       	ror	r25
    1a5a:	87 95       	ror	r24
    1a5c:	77 95       	ror	r23
    1a5e:	67 95       	ror	r22
    1a60:	ba 95       	dec	r27
    1a62:	c9 f7       	brne	.-14     	; 0x1a56 <__ultoa_invert+0x86>
    1a64:	00 97       	sbiw	r24, 0x00	; 0
    1a66:	61 05       	cpc	r22, r1
    1a68:	71 05       	cpc	r23, r1
    1a6a:	08 95       	ret
    1a6c:	9b 01       	movw	r18, r22
    1a6e:	ac 01       	movw	r20, r24
    1a70:	0a 2e       	mov	r0, r26
    1a72:	06 94       	lsr	r0
    1a74:	57 95       	ror	r21
    1a76:	47 95       	ror	r20
    1a78:	37 95       	ror	r19
    1a7a:	27 95       	ror	r18
    1a7c:	ba 95       	dec	r27
    1a7e:	c9 f7       	brne	.-14     	; 0x1a72 <__ultoa_invert+0xa2>
    1a80:	62 0f       	add	r22, r18
    1a82:	73 1f       	adc	r23, r19
    1a84:	84 1f       	adc	r24, r20
    1a86:	95 1f       	adc	r25, r21
    1a88:	a0 1d       	adc	r26, r0
    1a8a:	08 95       	ret

00001a8c <_exit>:
    1a8c:	f8 94       	cli

00001a8e <__stop_program>:
    1a8e:	ff cf       	rjmp	.-2      	; 0x1a8e <__stop_program>
