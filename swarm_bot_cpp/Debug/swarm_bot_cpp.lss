
swarm_bot_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00001ca2  00001d36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ca2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  00800122  00800122  00001d58  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001d58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001db4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000235c  00000000  00000000  00002094  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001438  00000000  00000000  000043f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000039c4  00000000  00000000  00005828  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000800  00000000  00000000  000091ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000110ea  00000000  00000000  000099ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001568  00000000  00000000  0001aad6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0001c03e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004fb9  00000000  00000000  0001c22e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 a9 01 	jmp	0x352	; 0x352 <__vector_1>
       8:	0c 94 a5 02 	jmp	0x54a	; 0x54a <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 03 04 	jmp	0x806	; 0x806 <__vector_9>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 7c 06 	jmp	0xcf8	; 0xcf8 <__vector_13>
      38:	0c 94 9c 04 	jmp	0x938	; 0x938 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e2 ea       	ldi	r30, 0xA2	; 162
      7c:	fc e1       	ldi	r31, 0x1C	; 28
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a2 32       	cpi	r26, 0x22	; 34
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a2 e2       	ldi	r26, 0x22	; 34
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 38       	cpi	r26, 0x8E	; 142
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 06 07 	call	0xe0c	; 0xe0c <main>
      9e:	0c 94 4f 0e 	jmp	0x1c9e	; 0x1c9e <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <pid_Init>:
 *  \param d_factor  Derivate term.
 *  \param pid  Struct with PID status.
 */
void pid_Init(int16_t p_factor, int16_t i_factor, int16_t d_factor, struct PID_DATA *pid)
// Set up PID controller parameters
{
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	fb 01       	movw	r30, r22
      ac:	e9 01       	movw	r28, r18
  // Start values for PID controller
  pid->sumError = 0;
      ae:	1a 82       	std	Y+2, r1	; 0x02
      b0:	1b 82       	std	Y+3, r1	; 0x03
      b2:	1c 82       	std	Y+4, r1	; 0x04
      b4:	1d 82       	std	Y+5, r1	; 0x05
  pid->lastProcessValue = 0;
      b6:	19 82       	std	Y+1, r1	; 0x01
      b8:	18 82       	st	Y, r1
  // Tuning constants for PID loop
  pid->P_Factor = p_factor;
      ba:	9f 83       	std	Y+7, r25	; 0x07
      bc:	8e 83       	std	Y+6, r24	; 0x06
  pid->I_Factor = i_factor;
      be:	79 87       	std	Y+9, r23	; 0x09
      c0:	68 87       	std	Y+8, r22	; 0x08
  pid->D_Factor = d_factor;
      c2:	5b 87       	std	Y+11, r21	; 0x0b
      c4:	4a 87       	std	Y+10, r20	; 0x0a
  // Limits to avoid overflow
  pid->maxError = MAX_INT / (pid->P_Factor + 1);
      c6:	bc 01       	movw	r22, r24
      c8:	6f 5f       	subi	r22, 0xFF	; 255
      ca:	7f 4f       	sbci	r23, 0xFF	; 255
      cc:	8f ef       	ldi	r24, 0xFF	; 255
      ce:	9f e7       	ldi	r25, 0x7F	; 127
      d0:	0e 94 23 09 	call	0x1246	; 0x1246 <__divmodhi4>
      d4:	7d 87       	std	Y+13, r23	; 0x0d
      d6:	6c 87       	std	Y+12, r22	; 0x0c
  pid->maxSumError = MAX_I_TERM / (pid->I_Factor + 1);
      d8:	9f 01       	movw	r18, r30
      da:	2f 5f       	subi	r18, 0xFF	; 255
      dc:	3f 4f       	sbci	r19, 0xFF	; 255
      de:	03 2e       	mov	r0, r19
      e0:	00 0c       	add	r0, r0
      e2:	44 0b       	sbc	r20, r20
      e4:	55 0b       	sbc	r21, r21
      e6:	6f ef       	ldi	r22, 0xFF	; 255
      e8:	7f ef       	ldi	r23, 0xFF	; 255
      ea:	8f ef       	ldi	r24, 0xFF	; 255
      ec:	9f e3       	ldi	r25, 0x3F	; 63
      ee:	0e 94 37 09 	call	0x126e	; 0x126e <__divmodsi4>
      f2:	2e 87       	std	Y+14, r18	; 0x0e
      f4:	3f 87       	std	Y+15, r19	; 0x0f
      f6:	48 8b       	std	Y+16, r20	; 0x10
      f8:	59 8b       	std	Y+17, r21	; 0x11
}
      fa:	df 91       	pop	r29
      fc:	cf 91       	pop	r28
      fe:	08 95       	ret

00000100 <pid_Controller>:
 *  \param setPoint  Desired value.
 *  \param processValue  Measured value.
 *  \param pid_st  PID status struct.
 */
int16_t pid_Controller(int16_t setPoint, int16_t processValue, struct PID_DATA *pid_st)
{
     100:	ef 92       	push	r14
     102:	ff 92       	push	r15
     104:	0f 93       	push	r16
     106:	1f 93       	push	r17
     108:	cf 93       	push	r28
     10a:	df 93       	push	r29
     10c:	8b 01       	movw	r16, r22
     10e:	fa 01       	movw	r30, r20
  int16_t error, p_term, d_term;
  int32_t i_term, ret, temp;

  error = setPoint - processValue;
     110:	86 1b       	sub	r24, r22
     112:	97 0b       	sbc	r25, r23

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
     114:	24 85       	ldd	r18, Z+12	; 0x0c
     116:	35 85       	ldd	r19, Z+13	; 0x0d
     118:	28 17       	cp	r18, r24
     11a:	39 07       	cpc	r19, r25
     11c:	84 f0       	brlt	.+32     	; 0x13e <pid_Controller+0x3e>
    p_term = MAX_INT;
  }
  else if (error < -pid_st->maxError){
     11e:	31 95       	neg	r19
     120:	21 95       	neg	r18
     122:	31 09       	sbc	r19, r1
     124:	82 17       	cp	r24, r18
     126:	93 07       	cpc	r25, r19
     128:	6c f0       	brlt	.+26     	; 0x144 <pid_Controller+0x44>
    p_term = -MAX_INT;
  }
  else{
    p_term = pid_st->P_Factor * error;
     12a:	26 81       	ldd	r18, Z+6	; 0x06
     12c:	37 81       	ldd	r19, Z+7	; 0x07
     12e:	82 9f       	mul	r24, r18
     130:	e0 01       	movw	r28, r0
     132:	83 9f       	mul	r24, r19
     134:	d0 0d       	add	r29, r0
     136:	92 9f       	mul	r25, r18
     138:	d0 0d       	add	r29, r0
     13a:	11 24       	eor	r1, r1
     13c:	05 c0       	rjmp	.+10     	; 0x148 <pid_Controller+0x48>

  error = setPoint - processValue;

  // Calculate Pterm and limit error overflow
  if (error > pid_st->maxError){
    p_term = MAX_INT;
     13e:	cf ef       	ldi	r28, 0xFF	; 255
     140:	df e7       	ldi	r29, 0x7F	; 127
     142:	02 c0       	rjmp	.+4      	; 0x148 <pid_Controller+0x48>
  }
  else if (error < -pid_st->maxError){
    p_term = -MAX_INT;
     144:	c1 e0       	ldi	r28, 0x01	; 1
     146:	d0 e8       	ldi	r29, 0x80	; 128
  else{
    p_term = pid_st->P_Factor * error;
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
     148:	09 2e       	mov	r0, r25
     14a:	00 0c       	add	r0, r0
     14c:	aa 0b       	sbc	r26, r26
     14e:	bb 0b       	sbc	r27, r27
     150:	42 81       	ldd	r20, Z+2	; 0x02
     152:	53 81       	ldd	r21, Z+3	; 0x03
     154:	64 81       	ldd	r22, Z+4	; 0x04
     156:	75 81       	ldd	r23, Z+5	; 0x05
     158:	9a 01       	movw	r18, r20
     15a:	ab 01       	movw	r20, r22
     15c:	28 0f       	add	r18, r24
     15e:	39 1f       	adc	r19, r25
     160:	4a 1f       	adc	r20, r26
     162:	5b 1f       	adc	r21, r27
  if(temp > pid_st->maxSumError){
     164:	86 85       	ldd	r24, Z+14	; 0x0e
     166:	97 85       	ldd	r25, Z+15	; 0x0f
     168:	a0 89       	ldd	r26, Z+16	; 0x10
     16a:	b1 89       	ldd	r27, Z+17	; 0x11
     16c:	82 17       	cp	r24, r18
     16e:	93 07       	cpc	r25, r19
     170:	a4 07       	cpc	r26, r20
     172:	b5 07       	cpc	r27, r21
     174:	4c f4       	brge	.+18     	; 0x188 <pid_Controller+0x88>
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
     176:	82 83       	std	Z+2, r24	; 0x02
     178:	93 83       	std	Z+3, r25	; 0x03
     17a:	a4 83       	std	Z+4, r26	; 0x04
     17c:	b5 83       	std	Z+5, r27	; 0x05
  }

  // Calculate Iterm and limit integral runaway
  temp = pid_st->sumError + error;
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
     17e:	6f ef       	ldi	r22, 0xFF	; 255
     180:	7f ef       	ldi	r23, 0xFF	; 255
     182:	8f ef       	ldi	r24, 0xFF	; 255
     184:	9f e3       	ldi	r25, 0x3F	; 63
     186:	1d c0       	rjmp	.+58     	; 0x1c2 <pid_Controller+0xc2>
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
     188:	b0 95       	com	r27
     18a:	a0 95       	com	r26
     18c:	90 95       	com	r25
     18e:	81 95       	neg	r24
     190:	9f 4f       	sbci	r25, 0xFF	; 255
     192:	af 4f       	sbci	r26, 0xFF	; 255
     194:	bf 4f       	sbci	r27, 0xFF	; 255
     196:	28 17       	cp	r18, r24
     198:	39 07       	cpc	r19, r25
     19a:	4a 07       	cpc	r20, r26
     19c:	5b 07       	cpc	r21, r27
     19e:	4c f4       	brge	.+18     	; 0x1b2 <pid_Controller+0xb2>
    i_term = -MAX_I_TERM;
    pid_st->sumError = -pid_st->maxSumError;
     1a0:	82 83       	std	Z+2, r24	; 0x02
     1a2:	93 83       	std	Z+3, r25	; 0x03
     1a4:	a4 83       	std	Z+4, r26	; 0x04
     1a6:	b5 83       	std	Z+5, r27	; 0x05
  if(temp > pid_st->maxSumError){
    i_term = MAX_I_TERM;
    pid_st->sumError = pid_st->maxSumError;
  }
  else if(temp < -pid_st->maxSumError){
    i_term = -MAX_I_TERM;
     1a8:	61 e0       	ldi	r22, 0x01	; 1
     1aa:	70 e0       	ldi	r23, 0x00	; 0
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 ec       	ldi	r25, 0xC0	; 192
     1b0:	08 c0       	rjmp	.+16     	; 0x1c2 <pid_Controller+0xc2>
    pid_st->sumError = -pid_st->maxSumError;
  }
  else{
    pid_st->sumError = temp;
     1b2:	22 83       	std	Z+2, r18	; 0x02
     1b4:	33 83       	std	Z+3, r19	; 0x03
     1b6:	44 83       	std	Z+4, r20	; 0x04
     1b8:	55 83       	std	Z+5, r21	; 0x05
    i_term = pid_st->I_Factor * pid_st->sumError;
     1ba:	a0 85       	ldd	r26, Z+8	; 0x08
     1bc:	b1 85       	ldd	r27, Z+9	; 0x09
     1be:	0e 94 56 09 	call	0x12ac	; 0x12ac <__mulshisi3>
  }

  // Calculate Dterm
  d_term = pid_st->D_Factor * (pid_st->lastProcessValue - processValue);
     1c2:	20 81       	ld	r18, Z
     1c4:	31 81       	ldd	r19, Z+1	; 0x01
     1c6:	20 1b       	sub	r18, r16
     1c8:	31 0b       	sbc	r19, r17
     1ca:	a2 85       	ldd	r26, Z+10	; 0x0a
     1cc:	b3 85       	ldd	r27, Z+11	; 0x0b
     1ce:	2a 9f       	mul	r18, r26
     1d0:	70 01       	movw	r14, r0
     1d2:	2b 9f       	mul	r18, r27
     1d4:	f0 0c       	add	r15, r0
     1d6:	3a 9f       	mul	r19, r26
     1d8:	f0 0c       	add	r15, r0
     1da:	11 24       	eor	r1, r1

  pid_st->lastProcessValue = processValue;
     1dc:	11 83       	std	Z+1, r17	; 0x01
     1de:	00 83       	st	Z, r16

  ret = (p_term + i_term + d_term) / SCALING_FACTOR;
     1e0:	8e 01       	movw	r16, r28
     1e2:	dd 0f       	add	r29, r29
     1e4:	22 0b       	sbc	r18, r18
     1e6:	33 0b       	sbc	r19, r19
     1e8:	ab 01       	movw	r20, r22
     1ea:	bc 01       	movw	r22, r24
     1ec:	40 0f       	add	r20, r16
     1ee:	51 1f       	adc	r21, r17
     1f0:	62 1f       	adc	r22, r18
     1f2:	73 1f       	adc	r23, r19
     1f4:	c7 01       	movw	r24, r14
     1f6:	ff 0c       	add	r15, r15
     1f8:	aa 0b       	sbc	r26, r26
     1fa:	bb 0b       	sbc	r27, r27
     1fc:	48 0f       	add	r20, r24
     1fe:	59 1f       	adc	r21, r25
     200:	6a 1f       	adc	r22, r26
     202:	7b 1f       	adc	r23, r27
     204:	db 01       	movw	r26, r22
     206:	ca 01       	movw	r24, r20
     208:	77 23       	and	r23, r23
     20a:	24 f4       	brge	.+8      	; 0x214 <pid_Controller+0x114>
     20c:	81 58       	subi	r24, 0x81	; 129
     20e:	9f 4f       	sbci	r25, 0xFF	; 255
     210:	af 4f       	sbci	r26, 0xFF	; 255
     212:	bf 4f       	sbci	r27, 0xFF	; 255
     214:	68 94       	set
     216:	16 f8       	bld	r1, 6
     218:	b5 95       	asr	r27
     21a:	a7 95       	ror	r26
     21c:	97 95       	ror	r25
     21e:	87 95       	ror	r24
     220:	16 94       	lsr	r1
     222:	d1 f7       	brne	.-12     	; 0x218 <pid_Controller+0x118>
     224:	81 30       	cpi	r24, 0x01	; 1
     226:	20 e8       	ldi	r18, 0x80	; 128
     228:	92 07       	cpc	r25, r18
     22a:	2f ef       	ldi	r18, 0xFF	; 255
     22c:	a2 07       	cpc	r26, r18
     22e:	b2 07       	cpc	r27, r18
     230:	24 f4       	brge	.+8      	; 0x23a <pid_Controller+0x13a>
     232:	81 e0       	ldi	r24, 0x01	; 1
     234:	90 e8       	ldi	r25, 0x80	; 128
     236:	af ef       	ldi	r26, 0xFF	; 255
     238:	bf ef       	ldi	r27, 0xFF	; 255
  }
  else if(ret < -MAX_INT){
    ret = -MAX_INT;
  }

  return((int16_t)ret);
     23a:	81 15       	cp	r24, r1
     23c:	20 e8       	ldi	r18, 0x80	; 128
     23e:	92 07       	cpc	r25, r18
     240:	a1 05       	cpc	r26, r1
     242:	b1 05       	cpc	r27, r1
     244:	24 f0       	brlt	.+8      	; 0x24e <pid_Controller+0x14e>
     246:	8f ef       	ldi	r24, 0xFF	; 255
     248:	9f e7       	ldi	r25, 0x7F	; 127
     24a:	a0 e0       	ldi	r26, 0x00	; 0
     24c:	b0 e0       	ldi	r27, 0x00	; 0
}
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	1f 91       	pop	r17
     254:	0f 91       	pop	r16
     256:	ff 90       	pop	r15
     258:	ef 90       	pop	r14
     25a:	08 95       	ret

0000025c <_adc_init>:
#include <__adc__.h>

void _adc_init(void)
{
	ADMUX = (1 << REFS0); // AVCC
     25c:	ec e7       	ldi	r30, 0x7C	; 124
     25e:	f0 e0       	ldi	r31, 0x00	; 0
     260:	80 e4       	ldi	r24, 0x40	; 64
     262:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) | (1 << REFS1); //1v1
	
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN); // Turn ADC On sample: 16M/128 = 125KHz
     264:	aa e7       	ldi	r26, 0x7A	; 122
     266:	b0 e0       	ldi	r27, 0x00	; 0
     268:	8c 91       	ld	r24, X
     26a:	87 68       	ori	r24, 0x87	; 135
     26c:	8c 93       	st	X, r24
	ADMUX |= (0 << ADLAR);
     26e:	80 81       	ld	r24, Z
     270:	80 83       	st	Z, r24
     272:	08 95       	ret

00000274 <_adc_read>:
	//ADMUX |= (1 << ADLAR); 8 bit
}

int _adc_read(char channel)
{
	ADMUX |= channel & 0x0f;
     274:	ec e7       	ldi	r30, 0x7C	; 124
     276:	f0 e0       	ldi	r31, 0x00	; 0
     278:	90 81       	ld	r25, Z
     27a:	8f 70       	andi	r24, 0x0F	; 15
     27c:	98 2b       	or	r25, r24
     27e:	90 83       	st	Z, r25
	ADCSRA |= (1 << ADSC);
     280:	ea e7       	ldi	r30, 0x7A	; 122
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	80 64       	ori	r24, 0x40	; 64
     288:	80 83       	st	Z, r24
	while(ADCSRA & (1 << ADSC));
     28a:	80 81       	ld	r24, Z
     28c:	86 fd       	sbrc	r24, 6
     28e:	fd cf       	rjmp	.-6      	; 0x28a <_adc_read+0x16>
	return ADCW;
     290:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     294:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
}
     298:	08 95       	ret

0000029a <_break_motor>:
	return value;
}

void _break_motor(uint8_t motor)
{
	if (motor == MA)
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	49 f4       	brne	.+18     	; 0x2b0 <_break_motor+0x16>
	{
		_set_pwm_0A(0);
     29e:	80 e0       	ldi	r24, 0x00	; 0
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	0e 94 35 05 	call	0xa6a	; 0xa6a <_set_pwm_0A>
		_set_pwm_1A(0);
     2a6:	80 e0       	ldi	r24, 0x00	; 0
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_set_pwm_1A>
     2ae:	08 95       	ret
	}
	else if (motor == MB)
     2b0:	82 30       	cpi	r24, 0x02	; 2
     2b2:	41 f4       	brne	.+16     	; 0x2c4 <_break_motor+0x2a>
	{
		_set_pwm_0B(0);
     2b4:	80 e0       	ldi	r24, 0x00	; 0
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 41 05 	call	0xa82	; 0xa82 <_set_pwm_0B>
		_set_pwm_1B(0);
     2bc:	80 e0       	ldi	r24, 0x00	; 0
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	0e 94 5c 05 	call	0xab8	; 0xab8 <_set_pwm_1B>
     2c4:	08 95       	ret

000002c6 <_set_speed>:
#include <__dc_control__.h>

float _setpoint_a = 0;

int _set_speed(uint8_t motor, int value)
{
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	eb 01       	movw	r28, r22
	if(value == 0)
     2cc:	20 97       	sbiw	r28, 0x00	; 0
     2ce:	19 f4       	brne	.+6      	; 0x2d6 <_set_speed+0x10>
	{
		_break_motor(motor);
     2d0:	0e 94 4d 01 	call	0x29a	; 0x29a <_break_motor>
		return value;
     2d4:	32 c0       	rjmp	.+100    	; 0x33a <_set_speed+0x74>
	}
	if(value < 0)
     2d6:	dd 23       	and	r29, r29
     2d8:	d4 f4       	brge	.+52     	; 0x30e <_set_speed+0x48>
	{
		if (motor == MA)
     2da:	81 30       	cpi	r24, 0x01	; 1
     2dc:	59 f4       	brne	.+22     	; 0x2f4 <_set_speed+0x2e>
		{
			_set_pwm_0A(-1*value);
     2de:	88 27       	eor	r24, r24
     2e0:	99 27       	eor	r25, r25
     2e2:	86 1b       	sub	r24, r22
     2e4:	97 0b       	sbc	r25, r23
     2e6:	0e 94 35 05 	call	0xa6a	; 0xa6a <_set_pwm_0A>
			_set_pwm_1A(0);
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_set_pwm_1A>
     2f2:	23 c0       	rjmp	.+70     	; 0x33a <_set_speed+0x74>
		} 
		else if (motor == MB)
     2f4:	82 30       	cpi	r24, 0x02	; 2
     2f6:	09 f5       	brne	.+66     	; 0x33a <_set_speed+0x74>
		{
			_set_pwm_0B(0);
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	0e 94 41 05 	call	0xa82	; 0xa82 <_set_pwm_0B>
			_set_pwm_1B(-1*value);
     300:	88 27       	eor	r24, r24
     302:	99 27       	eor	r25, r25
     304:	8c 1b       	sub	r24, r28
     306:	9d 0b       	sbc	r25, r29
     308:	0e 94 5c 05 	call	0xab8	; 0xab8 <_set_pwm_1B>
     30c:	16 c0       	rjmp	.+44     	; 0x33a <_set_speed+0x74>
		}
	}
	else if(value > 0)
     30e:	1c 16       	cp	r1, r28
     310:	1d 06       	cpc	r1, r29
     312:	9c f4       	brge	.+38     	; 0x33a <_set_speed+0x74>
	{
		if (motor == MA)
     314:	81 30       	cpi	r24, 0x01	; 1
     316:	41 f4       	brne	.+16     	; 0x328 <_set_speed+0x62>
		{
			_set_pwm_0A(0);
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	0e 94 35 05 	call	0xa6a	; 0xa6a <_set_pwm_0A>
			_set_pwm_1A(value);
     320:	ce 01       	movw	r24, r28
     322:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_set_pwm_1A>
     326:	09 c0       	rjmp	.+18     	; 0x33a <_set_speed+0x74>
		}
		else if (motor == MB)
     328:	82 30       	cpi	r24, 0x02	; 2
     32a:	39 f4       	brne	.+14     	; 0x33a <_set_speed+0x74>
		{
			_set_pwm_0B(value);
     32c:	cb 01       	movw	r24, r22
     32e:	0e 94 41 05 	call	0xa82	; 0xa82 <_set_pwm_0B>
			_set_pwm_1B(0);
     332:	80 e0       	ldi	r24, 0x00	; 0
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	0e 94 5c 05 	call	0xab8	; 0xab8 <_set_pwm_1B>
		}
	}
	return value;
}
     33a:	ce 01       	movw	r24, r28
     33c:	df 91       	pop	r29
     33e:	cf 91       	pop	r28
     340:	08 95       	ret

00000342 <_interrupt0_enable>:

#include <__INT_0_1__.h>

void _interrupt0_enable(uint8_t trigger)
{
	EIMSK |= (1 << INT0);
     342:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA |= (1 << ISC00) | (1 << ISC01);
     344:	e9 e6       	ldi	r30, 0x69	; 105
     346:	f0 e0       	ldi	r31, 0x00	; 0
     348:	80 81       	ld	r24, Z
     34a:	83 60       	ori	r24, 0x03	; 3
     34c:	80 83       	st	Z, r24
	sei();
     34e:	78 94       	sei
     350:	08 95       	ret

00000352 <__vector_1>:
	return _omega_from_PMA() * 0.3f + _omega_from_encA() * 0.7f;
}
float _omega_comp_B(void)
{
	return _omega_from_PMB() * 0.3f + _omega_from_encB() * 0.7f;
}
     352:	1f 92       	push	r1
     354:	0f 92       	push	r0
     356:	0f b6       	in	r0, 0x3f	; 63
     358:	0f 92       	push	r0
     35a:	11 24       	eor	r1, r1
     35c:	2f 92       	push	r2
     35e:	3f 92       	push	r3
     360:	4f 92       	push	r4
     362:	5f 92       	push	r5
     364:	6f 92       	push	r6
     366:	7f 92       	push	r7
     368:	8f 92       	push	r8
     36a:	9f 92       	push	r9
     36c:	af 92       	push	r10
     36e:	bf 92       	push	r11
     370:	cf 92       	push	r12
     372:	df 92       	push	r13
     374:	ef 92       	push	r14
     376:	ff 92       	push	r15
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	2f 93       	push	r18
     37e:	3f 93       	push	r19
     380:	4f 93       	push	r20
     382:	5f 93       	push	r21
     384:	6f 93       	push	r22
     386:	7f 93       	push	r23
     388:	8f 93       	push	r24
     38a:	9f 93       	push	r25
     38c:	af 93       	push	r26
     38e:	bf 93       	push	r27
     390:	cf 93       	push	r28
     392:	df 93       	push	r29
     394:	ef 93       	push	r30
     396:	ff 93       	push	r31
     398:	20 91 37 01 	lds	r18, 0x0137	; 0x800137 <_enca_count>
     39c:	30 91 38 01 	lds	r19, 0x0138	; 0x800138 <_enca_count+0x1>
     3a0:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <_enca_count+0x2>
     3a4:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <_enca_count+0x3>
     3a8:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <_enca_count+0x4>
     3ac:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <_enca_count+0x5>
     3b0:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <_enca_count+0x6>
     3b4:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <_enca_count+0x7>
     3b8:	a0 e0       	ldi	r26, 0x00	; 0
     3ba:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__cmpdi2_s8>
     3be:	a9 f4       	brne	.+42     	; 0x3ea <__vector_1+0x98>
     3c0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_micros0>
     3c4:	dc 01       	movw	r26, r24
     3c6:	cb 01       	movw	r24, r22
     3c8:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_prev_tick_timeA>
     3cc:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_prev_tick_timeA+0x1>
     3d0:	a0 93 49 01 	sts	0x0149, r26	; 0x800149 <_prev_tick_timeA+0x2>
     3d4:	b0 93 4a 01 	sts	0x014A, r27	; 0x80014a <_prev_tick_timeA+0x3>
     3d8:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <_prev_tick_timeA+0x4>
     3dc:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <_prev_tick_timeA+0x5>
     3e0:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <_prev_tick_timeA+0x6>
     3e4:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <_prev_tick_timeA+0x7>
     3e8:	3e c0       	rjmp	.+124    	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     3ea:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_micros0>
     3ee:	1b 01       	movw	r2, r22
     3f0:	2c 01       	movw	r4, r24
     3f2:	a0 90 47 01 	lds	r10, 0x0147	; 0x800147 <_prev_tick_timeA>
     3f6:	b0 90 48 01 	lds	r11, 0x0148	; 0x800148 <_prev_tick_timeA+0x1>
     3fa:	c0 90 49 01 	lds	r12, 0x0149	; 0x800149 <_prev_tick_timeA+0x2>
     3fe:	d0 90 4a 01 	lds	r13, 0x014A	; 0x80014a <_prev_tick_timeA+0x3>
     402:	e0 90 4b 01 	lds	r14, 0x014B	; 0x80014b <_prev_tick_timeA+0x4>
     406:	f0 90 4c 01 	lds	r15, 0x014C	; 0x80014c <_prev_tick_timeA+0x5>
     40a:	00 91 4d 01 	lds	r16, 0x014D	; 0x80014d <_prev_tick_timeA+0x6>
     40e:	10 91 4e 01 	lds	r17, 0x014E	; 0x80014e <_prev_tick_timeA+0x7>
     412:	26 2f       	mov	r18, r22
     414:	33 2d       	mov	r19, r3
     416:	44 2d       	mov	r20, r4
     418:	55 2d       	mov	r21, r5
     41a:	60 e0       	ldi	r22, 0x00	; 0
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	80 e0       	ldi	r24, 0x00	; 0
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__subdi3>
     426:	20 93 57 01 	sts	0x0157, r18	; 0x800157 <_tick_timeA>
     42a:	30 93 58 01 	sts	0x0158, r19	; 0x800158 <_tick_timeA+0x1>
     42e:	40 93 59 01 	sts	0x0159, r20	; 0x800159 <_tick_timeA+0x2>
     432:	50 93 5a 01 	sts	0x015A, r21	; 0x80015a <_tick_timeA+0x3>
     436:	60 93 5b 01 	sts	0x015B, r22	; 0x80015b <_tick_timeA+0x4>
     43a:	70 93 5c 01 	sts	0x015C, r23	; 0x80015c <_tick_timeA+0x5>
     43e:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <_tick_timeA+0x6>
     442:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <_tick_timeA+0x7>
     446:	20 92 47 01 	sts	0x0147, r2	; 0x800147 <_prev_tick_timeA>
     44a:	30 92 48 01 	sts	0x0148, r3	; 0x800148 <_prev_tick_timeA+0x1>
     44e:	40 92 49 01 	sts	0x0149, r4	; 0x800149 <_prev_tick_timeA+0x2>
     452:	50 92 4a 01 	sts	0x014A, r5	; 0x80014a <_prev_tick_timeA+0x3>
     456:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <_prev_tick_timeA+0x4>
     45a:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <_prev_tick_timeA+0x5>
     45e:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <_prev_tick_timeA+0x6>
     462:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <_prev_tick_timeA+0x7>
     466:	4c 9b       	sbis	0x09, 4	; 9
     468:	27 c0       	rjmp	.+78     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
     46a:	20 91 37 01 	lds	r18, 0x0137	; 0x800137 <_enca_count>
     46e:	30 91 38 01 	lds	r19, 0x0138	; 0x800138 <_enca_count+0x1>
     472:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <_enca_count+0x2>
     476:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <_enca_count+0x3>
     47a:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <_enca_count+0x4>
     47e:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <_enca_count+0x5>
     482:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <_enca_count+0x6>
     486:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <_enca_count+0x7>
     48a:	a1 e0       	ldi	r26, 0x01	; 1
     48c:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     490:	20 93 37 01 	sts	0x0137, r18	; 0x800137 <_enca_count>
     494:	30 93 38 01 	sts	0x0138, r19	; 0x800138 <_enca_count+0x1>
     498:	40 93 39 01 	sts	0x0139, r20	; 0x800139 <_enca_count+0x2>
     49c:	50 93 3a 01 	sts	0x013A, r21	; 0x80013a <_enca_count+0x3>
     4a0:	60 93 3b 01 	sts	0x013B, r22	; 0x80013b <_enca_count+0x4>
     4a4:	70 93 3c 01 	sts	0x013C, r23	; 0x80013c <_enca_count+0x5>
     4a8:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <_enca_count+0x6>
     4ac:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <_enca_count+0x7>
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <_dir_a>
     4b6:	26 c0       	rjmp	.+76     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     4b8:	20 91 37 01 	lds	r18, 0x0137	; 0x800137 <_enca_count>
     4bc:	30 91 38 01 	lds	r19, 0x0138	; 0x800138 <_enca_count+0x1>
     4c0:	40 91 39 01 	lds	r20, 0x0139	; 0x800139 <_enca_count+0x2>
     4c4:	50 91 3a 01 	lds	r21, 0x013A	; 0x80013a <_enca_count+0x3>
     4c8:	60 91 3b 01 	lds	r22, 0x013B	; 0x80013b <_enca_count+0x4>
     4cc:	70 91 3c 01 	lds	r23, 0x013C	; 0x80013c <_enca_count+0x5>
     4d0:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <_enca_count+0x6>
     4d4:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <_enca_count+0x7>
     4d8:	af ef       	ldi	r26, 0xFF	; 255
     4da:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     4de:	20 93 37 01 	sts	0x0137, r18	; 0x800137 <_enca_count>
     4e2:	30 93 38 01 	sts	0x0138, r19	; 0x800138 <_enca_count+0x1>
     4e6:	40 93 39 01 	sts	0x0139, r20	; 0x800139 <_enca_count+0x2>
     4ea:	50 93 3a 01 	sts	0x013A, r21	; 0x80013a <_enca_count+0x3>
     4ee:	60 93 3b 01 	sts	0x013B, r22	; 0x80013b <_enca_count+0x4>
     4f2:	70 93 3c 01 	sts	0x013C, r23	; 0x80013c <_enca_count+0x5>
     4f6:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <_enca_count+0x6>
     4fa:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <_enca_count+0x7>
     4fe:	8f ef       	ldi	r24, 0xFF	; 255
     500:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <_dir_a>
     504:	ff 91       	pop	r31
     506:	ef 91       	pop	r30
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	bf 91       	pop	r27
     50e:	af 91       	pop	r26
     510:	9f 91       	pop	r25
     512:	8f 91       	pop	r24
     514:	7f 91       	pop	r23
     516:	6f 91       	pop	r22
     518:	5f 91       	pop	r21
     51a:	4f 91       	pop	r20
     51c:	3f 91       	pop	r19
     51e:	2f 91       	pop	r18
     520:	1f 91       	pop	r17
     522:	0f 91       	pop	r16
     524:	ff 90       	pop	r15
     526:	ef 90       	pop	r14
     528:	df 90       	pop	r13
     52a:	cf 90       	pop	r12
     52c:	bf 90       	pop	r11
     52e:	af 90       	pop	r10
     530:	9f 90       	pop	r9
     532:	8f 90       	pop	r8
     534:	7f 90       	pop	r7
     536:	6f 90       	pop	r6
     538:	5f 90       	pop	r5
     53a:	4f 90       	pop	r4
     53c:	3f 90       	pop	r3
     53e:	2f 90       	pop	r2
     540:	0f 90       	pop	r0
     542:	0f be       	out	0x3f, r0	; 63
     544:	0f 90       	pop	r0
     546:	1f 90       	pop	r1
     548:	18 95       	reti

0000054a <__vector_2>:
     54a:	1f 92       	push	r1
     54c:	0f 92       	push	r0
     54e:	0f b6       	in	r0, 0x3f	; 63
     550:	0f 92       	push	r0
     552:	11 24       	eor	r1, r1
     554:	af 92       	push	r10
     556:	bf 92       	push	r11
     558:	cf 92       	push	r12
     55a:	df 92       	push	r13
     55c:	ef 92       	push	r14
     55e:	ff 92       	push	r15
     560:	0f 93       	push	r16
     562:	1f 93       	push	r17
     564:	2f 93       	push	r18
     566:	3f 93       	push	r19
     568:	4f 93       	push	r20
     56a:	5f 93       	push	r21
     56c:	6f 93       	push	r22
     56e:	7f 93       	push	r23
     570:	8f 93       	push	r24
     572:	9f 93       	push	r25
     574:	af 93       	push	r26
     576:	bf 93       	push	r27
     578:	ef 93       	push	r30
     57a:	ff 93       	push	r31
     57c:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <_encb_count>
     580:	30 91 30 01 	lds	r19, 0x0130	; 0x800130 <_encb_count+0x1>
     584:	40 91 31 01 	lds	r20, 0x0131	; 0x800131 <_encb_count+0x2>
     588:	50 91 32 01 	lds	r21, 0x0132	; 0x800132 <_encb_count+0x3>
     58c:	60 91 33 01 	lds	r22, 0x0133	; 0x800133 <_encb_count+0x4>
     590:	70 91 34 01 	lds	r23, 0x0134	; 0x800134 <_encb_count+0x5>
     594:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <_encb_count+0x6>
     598:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <_encb_count+0x7>
     59c:	a0 e0       	ldi	r26, 0x00	; 0
     59e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__cmpdi2_s8>
     5a2:	99 f4       	brne	.+38     	; 0x5ca <__vector_2+0x80>
     5a4:	0e 94 32 06 	call	0xc64	; 0xc64 <_micros>
     5a8:	20 93 3f 01 	sts	0x013F, r18	; 0x80013f <_prev_tick_timeB>
     5ac:	30 93 40 01 	sts	0x0140, r19	; 0x800140 <_prev_tick_timeB+0x1>
     5b0:	40 93 41 01 	sts	0x0141, r20	; 0x800141 <_prev_tick_timeB+0x2>
     5b4:	50 93 42 01 	sts	0x0142, r21	; 0x800142 <_prev_tick_timeB+0x3>
     5b8:	60 93 43 01 	sts	0x0143, r22	; 0x800143 <_prev_tick_timeB+0x4>
     5bc:	70 93 44 01 	sts	0x0144, r23	; 0x800144 <_prev_tick_timeB+0x5>
     5c0:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <_prev_tick_timeB+0x6>
     5c4:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <_prev_tick_timeB+0x7>
     5c8:	24 c0       	rjmp	.+72     	; 0x612 <__vector_2+0xc8>
     5ca:	0e 94 32 06 	call	0xc64	; 0xc64 <_micros>
     5ce:	a0 90 3f 01 	lds	r10, 0x013F	; 0x80013f <_prev_tick_timeB>
     5d2:	b0 90 40 01 	lds	r11, 0x0140	; 0x800140 <_prev_tick_timeB+0x1>
     5d6:	c0 90 41 01 	lds	r12, 0x0141	; 0x800141 <_prev_tick_timeB+0x2>
     5da:	d0 90 42 01 	lds	r13, 0x0142	; 0x800142 <_prev_tick_timeB+0x3>
     5de:	e0 90 43 01 	lds	r14, 0x0143	; 0x800143 <_prev_tick_timeB+0x4>
     5e2:	f0 90 44 01 	lds	r15, 0x0144	; 0x800144 <_prev_tick_timeB+0x5>
     5e6:	00 91 45 01 	lds	r16, 0x0145	; 0x800145 <_prev_tick_timeB+0x6>
     5ea:	10 91 46 01 	lds	r17, 0x0146	; 0x800146 <_prev_tick_timeB+0x7>
     5ee:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__subdi3>
     5f2:	20 93 4f 01 	sts	0x014F, r18	; 0x80014f <_tick_timeB>
     5f6:	30 93 50 01 	sts	0x0150, r19	; 0x800150 <_tick_timeB+0x1>
     5fa:	40 93 51 01 	sts	0x0151, r20	; 0x800151 <_tick_timeB+0x2>
     5fe:	50 93 52 01 	sts	0x0152, r21	; 0x800152 <_tick_timeB+0x3>
     602:	60 93 53 01 	sts	0x0153, r22	; 0x800153 <_tick_timeB+0x4>
     606:	70 93 54 01 	sts	0x0154, r23	; 0x800154 <_tick_timeB+0x5>
     60a:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <_tick_timeB+0x6>
     60e:	90 93 56 01 	sts	0x0156, r25	; 0x800156 <_tick_timeB+0x7>
     612:	4f 9b       	sbis	0x09, 7	; 9
     614:	24 c0       	rjmp	.+72     	; 0x65e <__vector_2+0x114>
     616:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <_encb_count>
     61a:	30 91 30 01 	lds	r19, 0x0130	; 0x800130 <_encb_count+0x1>
     61e:	40 91 31 01 	lds	r20, 0x0131	; 0x800131 <_encb_count+0x2>
     622:	50 91 32 01 	lds	r21, 0x0132	; 0x800132 <_encb_count+0x3>
     626:	60 91 33 01 	lds	r22, 0x0133	; 0x800133 <_encb_count+0x4>
     62a:	70 91 34 01 	lds	r23, 0x0134	; 0x800134 <_encb_count+0x5>
     62e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <_encb_count+0x6>
     632:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <_encb_count+0x7>
     636:	a1 e0       	ldi	r26, 0x01	; 1
     638:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     63c:	20 93 2f 01 	sts	0x012F, r18	; 0x80012f <_encb_count>
     640:	30 93 30 01 	sts	0x0130, r19	; 0x800130 <_encb_count+0x1>
     644:	40 93 31 01 	sts	0x0131, r20	; 0x800131 <_encb_count+0x2>
     648:	50 93 32 01 	sts	0x0132, r21	; 0x800132 <_encb_count+0x3>
     64c:	60 93 33 01 	sts	0x0133, r22	; 0x800133 <_encb_count+0x4>
     650:	70 93 34 01 	sts	0x0134, r23	; 0x800134 <_encb_count+0x5>
     654:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <_encb_count+0x6>
     658:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <_encb_count+0x7>
     65c:	23 c0       	rjmp	.+70     	; 0x6a4 <__vector_2+0x15a>
     65e:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <_encb_count>
     662:	30 91 30 01 	lds	r19, 0x0130	; 0x800130 <_encb_count+0x1>
     666:	40 91 31 01 	lds	r20, 0x0131	; 0x800131 <_encb_count+0x2>
     66a:	50 91 32 01 	lds	r21, 0x0132	; 0x800132 <_encb_count+0x3>
     66e:	60 91 33 01 	lds	r22, 0x0133	; 0x800133 <_encb_count+0x4>
     672:	70 91 34 01 	lds	r23, 0x0134	; 0x800134 <_encb_count+0x5>
     676:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <_encb_count+0x6>
     67a:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <_encb_count+0x7>
     67e:	af ef       	ldi	r26, 0xFF	; 255
     680:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     684:	20 93 2f 01 	sts	0x012F, r18	; 0x80012f <_encb_count>
     688:	30 93 30 01 	sts	0x0130, r19	; 0x800130 <_encb_count+0x1>
     68c:	40 93 31 01 	sts	0x0131, r20	; 0x800131 <_encb_count+0x2>
     690:	50 93 32 01 	sts	0x0132, r21	; 0x800132 <_encb_count+0x3>
     694:	60 93 33 01 	sts	0x0133, r22	; 0x800133 <_encb_count+0x4>
     698:	70 93 34 01 	sts	0x0134, r23	; 0x800134 <_encb_count+0x5>
     69c:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <_encb_count+0x6>
     6a0:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <_encb_count+0x7>
     6a4:	ff 91       	pop	r31
     6a6:	ef 91       	pop	r30
     6a8:	bf 91       	pop	r27
     6aa:	af 91       	pop	r26
     6ac:	9f 91       	pop	r25
     6ae:	8f 91       	pop	r24
     6b0:	7f 91       	pop	r23
     6b2:	6f 91       	pop	r22
     6b4:	5f 91       	pop	r21
     6b6:	4f 91       	pop	r20
     6b8:	3f 91       	pop	r19
     6ba:	2f 91       	pop	r18
     6bc:	1f 91       	pop	r17
     6be:	0f 91       	pop	r16
     6c0:	ff 90       	pop	r15
     6c2:	ef 90       	pop	r14
     6c4:	df 90       	pop	r13
     6c6:	cf 90       	pop	r12
     6c8:	bf 90       	pop	r11
     6ca:	af 90       	pop	r10
     6cc:	0f 90       	pop	r0
     6ce:	0f be       	out	0x3f, r0	; 63
     6d0:	0f 90       	pop	r0
     6d2:	1f 90       	pop	r1
     6d4:	18 95       	reti

000006d6 <_omega_from_encA>:
     6d6:	cf 92       	push	r12
     6d8:	df 92       	push	r13
     6da:	ef 92       	push	r14
     6dc:	ff 92       	push	r15
     6de:	cf 93       	push	r28
     6e0:	c0 91 2e 01 	lds	r28, 0x012E	; 0x80012e <_dir_a>
     6e4:	20 91 57 01 	lds	r18, 0x0157	; 0x800157 <_tick_timeA>
     6e8:	30 91 58 01 	lds	r19, 0x0158	; 0x800158 <_tick_timeA+0x1>
     6ec:	40 91 59 01 	lds	r20, 0x0159	; 0x800159 <_tick_timeA+0x2>
     6f0:	50 91 5a 01 	lds	r21, 0x015A	; 0x80015a <_tick_timeA+0x3>
     6f4:	60 91 5b 01 	lds	r22, 0x015B	; 0x80015b <_tick_timeA+0x4>
     6f8:	70 91 5c 01 	lds	r23, 0x015C	; 0x80015c <_tick_timeA+0x5>
     6fc:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <_tick_timeA+0x6>
     700:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <_tick_timeA+0x7>
     704:	0e 94 27 08 	call	0x104e	; 0x104e <__floatundisf>
     708:	9b 01       	movw	r18, r22
     70a:	ac 01       	movw	r20, r24
     70c:	60 ec       	ldi	r22, 0xC0	; 192
     70e:	7f ee       	ldi	r23, 0xEF	; 239
     710:	89 e3       	ldi	r24, 0x39	; 57
     712:	98 e4       	ldi	r25, 0x48	; 72
     714:	0e 94 42 07 	call	0xe84	; 0xe84 <__divsf3>
     718:	6b 01       	movw	r12, r22
     71a:	7c 01       	movw	r14, r24
     71c:	6c 2f       	mov	r22, r28
     71e:	cc 0f       	add	r28, r28
     720:	77 0b       	sbc	r23, r23
     722:	88 0b       	sbc	r24, r24
     724:	99 0b       	sbc	r25, r25
     726:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <__floatsisf>
     72a:	9b 01       	movw	r18, r22
     72c:	ac 01       	movw	r20, r24
     72e:	c7 01       	movw	r24, r14
     730:	b6 01       	movw	r22, r12
     732:	0e 94 b6 08 	call	0x116c	; 0x116c <__mulsf3>
     736:	cf 91       	pop	r28
     738:	ff 90       	pop	r15
     73a:	ef 90       	pop	r14
     73c:	df 90       	pop	r13
     73e:	cf 90       	pop	r12
     740:	08 95       	ret

00000742 <_omega_from_encB>:
     742:	af 92       	push	r10
     744:	bf 92       	push	r11
     746:	cf 92       	push	r12
     748:	df 92       	push	r13
     74a:	ef 92       	push	r14
     74c:	ff 92       	push	r15
     74e:	0f 93       	push	r16
     750:	1f 93       	push	r17
     752:	a0 90 4f 01 	lds	r10, 0x014F	; 0x80014f <_tick_timeB>
     756:	b0 90 50 01 	lds	r11, 0x0150	; 0x800150 <_tick_timeB+0x1>
     75a:	c0 90 51 01 	lds	r12, 0x0151	; 0x800151 <_tick_timeB+0x2>
     75e:	d0 90 52 01 	lds	r13, 0x0152	; 0x800152 <_tick_timeB+0x3>
     762:	e0 90 53 01 	lds	r14, 0x0153	; 0x800153 <_tick_timeB+0x4>
     766:	f0 90 54 01 	lds	r15, 0x0154	; 0x800154 <_tick_timeB+0x5>
     76a:	00 91 55 01 	lds	r16, 0x0155	; 0x800155 <_tick_timeB+0x6>
     76e:	10 91 56 01 	lds	r17, 0x0156	; 0x800156 <_tick_timeB+0x7>
     772:	2f eb       	ldi	r18, 0xBF	; 191
     774:	37 ee       	ldi	r19, 0xE7	; 231
     776:	42 e0       	ldi	r20, 0x02	; 2
     778:	50 e0       	ldi	r21, 0x00	; 0
     77a:	60 e0       	ldi	r22, 0x00	; 0
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__udivdi3>
     786:	0e 94 27 08 	call	0x104e	; 0x104e <__floatundisf>
     78a:	1f 91       	pop	r17
     78c:	0f 91       	pop	r16
     78e:	ff 90       	pop	r15
     790:	ef 90       	pop	r14
     792:	df 90       	pop	r13
     794:	cf 90       	pop	r12
     796:	bf 90       	pop	r11
     798:	af 90       	pop	r10
     79a:	08 95       	ret

0000079c <_insertion_sort>:
		}
	}
	_pmB_prev = _pmB_current;
}
void _insertion_sort(uint16_t arr[], int n)
{
     79c:	0f 93       	push	r16
     79e:	1f 93       	push	r17
     7a0:	cf 93       	push	r28
     7a2:	df 93       	push	r29
    int i, key, j;
    for (i = 1; i < n; i++) {
     7a4:	62 30       	cpi	r22, 0x02	; 2
     7a6:	71 05       	cpc	r23, r1
     7a8:	4c f1       	brlt	.+82     	; 0x7fc <_insertion_sort+0x60>
     7aa:	ec 01       	movw	r28, r24
     7ac:	8b 01       	movw	r16, r22
     7ae:	01 50       	subi	r16, 0x01	; 1
     7b0:	11 09       	sbc	r17, r1
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	70 e0       	ldi	r23, 0x00	; 0
        key = arr[i];
     7b6:	aa 81       	ldd	r26, Y+2	; 0x02
     7b8:	bb 81       	ldd	r27, Y+3	; 0x03
        j = i - 1;
     7ba:	9b 01       	movw	r18, r22
 
        /* Move elements of arr[0..i-1], that are
          greater than key, to one position ahead
          of their current position */
        while (j >= 0 && arr[j] > key) {
     7bc:	77 23       	and	r23, r23
     7be:	84 f0       	brlt	.+32     	; 0x7e0 <_insertion_sort+0x44>
     7c0:	48 81       	ld	r20, Y
     7c2:	59 81       	ldd	r21, Y+1	; 0x01
     7c4:	a4 17       	cp	r26, r20
     7c6:	b5 07       	cpc	r27, r21
     7c8:	58 f4       	brcc	.+22     	; 0x7e0 <_insertion_sort+0x44>
     7ca:	fe 01       	movw	r30, r28
            arr[j + 1] = arr[j];
     7cc:	53 83       	std	Z+3, r21	; 0x03
     7ce:	42 83       	std	Z+2, r20	; 0x02
            j = j - 1;
     7d0:	21 50       	subi	r18, 0x01	; 1
     7d2:	31 09       	sbc	r19, r1
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <_insertion_sort+0x44>
        j = i - 1;
 
        /* Move elements of arr[0..i-1], that are
          greater than key, to one position ahead
          of their current position */
        while (j >= 0 && arr[j] > key) {
     7d6:	52 91       	ld	r21, -Z
     7d8:	42 91       	ld	r20, -Z
     7da:	a4 17       	cp	r26, r20
     7dc:	b5 07       	cpc	r27, r21
     7de:	b0 f3       	brcs	.-20     	; 0x7cc <_insertion_sort+0x30>
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
     7e0:	f9 01       	movw	r30, r18
     7e2:	31 96       	adiw	r30, 0x01	; 1
     7e4:	ee 0f       	add	r30, r30
     7e6:	ff 1f       	adc	r31, r31
     7e8:	e8 0f       	add	r30, r24
     7ea:	f9 1f       	adc	r31, r25
     7ec:	b1 83       	std	Z+1, r27	; 0x01
     7ee:	a0 83       	st	Z, r26
     7f0:	6f 5f       	subi	r22, 0xFF	; 255
     7f2:	7f 4f       	sbci	r23, 0xFF	; 255
     7f4:	22 96       	adiw	r28, 0x02	; 2
	_pmB_prev = _pmB_current;
}
void _insertion_sort(uint16_t arr[], int n)
{
    int i, key, j;
    for (i = 1; i < n; i++) {
     7f6:	60 17       	cp	r22, r16
     7f8:	71 07       	cpc	r23, r17
     7fa:	e9 f6       	brne	.-70     	; 0x7b6 <_insertion_sort+0x1a>
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	0f 91       	pop	r16
     804:	08 95       	ret

00000806 <__vector_9>:
{
	return _omega_from_PMB() * 0.3f + _omega_from_encB() * 0.7f;
}

ISR(TIMER2_OVF_vect)
{
     806:	1f 92       	push	r1
     808:	0f 92       	push	r0
     80a:	0f b6       	in	r0, 0x3f	; 63
     80c:	0f 92       	push	r0
     80e:	11 24       	eor	r1, r1
     810:	ef 92       	push	r14
     812:	ff 92       	push	r15
     814:	0f 93       	push	r16
     816:	1f 93       	push	r17
     818:	2f 93       	push	r18
     81a:	3f 93       	push	r19
     81c:	4f 93       	push	r20
     81e:	5f 93       	push	r21
     820:	6f 93       	push	r22
     822:	7f 93       	push	r23
     824:	8f 93       	push	r24
     826:	9f 93       	push	r25
     828:	af 93       	push	r26
     82a:	bf 93       	push	r27
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	ef 93       	push	r30
     832:	ff 93       	push	r31
	uint16_t snap = __read_PM(PMA);
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
	if ( (snap < __PM_lower_bound) || (snap > __PM_upper_bound) )
     83a:	88 5c       	subi	r24, 0xC8	; 200
     83c:	91 09       	sbc	r25, r1
     83e:	89 35       	cpi	r24, 0x59	; 89
     840:	92 40       	sbci	r25, 0x02	; 2
     842:	88 f0       	brcs	.+34     	; 0x866 <__vector_9+0x60>
	{
		_pmA_current = -1;
     844:	8f ef       	ldi	r24, 0xFF	; 255
     846:	9f ef       	ldi	r25, 0xFF	; 255
     848:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <_pmA_current+0x1>
     84c:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <_pmA_current>
		_omega_pmA = _omega_from_encA();
     850:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_omega_from_encA>
     854:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <_omega_pmA>
     858:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <_omega_pmA+0x1>
     85c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <_omega_pmA+0x2>
     860:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <_omega_pmA+0x3>
     864:	4a c0       	rjmp	.+148    	; 0x8fa <__vector_9+0xf4>
	}
	else
	{
		if ( _pmA_prev == -1 )
     866:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     86a:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     86e:	01 96       	adiw	r24, 0x01	; 1
     870:	59 f4       	brne	.+22     	; 0x888 <__vector_9+0x82>
		{
			_omega_pmA = _omega_from_encA();
     872:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_omega_from_encA>
     876:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <_omega_pmA>
     87a:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <_omega_pmA+0x1>
     87e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <_omega_pmA+0x2>
     882:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <_omega_pmA+0x3>
     886:	39 c0       	rjmp	.+114    	; 0x8fa <__vector_9+0xf4>
		}
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
     888:	8a e0       	ldi	r24, 0x0A	; 10
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <malloc>
     890:	7c 01       	movw	r14, r24
     892:	ec 01       	movw	r28, r24
     894:	8c 01       	movw	r16, r24
     896:	06 5f       	subi	r16, 0xF6	; 246
     898:	1f 4f       	sbci	r17, 0xFF	; 255
	
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
			{
				reads[i] = __read_PM(PMA);
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
     8a0:	89 93       	st	Y+, r24
     8a2:	99 93       	st	Y+, r25
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
	
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
     8a4:	c0 17       	cp	r28, r16
     8a6:	d1 07       	cpc	r29, r17
     8a8:	c1 f7       	brne	.-16     	; 0x89a <__vector_9+0x94>
			{
				reads[i] = __read_PM(PMA);
			}
			// Sort outcome
			_insertion_sort(reads, __PM_SAMPLE_COUNT);
     8aa:	65 e0       	ldi	r22, 0x05	; 5
     8ac:	70 e0       	ldi	r23, 0x00	; 0
     8ae:	c7 01       	movw	r24, r14
     8b0:	0e 94 ce 03 	call	0x79c	; 0x79c <_insertion_sort>
			_pmA_current = reads[(__PM_SAMPLE_COUNT >> 1)];
     8b4:	f7 01       	movw	r30, r14
     8b6:	84 81       	ldd	r24, Z+4	; 0x04
     8b8:	95 81       	ldd	r25, Z+5	; 0x05
     8ba:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <_pmA_current+0x1>
     8be:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <_pmA_current>
			_omega_pmA = __PM_SLOPE * (float)(_pmA_current - _pmA_prev);
     8c2:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <_pmA_current>
     8c6:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <_pmA_current+0x1>
     8ca:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     8ce:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     8d2:	68 1b       	sub	r22, r24
     8d4:	79 0b       	sbc	r23, r25
     8d6:	80 e0       	ldi	r24, 0x00	; 0
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__floatunsisf>
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	48 e5       	ldi	r20, 0x58	; 88
     8e4:	51 e4       	ldi	r21, 0x41	; 65
     8e6:	0e 94 b6 08 	call	0x116c	; 0x116c <__mulsf3>
     8ea:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <_omega_pmA>
     8ee:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <_omega_pmA+0x1>
     8f2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <_omega_pmA+0x2>
     8f6:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <_omega_pmA+0x3>
		}
	}
	_pmA_prev = _pmA_current;
     8fa:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_pmA_current>
     8fe:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <_pmA_current+0x1>
     902:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_pmA_prev+0x1>
     906:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_pmA_prev>
}
     90a:	ff 91       	pop	r31
     90c:	ef 91       	pop	r30
     90e:	df 91       	pop	r29
     910:	cf 91       	pop	r28
     912:	bf 91       	pop	r27
     914:	af 91       	pop	r26
     916:	9f 91       	pop	r25
     918:	8f 91       	pop	r24
     91a:	7f 91       	pop	r23
     91c:	6f 91       	pop	r22
     91e:	5f 91       	pop	r21
     920:	4f 91       	pop	r20
     922:	3f 91       	pop	r19
     924:	2f 91       	pop	r18
     926:	1f 91       	pop	r17
     928:	0f 91       	pop	r16
     92a:	ff 90       	pop	r15
     92c:	ef 90       	pop	r14
     92e:	0f 90       	pop	r0
     930:	0f be       	out	0x3f, r0	; 63
     932:	0f 90       	pop	r0
     934:	1f 90       	pop	r1
     936:	18 95       	reti

00000938 <__vector_14>:


ISR(TIMER0_COMPA_vect)
{
     938:	1f 92       	push	r1
     93a:	0f 92       	push	r0
     93c:	0f b6       	in	r0, 0x3f	; 63
     93e:	0f 92       	push	r0
     940:	11 24       	eor	r1, r1
     942:	ef 92       	push	r14
     944:	ff 92       	push	r15
     946:	0f 93       	push	r16
     948:	1f 93       	push	r17
     94a:	2f 93       	push	r18
     94c:	3f 93       	push	r19
     94e:	4f 93       	push	r20
     950:	5f 93       	push	r21
     952:	6f 93       	push	r22
     954:	7f 93       	push	r23
     956:	8f 93       	push	r24
     958:	9f 93       	push	r25
     95a:	af 93       	push	r26
     95c:	bf 93       	push	r27
     95e:	cf 93       	push	r28
     960:	df 93       	push	r29
     962:	ef 93       	push	r30
     964:	ff 93       	push	r31
	uint16_t snap = __read_PM(PMB);
     966:	81 e0       	ldi	r24, 0x01	; 1
     968:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
	if ( (snap < __PM_lower_bound) || (snap > __PM_upper_bound) )
     96c:	88 5c       	subi	r24, 0xC8	; 200
     96e:	91 09       	sbc	r25, r1
     970:	89 35       	cpi	r24, 0x59	; 89
     972:	92 40       	sbci	r25, 0x02	; 2
     974:	88 f0       	brcs	.+34     	; 0x998 <__vector_14+0x60>
	{
		_pmB_current = -1;
     976:	8f ef       	ldi	r24, 0xFF	; 255
     978:	9f ef       	ldi	r25, 0xFF	; 255
     97a:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <_pmB_current+0x1>
     97e:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <_pmB_current>
		_omega_pmB = _omega_from_encA();
     982:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_omega_from_encA>
     986:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
     98a:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <__data_end+0x1>
     98e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end+0x2>
     992:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x3>
     996:	4a c0       	rjmp	.+148    	; 0xa2c <__vector_14+0xf4>
	}
	else
	{
		if ( _pmA_prev == -1 )
     998:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_pmA_prev>
     99c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_pmA_prev+0x1>
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	59 f4       	brne	.+22     	; 0x9ba <__vector_14+0x82>
		{
			_omega_pmB = _omega_from_encB();
     9a4:	0e 94 a1 03 	call	0x742	; 0x742 <_omega_from_encB>
     9a8:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
     9ac:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <__data_end+0x1>
     9b0:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end+0x2>
     9b4:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x3>
     9b8:	39 c0       	rjmp	.+114    	; 0xa2c <__vector_14+0xf4>
		}
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
     9ba:	8a e0       	ldi	r24, 0x0A	; 10
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <malloc>
     9c2:	7c 01       	movw	r14, r24
     9c4:	ec 01       	movw	r28, r24
     9c6:	8c 01       	movw	r16, r24
     9c8:	06 5f       	subi	r16, 0xF6	; 246
     9ca:	1f 4f       	sbci	r17, 0xFF	; 255
			
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
			{
				reads[i] = __read_PM(PMB);
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	0e 94 3a 01 	call	0x274	; 0x274 <_adc_read>
     9d2:	89 93       	st	Y+, r24
     9d4:	99 93       	st	Y+, r25
		else
		{
			// make 5 successive reads
			uint16_t *reads = (uint16_t*) malloc(__PM_SAMPLE_COUNT * sizeof(uint16_t));
			
			for (uint8_t i = 0 ; i < __PM_SAMPLE_COUNT ; i ++)
     9d6:	c0 17       	cp	r28, r16
     9d8:	d1 07       	cpc	r29, r17
     9da:	c1 f7       	brne	.-16     	; 0x9cc <__vector_14+0x94>
			{
				reads[i] = __read_PM(PMB);
			}
			// Sort outcome
			_insertion_sort(reads, __PM_SAMPLE_COUNT);
     9dc:	65 e0       	ldi	r22, 0x05	; 5
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	c7 01       	movw	r24, r14
     9e2:	0e 94 ce 03 	call	0x79c	; 0x79c <_insertion_sort>
			_pmB_current = reads[(__PM_SAMPLE_COUNT >> 1)];
     9e6:	f7 01       	movw	r30, r14
     9e8:	84 81       	ldd	r24, Z+4	; 0x04
     9ea:	95 81       	ldd	r25, Z+5	; 0x05
     9ec:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <_pmB_current+0x1>
     9f0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <_pmB_current>
			_omega_pmB = __PM_SLOPE * (float)(_pmB_current - _pmB_prev);
     9f4:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <_pmB_current>
     9f8:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <_pmB_current+0x1>
     9fc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_pmB_prev>
     a00:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_pmB_prev+0x1>
     a04:	68 1b       	sub	r22, r24
     a06:	79 0b       	sbc	r23, r25
     a08:	80 e0       	ldi	r24, 0x00	; 0
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <__floatunsisf>
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	48 e5       	ldi	r20, 0x58	; 88
     a16:	51 e4       	ldi	r21, 0x41	; 65
     a18:	0e 94 b6 08 	call	0x116c	; 0x116c <__mulsf3>
     a1c:	60 93 22 01 	sts	0x0122, r22	; 0x800122 <__data_end>
     a20:	70 93 23 01 	sts	0x0123, r23	; 0x800123 <__data_end+0x1>
     a24:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end+0x2>
     a28:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x3>
		}
	}
	_pmB_prev = _pmB_current;
     a2c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <_pmB_current>
     a30:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <_pmB_current+0x1>
     a34:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_pmB_prev+0x1>
     a38:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_pmB_prev>
}
     a3c:	ff 91       	pop	r31
     a3e:	ef 91       	pop	r30
     a40:	df 91       	pop	r29
     a42:	cf 91       	pop	r28
     a44:	bf 91       	pop	r27
     a46:	af 91       	pop	r26
     a48:	9f 91       	pop	r25
     a4a:	8f 91       	pop	r24
     a4c:	7f 91       	pop	r23
     a4e:	6f 91       	pop	r22
     a50:	5f 91       	pop	r21
     a52:	4f 91       	pop	r20
     a54:	3f 91       	pop	r19
     a56:	2f 91       	pop	r18
     a58:	1f 91       	pop	r17
     a5a:	0f 91       	pop	r16
     a5c:	ff 90       	pop	r15
     a5e:	ef 90       	pop	r14
     a60:	0f 90       	pop	r0
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	0f 90       	pop	r0
     a66:	1f 90       	pop	r1
     a68:	18 95       	reti

00000a6a <_set_pwm_0A>:
 */ 
#include <__pwm__.h>


void _set_pwm_0A(int input)
{
     a6a:	99 23       	and	r25, r25
     a6c:	14 f4       	brge	.+4      	; 0xa72 <_set_pwm_0A+0x8>
     a6e:	80 e0       	ldi	r24, 0x00	; 0
     a70:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR0A = (uint8_t)input;
     a72:	8f 3f       	cpi	r24, 0xFF	; 255
     a74:	91 05       	cpc	r25, r1
     a76:	19 f0       	breq	.+6      	; 0xa7e <_set_pwm_0A+0x14>
     a78:	14 f0       	brlt	.+4      	; 0xa7e <_set_pwm_0A+0x14>
     a7a:	8f ef       	ldi	r24, 0xFF	; 255
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	87 bd       	out	0x27, r24	; 39
     a80:	08 95       	ret

00000a82 <_set_pwm_0B>:
}
void _set_pwm_0B(int input)
{
     a82:	99 23       	and	r25, r25
     a84:	14 f4       	brge	.+4      	; 0xa8a <_set_pwm_0B+0x8>
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
	if (input > 255)
		{input = 255;}
	else if (input < 0)
		{input = 0;}
		
	OCR0B = (uint8_t)input;
     a8a:	8f 3f       	cpi	r24, 0xFF	; 255
     a8c:	91 05       	cpc	r25, r1
     a8e:	19 f0       	breq	.+6      	; 0xa96 <_set_pwm_0B+0x14>
     a90:	14 f0       	brlt	.+4      	; 0xa96 <_set_pwm_0B+0x14>
     a92:	8f ef       	ldi	r24, 0xFF	; 255
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	88 bd       	out	0x28, r24	; 40
     a98:	08 95       	ret

00000a9a <_set_pwm_1A>:
}
void _set_pwm_1A(int input)
{
     a9a:	99 23       	and	r25, r25
     a9c:	14 f4       	brge	.+4      	; 0xaa2 <_set_pwm_1A+0x8>
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1AH = (uint8_t)(input);
     aa2:	8f 3f       	cpi	r24, 0xFF	; 255
     aa4:	91 05       	cpc	r25, r1
     aa6:	19 f0       	breq	.+6      	; 0xaae <_set_pwm_1A+0x14>
     aa8:	14 f0       	brlt	.+4      	; 0xaae <_set_pwm_1A+0x14>
     aaa:	8f ef       	ldi	r24, 0xFF	; 255
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
	OCR1AL = 0;
     ab2:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     ab6:	08 95       	ret

00000ab8 <_set_pwm_1B>:
}
void _set_pwm_1B(int input)
{
     ab8:	99 23       	and	r25, r25
     aba:	14 f4       	brge	.+4      	; 0xac0 <_set_pwm_1B+0x8>
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	90 e0       	ldi	r25, 0x00	; 0
		{input = 255;}
	else if (input < 0)
		{input = 0;}
	
	
	OCR1BH = (uint8_t)(input);
     ac0:	8f 3f       	cpi	r24, 0xFF	; 255
     ac2:	91 05       	cpc	r25, r1
     ac4:	19 f0       	breq	.+6      	; 0xacc <_set_pwm_1B+0x14>
     ac6:	14 f0       	brlt	.+4      	; 0xacc <_set_pwm_1B+0x14>
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
	OCR1BL = 0;
     ad0:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     ad4:	08 95       	ret

00000ad6 <_timer0_init>:
	if ((TIFR0 & (1 << TOV0)) && (TCNT0 < 255))
	{
		_timer0_ovf_cnt++;
	}
	return ((_timer0_ovf_cnt << 8) + TCNT0)/1000;
}
     ad6:	84 b5       	in	r24, 0x24	; 36
     ad8:	80 6a       	ori	r24, 0xA0	; 160
     ada:	84 bd       	out	0x24, r24	; 36
     adc:	84 b5       	in	r24, 0x24	; 36
     ade:	83 60       	ori	r24, 0x03	; 3
     ae0:	84 bd       	out	0x24, r24	; 36
     ae2:	85 b5       	in	r24, 0x25	; 37
     ae4:	81 60       	ori	r24, 0x01	; 1
     ae6:	85 bd       	out	0x25, r24	; 37
     ae8:	08 95       	ret

00000aea <_timer0_enable_ovf>:
     aea:	ee e6       	ldi	r30, 0x6E	; 110
     aec:	f0 e0       	ldi	r31, 0x00	; 0
     aee:	80 81       	ld	r24, Z
     af0:	81 60       	ori	r24, 0x01	; 1
     af2:	80 83       	st	Z, r24
     af4:	08 95       	ret

00000af6 <_micros0>:
     af6:	cf 93       	push	r28
     af8:	df 93       	push	r29
     afa:	a8 9b       	sbis	0x15, 0	; 21
     afc:	26 c0       	rjmp	.+76     	; 0xb4a <_micros0+0x54>
     afe:	86 b5       	in	r24, 0x26	; 38
     b00:	8f 3f       	cpi	r24, 0xFF	; 255
     b02:	19 f1       	breq	.+70     	; 0xb4a <_micros0+0x54>
     b04:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <_timer0_ovf_cnt>
     b08:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <_timer0_ovf_cnt+0x1>
     b0c:	40 91 64 01 	lds	r20, 0x0164	; 0x800164 <_timer0_ovf_cnt+0x2>
     b10:	50 91 65 01 	lds	r21, 0x0165	; 0x800165 <_timer0_ovf_cnt+0x3>
     b14:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <_timer0_ovf_cnt+0x4>
     b18:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <_timer0_ovf_cnt+0x5>
     b1c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <_timer0_ovf_cnt+0x6>
     b20:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <_timer0_ovf_cnt+0x7>
     b24:	a1 e0       	ldi	r26, 0x01	; 1
     b26:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     b2a:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <_timer0_ovf_cnt>
     b2e:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <_timer0_ovf_cnt+0x1>
     b32:	40 93 64 01 	sts	0x0164, r20	; 0x800164 <_timer0_ovf_cnt+0x2>
     b36:	50 93 65 01 	sts	0x0165, r21	; 0x800165 <_timer0_ovf_cnt+0x3>
     b3a:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <_timer0_ovf_cnt+0x4>
     b3e:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <_timer0_ovf_cnt+0x5>
     b42:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <_timer0_ovf_cnt+0x6>
     b46:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <_timer0_ovf_cnt+0x7>
     b4a:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <_timer0_ovf_cnt>
     b4e:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <_timer0_ovf_cnt+0x1>
     b52:	a0 91 64 01 	lds	r26, 0x0164	; 0x800164 <_timer0_ovf_cnt+0x2>
     b56:	b0 91 65 01 	lds	r27, 0x0165	; 0x800165 <_timer0_ovf_cnt+0x3>
     b5a:	c0 91 66 01 	lds	r28, 0x0166	; 0x800166 <_timer0_ovf_cnt+0x4>
     b5e:	d0 91 67 01 	lds	r29, 0x0167	; 0x800167 <_timer0_ovf_cnt+0x5>
     b62:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <_timer0_ovf_cnt+0x6>
     b66:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <_timer0_ovf_cnt+0x7>
     b6a:	26 b5       	in	r18, 0x26	; 38
     b6c:	ba 2f       	mov	r27, r26
     b6e:	a9 2f       	mov	r26, r25
     b70:	98 2f       	mov	r25, r24
     b72:	88 27       	eor	r24, r24
     b74:	bc 01       	movw	r22, r24
     b76:	cd 01       	movw	r24, r26
     b78:	62 0f       	add	r22, r18
     b7a:	71 1d       	adc	r23, r1
     b7c:	81 1d       	adc	r24, r1
     b7e:	91 1d       	adc	r25, r1
     b80:	df 91       	pop	r29
     b82:	cf 91       	pop	r28
     b84:	08 95       	ret

00000b86 <__vector_16>:

ISR(TIMER0_OVF_vect)
{
     b86:	1f 92       	push	r1
     b88:	0f 92       	push	r0
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	0f 92       	push	r0
     b8e:	11 24       	eor	r1, r1
     b90:	2f 93       	push	r18
     b92:	3f 93       	push	r19
     b94:	4f 93       	push	r20
     b96:	5f 93       	push	r21
     b98:	6f 93       	push	r22
     b9a:	7f 93       	push	r23
     b9c:	8f 93       	push	r24
     b9e:	9f 93       	push	r25
     ba0:	af 93       	push	r26
	_timer0_ovf_cnt++;
     ba2:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <_timer0_ovf_cnt>
     ba6:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <_timer0_ovf_cnt+0x1>
     baa:	40 91 64 01 	lds	r20, 0x0164	; 0x800164 <_timer0_ovf_cnt+0x2>
     bae:	50 91 65 01 	lds	r21, 0x0165	; 0x800165 <_timer0_ovf_cnt+0x3>
     bb2:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <_timer0_ovf_cnt+0x4>
     bb6:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <_timer0_ovf_cnt+0x5>
     bba:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <_timer0_ovf_cnt+0x6>
     bbe:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <_timer0_ovf_cnt+0x7>
     bc2:	a1 e0       	ldi	r26, 0x01	; 1
     bc4:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     bc8:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <_timer0_ovf_cnt>
     bcc:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <_timer0_ovf_cnt+0x1>
     bd0:	40 93 64 01 	sts	0x0164, r20	; 0x800164 <_timer0_ovf_cnt+0x2>
     bd4:	50 93 65 01 	sts	0x0165, r21	; 0x800165 <_timer0_ovf_cnt+0x3>
     bd8:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <_timer0_ovf_cnt+0x4>
     bdc:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <_timer0_ovf_cnt+0x5>
     be0:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <_timer0_ovf_cnt+0x6>
     be4:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <_timer0_ovf_cnt+0x7>
	
	static uint16_t i = 0;
	if(i < 157)
     be8:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <i.2417>
     bec:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <i.2417+0x1>
     bf0:	8d 39       	cpi	r24, 0x9D	; 157
     bf2:	91 05       	cpc	r25, r1
     bf4:	30 f4       	brcc	.+12     	; 0xc02 <__vector_16+0x7c>
	i++;
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <i.2417+0x1>
     bfc:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <i.2417>
     c00:	07 c0       	rjmp	.+14     	; 0xc10 <__vector_16+0x8a>
	else{
		flag = TRUE;
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <flag>
		i = 0;
     c08:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <i.2417+0x1>
     c0c:	10 92 5f 01 	sts	0x015F, r1	; 0x80015f <i.2417>
	}
     c10:	af 91       	pop	r26
     c12:	9f 91       	pop	r25
     c14:	8f 91       	pop	r24
     c16:	7f 91       	pop	r23
     c18:	6f 91       	pop	r22
     c1a:	5f 91       	pop	r21
     c1c:	4f 91       	pop	r20
     c1e:	3f 91       	pop	r19
     c20:	2f 91       	pop	r18
     c22:	0f 90       	pop	r0
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	0f 90       	pop	r0
     c28:	1f 90       	pop	r1
     c2a:	18 95       	reti

00000c2c <_timer1_init>:
uint64_t _millis(void)
{
	uint16_t tmr = TCNT1L;
	tmr |= (TCNT1H << 8);
	return _TICK_MS*(tmr + ( _tmr_overflow_count << 16));
}
     c2c:	e0 e8       	ldi	r30, 0x80	; 128
     c2e:	f0 e0       	ldi	r31, 0x00	; 0
     c30:	80 81       	ld	r24, Z
     c32:	80 6a       	ori	r24, 0xA0	; 160
     c34:	80 83       	st	Z, r24
     c36:	80 81       	ld	r24, Z
     c38:	82 60       	ori	r24, 0x02	; 2
     c3a:	80 83       	st	Z, r24
     c3c:	8f ef       	ldi	r24, 0xFF	; 255
     c3e:	9f ef       	ldi	r25, 0xFF	; 255
     c40:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     c44:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     c48:	e1 e8       	ldi	r30, 0x81	; 129
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	80 81       	ld	r24, Z
     c4e:	88 61       	ori	r24, 0x18	; 24
     c50:	80 83       	st	Z, r24
     c52:	80 81       	ld	r24, Z
     c54:	81 60       	ori	r24, 0x01	; 1
     c56:	80 83       	st	Z, r24
     c58:	ef e6       	ldi	r30, 0x6F	; 111
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	80 81       	ld	r24, Z
     c5e:	81 60       	ori	r24, 0x01	; 1
     c60:	80 83       	st	Z, r24
     c62:	08 95       	ret

00000c64 <_micros>:
     c64:	8f 92       	push	r8
     c66:	9f 92       	push	r9
     c68:	af 92       	push	r10
     c6a:	bf 92       	push	r11
     c6c:	cf 92       	push	r12
     c6e:	df 92       	push	r13
     c70:	ef 92       	push	r14
     c72:	ff 92       	push	r15
     c74:	0f 93       	push	r16
     c76:	1f 93       	push	r17
     c78:	cf 93       	push	r28
     c7a:	df 93       	push	r29
     c7c:	80 90 84 00 	lds	r8, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
     c80:	e0 91 85 00 	lds	r30, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
     c84:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <_tmr_overflow_count>
     c88:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <_tmr_overflow_count+0x1>
     c8c:	40 91 6c 01 	lds	r20, 0x016C	; 0x80016c <_tmr_overflow_count+0x2>
     c90:	50 91 6d 01 	lds	r21, 0x016D	; 0x80016d <_tmr_overflow_count+0x3>
     c94:	60 91 6e 01 	lds	r22, 0x016E	; 0x80016e <_tmr_overflow_count+0x4>
     c98:	70 91 6f 01 	lds	r23, 0x016F	; 0x80016f <_tmr_overflow_count+0x5>
     c9c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <_tmr_overflow_count+0x6>
     ca0:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <_tmr_overflow_count+0x7>
     ca4:	91 2c       	mov	r9, r1
     ca6:	9e 2a       	or	r9, r30
     ca8:	00 e1       	ldi	r16, 0x10	; 16
     caa:	0e 94 bd 09 	call	0x137a	; 0x137a <__ashldi3>
     cae:	d2 2f       	mov	r29, r18
     cb0:	c3 2f       	mov	r28, r19
     cb2:	b4 2f       	mov	r27, r20
     cb4:	a5 2f       	mov	r26, r21
     cb6:	f6 2f       	mov	r31, r22
     cb8:	e7 2f       	mov	r30, r23
     cba:	08 2f       	mov	r16, r24
     cbc:	19 2f       	mov	r17, r25
     cbe:	28 2d       	mov	r18, r8
     cc0:	39 2d       	mov	r19, r9
     cc2:	40 e0       	ldi	r20, 0x00	; 0
     cc4:	50 e0       	ldi	r21, 0x00	; 0
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	90 e0       	ldi	r25, 0x00	; 0
     cce:	ad 2e       	mov	r10, r29
     cd0:	bc 2e       	mov	r11, r28
     cd2:	cb 2e       	mov	r12, r27
     cd4:	da 2e       	mov	r13, r26
     cd6:	ef 2e       	mov	r14, r31
     cd8:	fe 2e       	mov	r15, r30
     cda:	0e 94 d6 09 	call	0x13ac	; 0x13ac <__adddi3>
     cde:	df 91       	pop	r29
     ce0:	cf 91       	pop	r28
     ce2:	1f 91       	pop	r17
     ce4:	0f 91       	pop	r16
     ce6:	ff 90       	pop	r15
     ce8:	ef 90       	pop	r14
     cea:	df 90       	pop	r13
     cec:	cf 90       	pop	r12
     cee:	bf 90       	pop	r11
     cf0:	af 90       	pop	r10
     cf2:	9f 90       	pop	r9
     cf4:	8f 90       	pop	r8
     cf6:	08 95       	ret

00000cf8 <__vector_13>:

ISR(TIMER1_OVF_vect)
{
     cf8:	1f 92       	push	r1
     cfa:	0f 92       	push	r0
     cfc:	0f b6       	in	r0, 0x3f	; 63
     cfe:	0f 92       	push	r0
     d00:	11 24       	eor	r1, r1
     d02:	2f 93       	push	r18
     d04:	3f 93       	push	r19
     d06:	4f 93       	push	r20
     d08:	5f 93       	push	r21
     d0a:	6f 93       	push	r22
     d0c:	7f 93       	push	r23
     d0e:	8f 93       	push	r24
     d10:	9f 93       	push	r25
     d12:	af 93       	push	r26
	_tmr_overflow_count++;
     d14:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <_tmr_overflow_count>
     d18:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <_tmr_overflow_count+0x1>
     d1c:	40 91 6c 01 	lds	r20, 0x016C	; 0x80016c <_tmr_overflow_count+0x2>
     d20:	50 91 6d 01 	lds	r21, 0x016D	; 0x80016d <_tmr_overflow_count+0x3>
     d24:	60 91 6e 01 	lds	r22, 0x016E	; 0x80016e <_tmr_overflow_count+0x4>
     d28:	70 91 6f 01 	lds	r23, 0x016F	; 0x80016f <_tmr_overflow_count+0x5>
     d2c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <_tmr_overflow_count+0x6>
     d30:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <_tmr_overflow_count+0x7>
     d34:	a1 e0       	ldi	r26, 0x01	; 1
     d36:	0e 94 df 09 	call	0x13be	; 0x13be <__adddi3_s8>
     d3a:	20 93 6a 01 	sts	0x016A, r18	; 0x80016a <_tmr_overflow_count>
     d3e:	30 93 6b 01 	sts	0x016B, r19	; 0x80016b <_tmr_overflow_count+0x1>
     d42:	40 93 6c 01 	sts	0x016C, r20	; 0x80016c <_tmr_overflow_count+0x2>
     d46:	50 93 6d 01 	sts	0x016D, r21	; 0x80016d <_tmr_overflow_count+0x3>
     d4a:	60 93 6e 01 	sts	0x016E, r22	; 0x80016e <_tmr_overflow_count+0x4>
     d4e:	70 93 6f 01 	sts	0x016F, r23	; 0x80016f <_tmr_overflow_count+0x5>
     d52:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <_tmr_overflow_count+0x6>
     d56:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <_tmr_overflow_count+0x7>
	float ea = _setpoint_a;
     d5a:	af 91       	pop	r26
     d5c:	9f 91       	pop	r25
     d5e:	8f 91       	pop	r24
     d60:	7f 91       	pop	r23
     d62:	6f 91       	pop	r22
     d64:	5f 91       	pop	r21
     d66:	4f 91       	pop	r20
     d68:	3f 91       	pop	r19
     d6a:	2f 91       	pop	r18
     d6c:	0f 90       	pop	r0
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	0f 90       	pop	r0
     d72:	1f 90       	pop	r1
     d74:	18 95       	reti

00000d76 <_uart_put_char>:
#include <__usart__.h>

static int _uart_put_char(char input, FILE *stream)
{
     d76:	cf 93       	push	r28
     d78:	c8 2f       	mov	r28, r24
	if (input == '\n')
     d7a:	8a 30       	cpi	r24, 0x0A	; 10
     d7c:	19 f4       	brne	.+6      	; 0xd84 <_uart_put_char+0xe>
	_uart_put_char('\r', stream);
     d7e:	8d e0       	ldi	r24, 0x0D	; 13
     d80:	0e 94 bb 06 	call	0xd76	; 0xd76 <_uart_put_char>
	
	while(!((UCSR0A >> UDRE0) & 1)); // wait until buffer is ready for data
     d84:	e0 ec       	ldi	r30, 0xC0	; 192
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	80 81       	ld	r24, Z
     d8a:	85 ff       	sbrs	r24, 5
     d8c:	fd cf       	rjmp	.-6      	; 0xd88 <_uart_put_char+0x12>
	UDR0 = input;
     d8e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
     d92:	80 e0       	ldi	r24, 0x00	; 0
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	cf 91       	pop	r28
     d98:	08 95       	ret

00000d9a <_uart_get_char>:

static int _uart_get_char(FILE *stream)
{
	uint8_t c;
	while(!(UCSR0A&(1<<RXC0)));
     d9a:	e0 ec       	ldi	r30, 0xC0	; 192
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	88 23       	and	r24, r24
     da2:	ec f7       	brge	.-6      	; 0xd9e <_uart_get_char+0x4>
	c = UDR0;
     da4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	//_uart_put_char(c,stream); // for debug only
	return c;
}
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	08 95       	ret

00000dac <usart_init>:

void usart_init(void)
{
	UBRR0H = (uint8_t) (BRC >> 8); // baud
     dac:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (uint8_t) BRC; // baud
     db0:	8c e0       	ldi	r24, 0x0C	; 12
     db2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>

	UCSR0B = (1 << TXEN0) | (1 << RXEN0); // enable rx and tx
     db6:	88 e1       	ldi	r24, 0x18	; 24
     db8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // clock
     dbc:	86 e0       	ldi	r24, 0x06	; 6
     dbe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	//UCSR0A |= (1 << U2X0); // double speed
	
	stdin = stdout = &uart_str; // link stdin and stdout to uart
     dc2:	e8 e8       	ldi	r30, 0x88	; 136
     dc4:	f1 e0       	ldi	r31, 0x01	; 1
     dc6:	8a e0       	ldi	r24, 0x0A	; 10
     dc8:	91 e0       	ldi	r25, 0x01	; 1
     dca:	93 83       	std	Z+3, r25	; 0x03
     dcc:	82 83       	std	Z+2, r24	; 0x02
     dce:	91 83       	std	Z+1, r25	; 0x01
     dd0:	80 83       	st	Z, r24
     dd2:	08 95       	ret

00000dd4 <board_init>:
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
	
	usart_init();
     dd4:	0e 94 d6 06 	call	0xdac	; 0xdac <usart_init>
	_adc_init();
     dd8:	0e 94 2e 01 	call	0x25c	; 0x25c <_adc_init>
	_timer1_init();
     ddc:	0e 94 16 06 	call	0xc2c	; 0xc2c <_timer1_init>
	_timer0_init();
     de0:	0e 94 6b 05 	call	0xad6	; 0xad6 <_timer0_init>
	_timer0_enable_ovf();
     de4:	0e 94 75 05 	call	0xaea	; 0xaea <_timer0_enable_ovf>
	_interrupt0_enable(_INT_RISING_EDGE);
     de8:	83 e0       	ldi	r24, 0x03	; 3
     dea:	0e 94 a1 01 	call	0x342	; 0x342 <_interrupt0_enable>
     dee:	08 95       	ret

00000df0 <sens>:
 *
 * This function must return the measured data
 */
float sens(void)
{
  return (_omega_from_encA()*9.55);
     df0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <_omega_from_encA>
     df4:	2d ec       	ldi	r18, 0xCD	; 205
     df6:	3c ec       	ldi	r19, 0xCC	; 204
     df8:	48 e1       	ldi	r20, 0x18	; 24
     dfa:	51 e4       	ldi	r21, 0x41	; 65
     dfc:	0e 94 b6 08 	call	0x116c	; 0x116c <__mulsf3>
}
     e00:	08 95       	ret

00000e02 <command>:

void command(int16_t inputValue)
{
	_set_speed(MA,inputValue);
     e02:	bc 01       	movw	r22, r24
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	0e 94 63 01 	call	0x2c6	; 0x2c6 <_set_speed>
     e0a:	08 95       	ret

00000e0c <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();
     e0c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <board_init>
	pid_Init(K_P * SCALING_FACTOR, K_I * SCALING_FACTOR , K_D * SCALING_FACTOR , &pidData);
     e10:	22 e7       	ldi	r18, 0x72	; 114
     e12:	31 e0       	ldi	r19, 0x01	; 1
     e14:	40 e4       	ldi	r20, 0x40	; 64
     e16:	50 e0       	ldi	r21, 0x00	; 0
     e18:	60 e4       	ldi	r22, 0x40	; 64
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	91 e0       	ldi	r25, 0x01	; 1
     e20:	0e 94 53 00 	call	0xa6	; 0xa6 <pid_Init>
	int16_t referenceValue, measurementValue, inputValue;
	sei();
     e24:	78 94       	sei
	
	DDRB = 0xFF;
     e26:	8f ef       	ldi	r24, 0xFF	; 255
     e28:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b11101011;
     e2a:	8b ee       	ldi	r24, 0xEB	; 235
     e2c:	8a b9       	out	0x0a, r24	; 10

			inputValue = pid_Controller(referenceValue, measurementValue, &pidData);

			command(inputValue);
			
			printf("%d - %d\n",measurementValue, inputValue);
     e2e:	0f 2e       	mov	r0, r31
     e30:	f8 e1       	ldi	r31, 0x18	; 24
     e32:	ef 2e       	mov	r14, r31
     e34:	f1 e0       	ldi	r31, 0x01	; 1
     e36:	ff 2e       	mov	r15, r31
     e38:	f0 2d       	mov	r31, r0
	
	DDRB = 0xFF;
	DDRD = 0b11101011;
	while (1)
	{
		if(flag)
     e3a:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <flag>
     e3e:	88 23       	and	r24, r24
     e40:	e1 f3       	breq	.-8      	; 0xe3a <main+0x2e>
		{
			referenceValue = ref();
			measurementValue = (int16_t)sens();
     e42:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <sens>
     e46:	0e 94 b4 07 	call	0xf68	; 0xf68 <__fixsfsi>
     e4a:	c6 2f       	mov	r28, r22
     e4c:	d7 2f       	mov	r29, r23

			inputValue = pid_Controller(referenceValue, measurementValue, &pidData);
     e4e:	42 e7       	ldi	r20, 0x72	; 114
     e50:	51 e0       	ldi	r21, 0x01	; 1
     e52:	89 e1       	ldi	r24, 0x19	; 25
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 80 00 	call	0x100	; 0x100 <pid_Controller>
     e5a:	18 2f       	mov	r17, r24
     e5c:	09 2f       	mov	r16, r25

			command(inputValue);
     e5e:	0e 94 01 07 	call	0xe02	; 0xe02 <command>
			
			printf("%d - %d\n",measurementValue, inputValue);
     e62:	0f 93       	push	r16
     e64:	1f 93       	push	r17
     e66:	df 93       	push	r29
     e68:	cf 93       	push	r28
     e6a:	ff 92       	push	r15
     e6c:	ef 92       	push	r14
     e6e:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <printf>

			flag = FALSE;
     e72:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <flag>
     e76:	0f 90       	pop	r0
     e78:	0f 90       	pop	r0
     e7a:	0f 90       	pop	r0
     e7c:	0f 90       	pop	r0
     e7e:	0f 90       	pop	r0
     e80:	0f 90       	pop	r0
     e82:	db cf       	rjmp	.-74     	; 0xe3a <main+0x2e>

00000e84 <__divsf3>:
     e84:	0e 94 56 07 	call	0xeac	; 0xeac <__divsf3x>
     e88:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_round>
     e8c:	0e 94 75 08 	call	0x10ea	; 0x10ea <__fp_pscB>
     e90:	58 f0       	brcs	.+22     	; 0xea8 <__divsf3+0x24>
     e92:	0e 94 6e 08 	call	0x10dc	; 0x10dc <__fp_pscA>
     e96:	40 f0       	brcs	.+16     	; 0xea8 <__divsf3+0x24>
     e98:	29 f4       	brne	.+10     	; 0xea4 <__divsf3+0x20>
     e9a:	5f 3f       	cpi	r21, 0xFF	; 255
     e9c:	29 f0       	breq	.+10     	; 0xea8 <__divsf3+0x24>
     e9e:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__fp_inf>
     ea2:	51 11       	cpse	r21, r1
     ea4:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__fp_szero>
     ea8:	0c 94 6b 08 	jmp	0x10d6	; 0x10d6 <__fp_nan>

00000eac <__divsf3x>:
     eac:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_split3>
     eb0:	68 f3       	brcs	.-38     	; 0xe8c <__divsf3+0x8>

00000eb2 <__divsf3_pse>:
     eb2:	99 23       	and	r25, r25
     eb4:	b1 f3       	breq	.-20     	; 0xea2 <__divsf3+0x1e>
     eb6:	55 23       	and	r21, r21
     eb8:	91 f3       	breq	.-28     	; 0xe9e <__divsf3+0x1a>
     eba:	95 1b       	sub	r25, r21
     ebc:	55 0b       	sbc	r21, r21
     ebe:	bb 27       	eor	r27, r27
     ec0:	aa 27       	eor	r26, r26
     ec2:	62 17       	cp	r22, r18
     ec4:	73 07       	cpc	r23, r19
     ec6:	84 07       	cpc	r24, r20
     ec8:	38 f0       	brcs	.+14     	; 0xed8 <__divsf3_pse+0x26>
     eca:	9f 5f       	subi	r25, 0xFF	; 255
     ecc:	5f 4f       	sbci	r21, 0xFF	; 255
     ece:	22 0f       	add	r18, r18
     ed0:	33 1f       	adc	r19, r19
     ed2:	44 1f       	adc	r20, r20
     ed4:	aa 1f       	adc	r26, r26
     ed6:	a9 f3       	breq	.-22     	; 0xec2 <__divsf3_pse+0x10>
     ed8:	35 d0       	rcall	.+106    	; 0xf44 <__divsf3_pse+0x92>
     eda:	0e 2e       	mov	r0, r30
     edc:	3a f0       	brmi	.+14     	; 0xeec <__divsf3_pse+0x3a>
     ede:	e0 e8       	ldi	r30, 0x80	; 128
     ee0:	32 d0       	rcall	.+100    	; 0xf46 <__divsf3_pse+0x94>
     ee2:	91 50       	subi	r25, 0x01	; 1
     ee4:	50 40       	sbci	r21, 0x00	; 0
     ee6:	e6 95       	lsr	r30
     ee8:	00 1c       	adc	r0, r0
     eea:	ca f7       	brpl	.-14     	; 0xede <__divsf3_pse+0x2c>
     eec:	2b d0       	rcall	.+86     	; 0xf44 <__divsf3_pse+0x92>
     eee:	fe 2f       	mov	r31, r30
     ef0:	29 d0       	rcall	.+82     	; 0xf44 <__divsf3_pse+0x92>
     ef2:	66 0f       	add	r22, r22
     ef4:	77 1f       	adc	r23, r23
     ef6:	88 1f       	adc	r24, r24
     ef8:	bb 1f       	adc	r27, r27
     efa:	26 17       	cp	r18, r22
     efc:	37 07       	cpc	r19, r23
     efe:	48 07       	cpc	r20, r24
     f00:	ab 07       	cpc	r26, r27
     f02:	b0 e8       	ldi	r27, 0x80	; 128
     f04:	09 f0       	breq	.+2      	; 0xf08 <__divsf3_pse+0x56>
     f06:	bb 0b       	sbc	r27, r27
     f08:	80 2d       	mov	r24, r0
     f0a:	bf 01       	movw	r22, r30
     f0c:	ff 27       	eor	r31, r31
     f0e:	93 58       	subi	r25, 0x83	; 131
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	3a f0       	brmi	.+14     	; 0xf22 <__divsf3_pse+0x70>
     f14:	9e 3f       	cpi	r25, 0xFE	; 254
     f16:	51 05       	cpc	r21, r1
     f18:	78 f0       	brcs	.+30     	; 0xf38 <__divsf3_pse+0x86>
     f1a:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__fp_inf>
     f1e:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__fp_szero>
     f22:	5f 3f       	cpi	r21, 0xFF	; 255
     f24:	e4 f3       	brlt	.-8      	; 0xf1e <__divsf3_pse+0x6c>
     f26:	98 3e       	cpi	r25, 0xE8	; 232
     f28:	d4 f3       	brlt	.-12     	; 0xf1e <__divsf3_pse+0x6c>
     f2a:	86 95       	lsr	r24
     f2c:	77 95       	ror	r23
     f2e:	67 95       	ror	r22
     f30:	b7 95       	ror	r27
     f32:	f7 95       	ror	r31
     f34:	9f 5f       	subi	r25, 0xFF	; 255
     f36:	c9 f7       	brne	.-14     	; 0xf2a <__divsf3_pse+0x78>
     f38:	88 0f       	add	r24, r24
     f3a:	91 1d       	adc	r25, r1
     f3c:	96 95       	lsr	r25
     f3e:	87 95       	ror	r24
     f40:	97 f9       	bld	r25, 7
     f42:	08 95       	ret
     f44:	e1 e0       	ldi	r30, 0x01	; 1
     f46:	66 0f       	add	r22, r22
     f48:	77 1f       	adc	r23, r23
     f4a:	88 1f       	adc	r24, r24
     f4c:	bb 1f       	adc	r27, r27
     f4e:	62 17       	cp	r22, r18
     f50:	73 07       	cpc	r23, r19
     f52:	84 07       	cpc	r24, r20
     f54:	ba 07       	cpc	r27, r26
     f56:	20 f0       	brcs	.+8      	; 0xf60 <__divsf3_pse+0xae>
     f58:	62 1b       	sub	r22, r18
     f5a:	73 0b       	sbc	r23, r19
     f5c:	84 0b       	sbc	r24, r20
     f5e:	ba 0b       	sbc	r27, r26
     f60:	ee 1f       	adc	r30, r30
     f62:	88 f7       	brcc	.-30     	; 0xf46 <__divsf3_pse+0x94>
     f64:	e0 95       	com	r30
     f66:	08 95       	ret

00000f68 <__fixsfsi>:
     f68:	0e 94 bb 07 	call	0xf76	; 0xf76 <__fixunssfsi>
     f6c:	68 94       	set
     f6e:	b1 11       	cpse	r27, r1
     f70:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__fp_szero>
     f74:	08 95       	ret

00000f76 <__fixunssfsi>:
     f76:	0e 94 95 08 	call	0x112a	; 0x112a <__fp_splitA>
     f7a:	88 f0       	brcs	.+34     	; 0xf9e <__fixunssfsi+0x28>
     f7c:	9f 57       	subi	r25, 0x7F	; 127
     f7e:	98 f0       	brcs	.+38     	; 0xfa6 <__fixunssfsi+0x30>
     f80:	b9 2f       	mov	r27, r25
     f82:	99 27       	eor	r25, r25
     f84:	b7 51       	subi	r27, 0x17	; 23
     f86:	b0 f0       	brcs	.+44     	; 0xfb4 <__fixunssfsi+0x3e>
     f88:	e1 f0       	breq	.+56     	; 0xfc2 <__fixunssfsi+0x4c>
     f8a:	66 0f       	add	r22, r22
     f8c:	77 1f       	adc	r23, r23
     f8e:	88 1f       	adc	r24, r24
     f90:	99 1f       	adc	r25, r25
     f92:	1a f0       	brmi	.+6      	; 0xf9a <__fixunssfsi+0x24>
     f94:	ba 95       	dec	r27
     f96:	c9 f7       	brne	.-14     	; 0xf8a <__fixunssfsi+0x14>
     f98:	14 c0       	rjmp	.+40     	; 0xfc2 <__fixunssfsi+0x4c>
     f9a:	b1 30       	cpi	r27, 0x01	; 1
     f9c:	91 f0       	breq	.+36     	; 0xfc2 <__fixunssfsi+0x4c>
     f9e:	0e 94 af 08 	call	0x115e	; 0x115e <__fp_zero>
     fa2:	b1 e0       	ldi	r27, 0x01	; 1
     fa4:	08 95       	ret
     fa6:	0c 94 af 08 	jmp	0x115e	; 0x115e <__fp_zero>
     faa:	67 2f       	mov	r22, r23
     fac:	78 2f       	mov	r23, r24
     fae:	88 27       	eor	r24, r24
     fb0:	b8 5f       	subi	r27, 0xF8	; 248
     fb2:	39 f0       	breq	.+14     	; 0xfc2 <__fixunssfsi+0x4c>
     fb4:	b9 3f       	cpi	r27, 0xF9	; 249
     fb6:	cc f3       	brlt	.-14     	; 0xfaa <__fixunssfsi+0x34>
     fb8:	86 95       	lsr	r24
     fba:	77 95       	ror	r23
     fbc:	67 95       	ror	r22
     fbe:	b3 95       	inc	r27
     fc0:	d9 f7       	brne	.-10     	; 0xfb8 <__fixunssfsi+0x42>
     fc2:	3e f4       	brtc	.+14     	; 0xfd2 <__fixunssfsi+0x5c>
     fc4:	90 95       	com	r25
     fc6:	80 95       	com	r24
     fc8:	70 95       	com	r23
     fca:	61 95       	neg	r22
     fcc:	7f 4f       	sbci	r23, 0xFF	; 255
     fce:	8f 4f       	sbci	r24, 0xFF	; 255
     fd0:	9f 4f       	sbci	r25, 0xFF	; 255
     fd2:	08 95       	ret

00000fd4 <__floatunsisf>:
     fd4:	e8 94       	clt
     fd6:	09 c0       	rjmp	.+18     	; 0xfea <__floatsisf+0x12>

00000fd8 <__floatsisf>:
     fd8:	97 fb       	bst	r25, 7
     fda:	3e f4       	brtc	.+14     	; 0xfea <__floatsisf+0x12>
     fdc:	90 95       	com	r25
     fde:	80 95       	com	r24
     fe0:	70 95       	com	r23
     fe2:	61 95       	neg	r22
     fe4:	7f 4f       	sbci	r23, 0xFF	; 255
     fe6:	8f 4f       	sbci	r24, 0xFF	; 255
     fe8:	9f 4f       	sbci	r25, 0xFF	; 255
     fea:	99 23       	and	r25, r25
     fec:	a9 f0       	breq	.+42     	; 0x1018 <__floatsisf+0x40>
     fee:	f9 2f       	mov	r31, r25
     ff0:	96 e9       	ldi	r25, 0x96	; 150
     ff2:	bb 27       	eor	r27, r27
     ff4:	93 95       	inc	r25
     ff6:	f6 95       	lsr	r31
     ff8:	87 95       	ror	r24
     ffa:	77 95       	ror	r23
     ffc:	67 95       	ror	r22
     ffe:	b7 95       	ror	r27
    1000:	f1 11       	cpse	r31, r1
    1002:	f8 cf       	rjmp	.-16     	; 0xff4 <__floatsisf+0x1c>
    1004:	fa f4       	brpl	.+62     	; 0x1044 <__floatsisf+0x6c>
    1006:	bb 0f       	add	r27, r27
    1008:	11 f4       	brne	.+4      	; 0x100e <__floatsisf+0x36>
    100a:	60 ff       	sbrs	r22, 0
    100c:	1b c0       	rjmp	.+54     	; 0x1044 <__floatsisf+0x6c>
    100e:	6f 5f       	subi	r22, 0xFF	; 255
    1010:	7f 4f       	sbci	r23, 0xFF	; 255
    1012:	8f 4f       	sbci	r24, 0xFF	; 255
    1014:	9f 4f       	sbci	r25, 0xFF	; 255
    1016:	16 c0       	rjmp	.+44     	; 0x1044 <__floatsisf+0x6c>
    1018:	88 23       	and	r24, r24
    101a:	11 f0       	breq	.+4      	; 0x1020 <__floatsisf+0x48>
    101c:	96 e9       	ldi	r25, 0x96	; 150
    101e:	11 c0       	rjmp	.+34     	; 0x1042 <__floatsisf+0x6a>
    1020:	77 23       	and	r23, r23
    1022:	21 f0       	breq	.+8      	; 0x102c <__floatsisf+0x54>
    1024:	9e e8       	ldi	r25, 0x8E	; 142
    1026:	87 2f       	mov	r24, r23
    1028:	76 2f       	mov	r23, r22
    102a:	05 c0       	rjmp	.+10     	; 0x1036 <__floatsisf+0x5e>
    102c:	66 23       	and	r22, r22
    102e:	71 f0       	breq	.+28     	; 0x104c <__floatsisf+0x74>
    1030:	96 e8       	ldi	r25, 0x86	; 134
    1032:	86 2f       	mov	r24, r22
    1034:	70 e0       	ldi	r23, 0x00	; 0
    1036:	60 e0       	ldi	r22, 0x00	; 0
    1038:	2a f0       	brmi	.+10     	; 0x1044 <__floatsisf+0x6c>
    103a:	9a 95       	dec	r25
    103c:	66 0f       	add	r22, r22
    103e:	77 1f       	adc	r23, r23
    1040:	88 1f       	adc	r24, r24
    1042:	da f7       	brpl	.-10     	; 0x103a <__floatsisf+0x62>
    1044:	88 0f       	add	r24, r24
    1046:	96 95       	lsr	r25
    1048:	87 95       	ror	r24
    104a:	97 f9       	bld	r25, 7
    104c:	08 95       	ret

0000104e <__floatundisf>:
    104e:	e8 94       	clt

00001050 <__fp_di2sf>:
    1050:	f9 2f       	mov	r31, r25
    1052:	96 eb       	ldi	r25, 0xB6	; 182
    1054:	ff 23       	and	r31, r31
    1056:	81 f0       	breq	.+32     	; 0x1078 <__fp_di2sf+0x28>
    1058:	12 16       	cp	r1, r18
    105a:	13 06       	cpc	r1, r19
    105c:	14 06       	cpc	r1, r20
    105e:	44 0b       	sbc	r20, r20
    1060:	93 95       	inc	r25
    1062:	f6 95       	lsr	r31
    1064:	87 95       	ror	r24
    1066:	77 95       	ror	r23
    1068:	67 95       	ror	r22
    106a:	57 95       	ror	r21
    106c:	40 40       	sbci	r20, 0x00	; 0
    106e:	ff 23       	and	r31, r31
    1070:	b9 f7       	brne	.-18     	; 0x1060 <__fp_di2sf+0x10>
    1072:	1b c0       	rjmp	.+54     	; 0x10aa <__fp_di2sf+0x5a>
    1074:	99 27       	eor	r25, r25
    1076:	08 95       	ret
    1078:	88 23       	and	r24, r24
    107a:	51 f4       	brne	.+20     	; 0x1090 <__fp_di2sf+0x40>
    107c:	98 50       	subi	r25, 0x08	; 8
    107e:	d2 f7       	brpl	.-12     	; 0x1074 <__fp_di2sf+0x24>
    1080:	87 2b       	or	r24, r23
    1082:	76 2f       	mov	r23, r22
    1084:	65 2f       	mov	r22, r21
    1086:	54 2f       	mov	r21, r20
    1088:	43 2f       	mov	r20, r19
    108a:	32 2f       	mov	r19, r18
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	b1 f3       	breq	.-20     	; 0x107c <__fp_di2sf+0x2c>
    1090:	12 16       	cp	r1, r18
    1092:	13 06       	cpc	r1, r19
    1094:	14 06       	cpc	r1, r20
    1096:	44 0b       	sbc	r20, r20
    1098:	88 23       	and	r24, r24
    109a:	3a f0       	brmi	.+14     	; 0x10aa <__fp_di2sf+0x5a>
    109c:	9a 95       	dec	r25
    109e:	44 0f       	add	r20, r20
    10a0:	55 1f       	adc	r21, r21
    10a2:	66 1f       	adc	r22, r22
    10a4:	77 1f       	adc	r23, r23
    10a6:	88 1f       	adc	r24, r24
    10a8:	ca f7       	brpl	.-14     	; 0x109c <__fp_di2sf+0x4c>
    10aa:	55 23       	and	r21, r21
    10ac:	4a f4       	brpl	.+18     	; 0x10c0 <__fp_di2sf+0x70>
    10ae:	44 0f       	add	r20, r20
    10b0:	55 1f       	adc	r21, r21
    10b2:	11 f4       	brne	.+4      	; 0x10b8 <__fp_di2sf+0x68>
    10b4:	60 ff       	sbrs	r22, 0
    10b6:	04 c0       	rjmp	.+8      	; 0x10c0 <__fp_di2sf+0x70>
    10b8:	6f 5f       	subi	r22, 0xFF	; 255
    10ba:	7f 4f       	sbci	r23, 0xFF	; 255
    10bc:	8f 4f       	sbci	r24, 0xFF	; 255
    10be:	9f 4f       	sbci	r25, 0xFF	; 255
    10c0:	88 0f       	add	r24, r24
    10c2:	96 95       	lsr	r25
    10c4:	87 95       	ror	r24
    10c6:	97 f9       	bld	r25, 7
    10c8:	08 95       	ret

000010ca <__fp_inf>:
    10ca:	97 f9       	bld	r25, 7
    10cc:	9f 67       	ori	r25, 0x7F	; 127
    10ce:	80 e8       	ldi	r24, 0x80	; 128
    10d0:	70 e0       	ldi	r23, 0x00	; 0
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	08 95       	ret

000010d6 <__fp_nan>:
    10d6:	9f ef       	ldi	r25, 0xFF	; 255
    10d8:	80 ec       	ldi	r24, 0xC0	; 192
    10da:	08 95       	ret

000010dc <__fp_pscA>:
    10dc:	00 24       	eor	r0, r0
    10de:	0a 94       	dec	r0
    10e0:	16 16       	cp	r1, r22
    10e2:	17 06       	cpc	r1, r23
    10e4:	18 06       	cpc	r1, r24
    10e6:	09 06       	cpc	r0, r25
    10e8:	08 95       	ret

000010ea <__fp_pscB>:
    10ea:	00 24       	eor	r0, r0
    10ec:	0a 94       	dec	r0
    10ee:	12 16       	cp	r1, r18
    10f0:	13 06       	cpc	r1, r19
    10f2:	14 06       	cpc	r1, r20
    10f4:	05 06       	cpc	r0, r21
    10f6:	08 95       	ret

000010f8 <__fp_round>:
    10f8:	09 2e       	mov	r0, r25
    10fa:	03 94       	inc	r0
    10fc:	00 0c       	add	r0, r0
    10fe:	11 f4       	brne	.+4      	; 0x1104 <__fp_round+0xc>
    1100:	88 23       	and	r24, r24
    1102:	52 f0       	brmi	.+20     	; 0x1118 <__fp_round+0x20>
    1104:	bb 0f       	add	r27, r27
    1106:	40 f4       	brcc	.+16     	; 0x1118 <__fp_round+0x20>
    1108:	bf 2b       	or	r27, r31
    110a:	11 f4       	brne	.+4      	; 0x1110 <__fp_round+0x18>
    110c:	60 ff       	sbrs	r22, 0
    110e:	04 c0       	rjmp	.+8      	; 0x1118 <__fp_round+0x20>
    1110:	6f 5f       	subi	r22, 0xFF	; 255
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	8f 4f       	sbci	r24, 0xFF	; 255
    1116:	9f 4f       	sbci	r25, 0xFF	; 255
    1118:	08 95       	ret

0000111a <__fp_split3>:
    111a:	57 fd       	sbrc	r21, 7
    111c:	90 58       	subi	r25, 0x80	; 128
    111e:	44 0f       	add	r20, r20
    1120:	55 1f       	adc	r21, r21
    1122:	59 f0       	breq	.+22     	; 0x113a <__fp_splitA+0x10>
    1124:	5f 3f       	cpi	r21, 0xFF	; 255
    1126:	71 f0       	breq	.+28     	; 0x1144 <__fp_splitA+0x1a>
    1128:	47 95       	ror	r20

0000112a <__fp_splitA>:
    112a:	88 0f       	add	r24, r24
    112c:	97 fb       	bst	r25, 7
    112e:	99 1f       	adc	r25, r25
    1130:	61 f0       	breq	.+24     	; 0x114a <__fp_splitA+0x20>
    1132:	9f 3f       	cpi	r25, 0xFF	; 255
    1134:	79 f0       	breq	.+30     	; 0x1154 <__fp_splitA+0x2a>
    1136:	87 95       	ror	r24
    1138:	08 95       	ret
    113a:	12 16       	cp	r1, r18
    113c:	13 06       	cpc	r1, r19
    113e:	14 06       	cpc	r1, r20
    1140:	55 1f       	adc	r21, r21
    1142:	f2 cf       	rjmp	.-28     	; 0x1128 <__fp_split3+0xe>
    1144:	46 95       	lsr	r20
    1146:	f1 df       	rcall	.-30     	; 0x112a <__fp_splitA>
    1148:	08 c0       	rjmp	.+16     	; 0x115a <__fp_splitA+0x30>
    114a:	16 16       	cp	r1, r22
    114c:	17 06       	cpc	r1, r23
    114e:	18 06       	cpc	r1, r24
    1150:	99 1f       	adc	r25, r25
    1152:	f1 cf       	rjmp	.-30     	; 0x1136 <__fp_splitA+0xc>
    1154:	86 95       	lsr	r24
    1156:	71 05       	cpc	r23, r1
    1158:	61 05       	cpc	r22, r1
    115a:	08 94       	sec
    115c:	08 95       	ret

0000115e <__fp_zero>:
    115e:	e8 94       	clt

00001160 <__fp_szero>:
    1160:	bb 27       	eor	r27, r27
    1162:	66 27       	eor	r22, r22
    1164:	77 27       	eor	r23, r23
    1166:	cb 01       	movw	r24, r22
    1168:	97 f9       	bld	r25, 7
    116a:	08 95       	ret

0000116c <__mulsf3>:
    116c:	0e 94 c9 08 	call	0x1192	; 0x1192 <__mulsf3x>
    1170:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_round>
    1174:	0e 94 6e 08 	call	0x10dc	; 0x10dc <__fp_pscA>
    1178:	38 f0       	brcs	.+14     	; 0x1188 <__mulsf3+0x1c>
    117a:	0e 94 75 08 	call	0x10ea	; 0x10ea <__fp_pscB>
    117e:	20 f0       	brcs	.+8      	; 0x1188 <__mulsf3+0x1c>
    1180:	95 23       	and	r25, r21
    1182:	11 f0       	breq	.+4      	; 0x1188 <__mulsf3+0x1c>
    1184:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__fp_inf>
    1188:	0c 94 6b 08 	jmp	0x10d6	; 0x10d6 <__fp_nan>
    118c:	11 24       	eor	r1, r1
    118e:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__fp_szero>

00001192 <__mulsf3x>:
    1192:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_split3>
    1196:	70 f3       	brcs	.-36     	; 0x1174 <__mulsf3+0x8>

00001198 <__mulsf3_pse>:
    1198:	95 9f       	mul	r25, r21
    119a:	c1 f3       	breq	.-16     	; 0x118c <__mulsf3+0x20>
    119c:	95 0f       	add	r25, r21
    119e:	50 e0       	ldi	r21, 0x00	; 0
    11a0:	55 1f       	adc	r21, r21
    11a2:	62 9f       	mul	r22, r18
    11a4:	f0 01       	movw	r30, r0
    11a6:	72 9f       	mul	r23, r18
    11a8:	bb 27       	eor	r27, r27
    11aa:	f0 0d       	add	r31, r0
    11ac:	b1 1d       	adc	r27, r1
    11ae:	63 9f       	mul	r22, r19
    11b0:	aa 27       	eor	r26, r26
    11b2:	f0 0d       	add	r31, r0
    11b4:	b1 1d       	adc	r27, r1
    11b6:	aa 1f       	adc	r26, r26
    11b8:	64 9f       	mul	r22, r20
    11ba:	66 27       	eor	r22, r22
    11bc:	b0 0d       	add	r27, r0
    11be:	a1 1d       	adc	r26, r1
    11c0:	66 1f       	adc	r22, r22
    11c2:	82 9f       	mul	r24, r18
    11c4:	22 27       	eor	r18, r18
    11c6:	b0 0d       	add	r27, r0
    11c8:	a1 1d       	adc	r26, r1
    11ca:	62 1f       	adc	r22, r18
    11cc:	73 9f       	mul	r23, r19
    11ce:	b0 0d       	add	r27, r0
    11d0:	a1 1d       	adc	r26, r1
    11d2:	62 1f       	adc	r22, r18
    11d4:	83 9f       	mul	r24, r19
    11d6:	a0 0d       	add	r26, r0
    11d8:	61 1d       	adc	r22, r1
    11da:	22 1f       	adc	r18, r18
    11dc:	74 9f       	mul	r23, r20
    11de:	33 27       	eor	r19, r19
    11e0:	a0 0d       	add	r26, r0
    11e2:	61 1d       	adc	r22, r1
    11e4:	23 1f       	adc	r18, r19
    11e6:	84 9f       	mul	r24, r20
    11e8:	60 0d       	add	r22, r0
    11ea:	21 1d       	adc	r18, r1
    11ec:	82 2f       	mov	r24, r18
    11ee:	76 2f       	mov	r23, r22
    11f0:	6a 2f       	mov	r22, r26
    11f2:	11 24       	eor	r1, r1
    11f4:	9f 57       	subi	r25, 0x7F	; 127
    11f6:	50 40       	sbci	r21, 0x00	; 0
    11f8:	9a f0       	brmi	.+38     	; 0x1220 <__mulsf3_pse+0x88>
    11fa:	f1 f0       	breq	.+60     	; 0x1238 <__mulsf3_pse+0xa0>
    11fc:	88 23       	and	r24, r24
    11fe:	4a f0       	brmi	.+18     	; 0x1212 <__mulsf3_pse+0x7a>
    1200:	ee 0f       	add	r30, r30
    1202:	ff 1f       	adc	r31, r31
    1204:	bb 1f       	adc	r27, r27
    1206:	66 1f       	adc	r22, r22
    1208:	77 1f       	adc	r23, r23
    120a:	88 1f       	adc	r24, r24
    120c:	91 50       	subi	r25, 0x01	; 1
    120e:	50 40       	sbci	r21, 0x00	; 0
    1210:	a9 f7       	brne	.-22     	; 0x11fc <__mulsf3_pse+0x64>
    1212:	9e 3f       	cpi	r25, 0xFE	; 254
    1214:	51 05       	cpc	r21, r1
    1216:	80 f0       	brcs	.+32     	; 0x1238 <__mulsf3_pse+0xa0>
    1218:	0c 94 65 08 	jmp	0x10ca	; 0x10ca <__fp_inf>
    121c:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__fp_szero>
    1220:	5f 3f       	cpi	r21, 0xFF	; 255
    1222:	e4 f3       	brlt	.-8      	; 0x121c <__mulsf3_pse+0x84>
    1224:	98 3e       	cpi	r25, 0xE8	; 232
    1226:	d4 f3       	brlt	.-12     	; 0x121c <__mulsf3_pse+0x84>
    1228:	86 95       	lsr	r24
    122a:	77 95       	ror	r23
    122c:	67 95       	ror	r22
    122e:	b7 95       	ror	r27
    1230:	f7 95       	ror	r31
    1232:	e7 95       	ror	r30
    1234:	9f 5f       	subi	r25, 0xFF	; 255
    1236:	c1 f7       	brne	.-16     	; 0x1228 <__mulsf3_pse+0x90>
    1238:	fe 2b       	or	r31, r30
    123a:	88 0f       	add	r24, r24
    123c:	91 1d       	adc	r25, r1
    123e:	96 95       	lsr	r25
    1240:	87 95       	ror	r24
    1242:	97 f9       	bld	r25, 7
    1244:	08 95       	ret

00001246 <__divmodhi4>:
    1246:	97 fb       	bst	r25, 7
    1248:	07 2e       	mov	r0, r23
    124a:	16 f4       	brtc	.+4      	; 0x1250 <__divmodhi4+0xa>
    124c:	00 94       	com	r0
    124e:	07 d0       	rcall	.+14     	; 0x125e <__divmodhi4_neg1>
    1250:	77 fd       	sbrc	r23, 7
    1252:	09 d0       	rcall	.+18     	; 0x1266 <__divmodhi4_neg2>
    1254:	0e 94 00 0a 	call	0x1400	; 0x1400 <__udivmodhi4>
    1258:	07 fc       	sbrc	r0, 7
    125a:	05 d0       	rcall	.+10     	; 0x1266 <__divmodhi4_neg2>
    125c:	3e f4       	brtc	.+14     	; 0x126c <__divmodhi4_exit>

0000125e <__divmodhi4_neg1>:
    125e:	90 95       	com	r25
    1260:	81 95       	neg	r24
    1262:	9f 4f       	sbci	r25, 0xFF	; 255
    1264:	08 95       	ret

00001266 <__divmodhi4_neg2>:
    1266:	70 95       	com	r23
    1268:	61 95       	neg	r22
    126a:	7f 4f       	sbci	r23, 0xFF	; 255

0000126c <__divmodhi4_exit>:
    126c:	08 95       	ret

0000126e <__divmodsi4>:
    126e:	05 2e       	mov	r0, r21
    1270:	97 fb       	bst	r25, 7
    1272:	1e f4       	brtc	.+6      	; 0x127a <__divmodsi4+0xc>
    1274:	00 94       	com	r0
    1276:	0e 94 4e 09 	call	0x129c	; 0x129c <__negsi2>
    127a:	57 fd       	sbrc	r21, 7
    127c:	07 d0       	rcall	.+14     	; 0x128c <__divmodsi4_neg2>
    127e:	0e 94 14 0a 	call	0x1428	; 0x1428 <__udivmodsi4>
    1282:	07 fc       	sbrc	r0, 7
    1284:	03 d0       	rcall	.+6      	; 0x128c <__divmodsi4_neg2>
    1286:	4e f4       	brtc	.+18     	; 0x129a <__divmodsi4_exit>
    1288:	0c 94 4e 09 	jmp	0x129c	; 0x129c <__negsi2>

0000128c <__divmodsi4_neg2>:
    128c:	50 95       	com	r21
    128e:	40 95       	com	r20
    1290:	30 95       	com	r19
    1292:	21 95       	neg	r18
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	4f 4f       	sbci	r20, 0xFF	; 255
    1298:	5f 4f       	sbci	r21, 0xFF	; 255

0000129a <__divmodsi4_exit>:
    129a:	08 95       	ret

0000129c <__negsi2>:
    129c:	90 95       	com	r25
    129e:	80 95       	com	r24
    12a0:	70 95       	com	r23
    12a2:	61 95       	neg	r22
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	8f 4f       	sbci	r24, 0xFF	; 255
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	08 95       	ret

000012ac <__mulshisi3>:
    12ac:	b7 ff       	sbrs	r27, 7
    12ae:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__muluhisi3>

000012b2 <__mulohisi3>:
    12b2:	0e 94 36 0a 	call	0x146c	; 0x146c <__muluhisi3>
    12b6:	82 1b       	sub	r24, r18
    12b8:	93 0b       	sbc	r25, r19
    12ba:	08 95       	ret

000012bc <__umoddi3>:
    12bc:	68 94       	set
    12be:	01 c0       	rjmp	.+2      	; 0x12c2 <__udivdi3_umoddi3>

000012c0 <__udivdi3>:
    12c0:	e8 94       	clt

000012c2 <__udivdi3_umoddi3>:
    12c2:	8f 92       	push	r8
    12c4:	9f 92       	push	r9
    12c6:	cf 93       	push	r28
    12c8:	df 93       	push	r29
    12ca:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__udivmod64>
    12ce:	df 91       	pop	r29
    12d0:	cf 91       	pop	r28
    12d2:	9f 90       	pop	r9
    12d4:	8f 90       	pop	r8
    12d6:	08 95       	ret

000012d8 <__udivmod64>:
    12d8:	88 24       	eor	r8, r8
    12da:	99 24       	eor	r9, r9
    12dc:	f4 01       	movw	r30, r8
    12de:	e4 01       	movw	r28, r8
    12e0:	b0 e4       	ldi	r27, 0x40	; 64
    12e2:	9f 93       	push	r25
    12e4:	aa 27       	eor	r26, r26
    12e6:	9a 15       	cp	r25, r10
    12e8:	8b 04       	cpc	r8, r11
    12ea:	9c 04       	cpc	r9, r12
    12ec:	ed 05       	cpc	r30, r13
    12ee:	fe 05       	cpc	r31, r14
    12f0:	cf 05       	cpc	r28, r15
    12f2:	d0 07       	cpc	r29, r16
    12f4:	a1 07       	cpc	r26, r17
    12f6:	98 f4       	brcc	.+38     	; 0x131e <__udivmod64+0x46>
    12f8:	ad 2f       	mov	r26, r29
    12fa:	dc 2f       	mov	r29, r28
    12fc:	cf 2f       	mov	r28, r31
    12fe:	fe 2f       	mov	r31, r30
    1300:	e9 2d       	mov	r30, r9
    1302:	98 2c       	mov	r9, r8
    1304:	89 2e       	mov	r8, r25
    1306:	98 2f       	mov	r25, r24
    1308:	87 2f       	mov	r24, r23
    130a:	76 2f       	mov	r23, r22
    130c:	65 2f       	mov	r22, r21
    130e:	54 2f       	mov	r21, r20
    1310:	43 2f       	mov	r20, r19
    1312:	32 2f       	mov	r19, r18
    1314:	22 27       	eor	r18, r18
    1316:	b8 50       	subi	r27, 0x08	; 8
    1318:	31 f7       	brne	.-52     	; 0x12e6 <__udivmod64+0xe>
    131a:	bf 91       	pop	r27
    131c:	27 c0       	rjmp	.+78     	; 0x136c <__udivmod64+0x94>
    131e:	1b 2e       	mov	r1, r27
    1320:	bf 91       	pop	r27
    1322:	bb 27       	eor	r27, r27
    1324:	22 0f       	add	r18, r18
    1326:	33 1f       	adc	r19, r19
    1328:	44 1f       	adc	r20, r20
    132a:	55 1f       	adc	r21, r21
    132c:	66 1f       	adc	r22, r22
    132e:	77 1f       	adc	r23, r23
    1330:	88 1f       	adc	r24, r24
    1332:	99 1f       	adc	r25, r25
    1334:	88 1c       	adc	r8, r8
    1336:	99 1c       	adc	r9, r9
    1338:	ee 1f       	adc	r30, r30
    133a:	ff 1f       	adc	r31, r31
    133c:	cc 1f       	adc	r28, r28
    133e:	dd 1f       	adc	r29, r29
    1340:	aa 1f       	adc	r26, r26
    1342:	bb 1f       	adc	r27, r27
    1344:	8a 14       	cp	r8, r10
    1346:	9b 04       	cpc	r9, r11
    1348:	ec 05       	cpc	r30, r12
    134a:	fd 05       	cpc	r31, r13
    134c:	ce 05       	cpc	r28, r14
    134e:	df 05       	cpc	r29, r15
    1350:	a0 07       	cpc	r26, r16
    1352:	b1 07       	cpc	r27, r17
    1354:	48 f0       	brcs	.+18     	; 0x1368 <__udivmod64+0x90>
    1356:	8a 18       	sub	r8, r10
    1358:	9b 08       	sbc	r9, r11
    135a:	ec 09       	sbc	r30, r12
    135c:	fd 09       	sbc	r31, r13
    135e:	ce 09       	sbc	r28, r14
    1360:	df 09       	sbc	r29, r15
    1362:	a0 0b       	sbc	r26, r16
    1364:	b1 0b       	sbc	r27, r17
    1366:	21 60       	ori	r18, 0x01	; 1
    1368:	1a 94       	dec	r1
    136a:	e1 f6       	brne	.-72     	; 0x1324 <__udivmod64+0x4c>
    136c:	2e f4       	brtc	.+10     	; 0x1378 <__udivmod64+0xa0>
    136e:	94 01       	movw	r18, r8
    1370:	af 01       	movw	r20, r30
    1372:	be 01       	movw	r22, r28
    1374:	cd 01       	movw	r24, r26
    1376:	00 0c       	add	r0, r0
    1378:	08 95       	ret

0000137a <__ashldi3>:
    137a:	0f 93       	push	r16
    137c:	08 30       	cpi	r16, 0x08	; 8
    137e:	90 f0       	brcs	.+36     	; 0x13a4 <__ashldi3+0x2a>
    1380:	98 2f       	mov	r25, r24
    1382:	87 2f       	mov	r24, r23
    1384:	76 2f       	mov	r23, r22
    1386:	65 2f       	mov	r22, r21
    1388:	54 2f       	mov	r21, r20
    138a:	43 2f       	mov	r20, r19
    138c:	32 2f       	mov	r19, r18
    138e:	22 27       	eor	r18, r18
    1390:	08 50       	subi	r16, 0x08	; 8
    1392:	f4 cf       	rjmp	.-24     	; 0x137c <__ashldi3+0x2>
    1394:	22 0f       	add	r18, r18
    1396:	33 1f       	adc	r19, r19
    1398:	44 1f       	adc	r20, r20
    139a:	55 1f       	adc	r21, r21
    139c:	66 1f       	adc	r22, r22
    139e:	77 1f       	adc	r23, r23
    13a0:	88 1f       	adc	r24, r24
    13a2:	99 1f       	adc	r25, r25
    13a4:	0a 95       	dec	r16
    13a6:	b2 f7       	brpl	.-20     	; 0x1394 <__ashldi3+0x1a>
    13a8:	0f 91       	pop	r16
    13aa:	08 95       	ret

000013ac <__adddi3>:
    13ac:	2a 0d       	add	r18, r10
    13ae:	3b 1d       	adc	r19, r11
    13b0:	4c 1d       	adc	r20, r12
    13b2:	5d 1d       	adc	r21, r13
    13b4:	6e 1d       	adc	r22, r14
    13b6:	7f 1d       	adc	r23, r15
    13b8:	80 1f       	adc	r24, r16
    13ba:	91 1f       	adc	r25, r17
    13bc:	08 95       	ret

000013be <__adddi3_s8>:
    13be:	00 24       	eor	r0, r0
    13c0:	a7 fd       	sbrc	r26, 7
    13c2:	00 94       	com	r0
    13c4:	2a 0f       	add	r18, r26
    13c6:	30 1d       	adc	r19, r0
    13c8:	40 1d       	adc	r20, r0
    13ca:	50 1d       	adc	r21, r0
    13cc:	60 1d       	adc	r22, r0
    13ce:	70 1d       	adc	r23, r0
    13d0:	80 1d       	adc	r24, r0
    13d2:	90 1d       	adc	r25, r0
    13d4:	08 95       	ret

000013d6 <__subdi3>:
    13d6:	2a 19       	sub	r18, r10
    13d8:	3b 09       	sbc	r19, r11
    13da:	4c 09       	sbc	r20, r12
    13dc:	5d 09       	sbc	r21, r13
    13de:	6e 09       	sbc	r22, r14
    13e0:	7f 09       	sbc	r23, r15
    13e2:	80 0b       	sbc	r24, r16
    13e4:	91 0b       	sbc	r25, r17
    13e6:	08 95       	ret

000013e8 <__cmpdi2_s8>:
    13e8:	00 24       	eor	r0, r0
    13ea:	a7 fd       	sbrc	r26, 7
    13ec:	00 94       	com	r0
    13ee:	2a 17       	cp	r18, r26
    13f0:	30 05       	cpc	r19, r0
    13f2:	40 05       	cpc	r20, r0
    13f4:	50 05       	cpc	r21, r0
    13f6:	60 05       	cpc	r22, r0
    13f8:	70 05       	cpc	r23, r0
    13fa:	80 05       	cpc	r24, r0
    13fc:	90 05       	cpc	r25, r0
    13fe:	08 95       	ret

00001400 <__udivmodhi4>:
    1400:	aa 1b       	sub	r26, r26
    1402:	bb 1b       	sub	r27, r27
    1404:	51 e1       	ldi	r21, 0x11	; 17
    1406:	07 c0       	rjmp	.+14     	; 0x1416 <__udivmodhi4_ep>

00001408 <__udivmodhi4_loop>:
    1408:	aa 1f       	adc	r26, r26
    140a:	bb 1f       	adc	r27, r27
    140c:	a6 17       	cp	r26, r22
    140e:	b7 07       	cpc	r27, r23
    1410:	10 f0       	brcs	.+4      	; 0x1416 <__udivmodhi4_ep>
    1412:	a6 1b       	sub	r26, r22
    1414:	b7 0b       	sbc	r27, r23

00001416 <__udivmodhi4_ep>:
    1416:	88 1f       	adc	r24, r24
    1418:	99 1f       	adc	r25, r25
    141a:	5a 95       	dec	r21
    141c:	a9 f7       	brne	.-22     	; 0x1408 <__udivmodhi4_loop>
    141e:	80 95       	com	r24
    1420:	90 95       	com	r25
    1422:	bc 01       	movw	r22, r24
    1424:	cd 01       	movw	r24, r26
    1426:	08 95       	ret

00001428 <__udivmodsi4>:
    1428:	a1 e2       	ldi	r26, 0x21	; 33
    142a:	1a 2e       	mov	r1, r26
    142c:	aa 1b       	sub	r26, r26
    142e:	bb 1b       	sub	r27, r27
    1430:	fd 01       	movw	r30, r26
    1432:	0d c0       	rjmp	.+26     	; 0x144e <__udivmodsi4_ep>

00001434 <__udivmodsi4_loop>:
    1434:	aa 1f       	adc	r26, r26
    1436:	bb 1f       	adc	r27, r27
    1438:	ee 1f       	adc	r30, r30
    143a:	ff 1f       	adc	r31, r31
    143c:	a2 17       	cp	r26, r18
    143e:	b3 07       	cpc	r27, r19
    1440:	e4 07       	cpc	r30, r20
    1442:	f5 07       	cpc	r31, r21
    1444:	20 f0       	brcs	.+8      	; 0x144e <__udivmodsi4_ep>
    1446:	a2 1b       	sub	r26, r18
    1448:	b3 0b       	sbc	r27, r19
    144a:	e4 0b       	sbc	r30, r20
    144c:	f5 0b       	sbc	r31, r21

0000144e <__udivmodsi4_ep>:
    144e:	66 1f       	adc	r22, r22
    1450:	77 1f       	adc	r23, r23
    1452:	88 1f       	adc	r24, r24
    1454:	99 1f       	adc	r25, r25
    1456:	1a 94       	dec	r1
    1458:	69 f7       	brne	.-38     	; 0x1434 <__udivmodsi4_loop>
    145a:	60 95       	com	r22
    145c:	70 95       	com	r23
    145e:	80 95       	com	r24
    1460:	90 95       	com	r25
    1462:	9b 01       	movw	r18, r22
    1464:	ac 01       	movw	r20, r24
    1466:	bd 01       	movw	r22, r26
    1468:	cf 01       	movw	r24, r30
    146a:	08 95       	ret

0000146c <__muluhisi3>:
    146c:	0e 94 41 0a 	call	0x1482	; 0x1482 <__umulhisi3>
    1470:	a5 9f       	mul	r26, r21
    1472:	90 0d       	add	r25, r0
    1474:	b4 9f       	mul	r27, r20
    1476:	90 0d       	add	r25, r0
    1478:	a4 9f       	mul	r26, r20
    147a:	80 0d       	add	r24, r0
    147c:	91 1d       	adc	r25, r1
    147e:	11 24       	eor	r1, r1
    1480:	08 95       	ret

00001482 <__umulhisi3>:
    1482:	a2 9f       	mul	r26, r18
    1484:	b0 01       	movw	r22, r0
    1486:	b3 9f       	mul	r27, r19
    1488:	c0 01       	movw	r24, r0
    148a:	a3 9f       	mul	r26, r19
    148c:	70 0d       	add	r23, r0
    148e:	81 1d       	adc	r24, r1
    1490:	11 24       	eor	r1, r1
    1492:	91 1d       	adc	r25, r1
    1494:	b2 9f       	mul	r27, r18
    1496:	70 0d       	add	r23, r0
    1498:	81 1d       	adc	r24, r1
    149a:	11 24       	eor	r1, r1
    149c:	91 1d       	adc	r25, r1
    149e:	08 95       	ret

000014a0 <malloc>:
    14a0:	0f 93       	push	r16
    14a2:	1f 93       	push	r17
    14a4:	cf 93       	push	r28
    14a6:	df 93       	push	r29
    14a8:	82 30       	cpi	r24, 0x02	; 2
    14aa:	91 05       	cpc	r25, r1
    14ac:	10 f4       	brcc	.+4      	; 0x14b2 <malloc+0x12>
    14ae:	82 e0       	ldi	r24, 0x02	; 2
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <__flp>
    14b6:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <__flp+0x1>
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	a0 e0       	ldi	r26, 0x00	; 0
    14c0:	b0 e0       	ldi	r27, 0x00	; 0
    14c2:	30 97       	sbiw	r30, 0x00	; 0
    14c4:	19 f1       	breq	.+70     	; 0x150c <malloc+0x6c>
    14c6:	40 81       	ld	r20, Z
    14c8:	51 81       	ldd	r21, Z+1	; 0x01
    14ca:	02 81       	ldd	r16, Z+2	; 0x02
    14cc:	13 81       	ldd	r17, Z+3	; 0x03
    14ce:	48 17       	cp	r20, r24
    14d0:	59 07       	cpc	r21, r25
    14d2:	c8 f0       	brcs	.+50     	; 0x1506 <malloc+0x66>
    14d4:	84 17       	cp	r24, r20
    14d6:	95 07       	cpc	r25, r21
    14d8:	69 f4       	brne	.+26     	; 0x14f4 <malloc+0x54>
    14da:	10 97       	sbiw	r26, 0x00	; 0
    14dc:	31 f0       	breq	.+12     	; 0x14ea <malloc+0x4a>
    14de:	12 96       	adiw	r26, 0x02	; 2
    14e0:	0c 93       	st	X, r16
    14e2:	12 97       	sbiw	r26, 0x02	; 2
    14e4:	13 96       	adiw	r26, 0x03	; 3
    14e6:	1c 93       	st	X, r17
    14e8:	27 c0       	rjmp	.+78     	; 0x1538 <malloc+0x98>
    14ea:	00 93 86 01 	sts	0x0186, r16	; 0x800186 <__flp>
    14ee:	10 93 87 01 	sts	0x0187, r17	; 0x800187 <__flp+0x1>
    14f2:	22 c0       	rjmp	.+68     	; 0x1538 <malloc+0x98>
    14f4:	21 15       	cp	r18, r1
    14f6:	31 05       	cpc	r19, r1
    14f8:	19 f0       	breq	.+6      	; 0x1500 <malloc+0x60>
    14fa:	42 17       	cp	r20, r18
    14fc:	53 07       	cpc	r21, r19
    14fe:	18 f4       	brcc	.+6      	; 0x1506 <malloc+0x66>
    1500:	9a 01       	movw	r18, r20
    1502:	bd 01       	movw	r22, r26
    1504:	ef 01       	movw	r28, r30
    1506:	df 01       	movw	r26, r30
    1508:	f8 01       	movw	r30, r16
    150a:	db cf       	rjmp	.-74     	; 0x14c2 <malloc+0x22>
    150c:	21 15       	cp	r18, r1
    150e:	31 05       	cpc	r19, r1
    1510:	f9 f0       	breq	.+62     	; 0x1550 <malloc+0xb0>
    1512:	28 1b       	sub	r18, r24
    1514:	39 0b       	sbc	r19, r25
    1516:	24 30       	cpi	r18, 0x04	; 4
    1518:	31 05       	cpc	r19, r1
    151a:	80 f4       	brcc	.+32     	; 0x153c <malloc+0x9c>
    151c:	8a 81       	ldd	r24, Y+2	; 0x02
    151e:	9b 81       	ldd	r25, Y+3	; 0x03
    1520:	61 15       	cp	r22, r1
    1522:	71 05       	cpc	r23, r1
    1524:	21 f0       	breq	.+8      	; 0x152e <malloc+0x8e>
    1526:	fb 01       	movw	r30, r22
    1528:	93 83       	std	Z+3, r25	; 0x03
    152a:	82 83       	std	Z+2, r24	; 0x02
    152c:	04 c0       	rjmp	.+8      	; 0x1536 <malloc+0x96>
    152e:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__flp+0x1>
    1532:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__flp>
    1536:	fe 01       	movw	r30, r28
    1538:	32 96       	adiw	r30, 0x02	; 2
    153a:	44 c0       	rjmp	.+136    	; 0x15c4 <malloc+0x124>
    153c:	fe 01       	movw	r30, r28
    153e:	e2 0f       	add	r30, r18
    1540:	f3 1f       	adc	r31, r19
    1542:	81 93       	st	Z+, r24
    1544:	91 93       	st	Z+, r25
    1546:	22 50       	subi	r18, 0x02	; 2
    1548:	31 09       	sbc	r19, r1
    154a:	39 83       	std	Y+1, r19	; 0x01
    154c:	28 83       	st	Y, r18
    154e:	3a c0       	rjmp	.+116    	; 0x15c4 <malloc+0x124>
    1550:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <__brkval>
    1554:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <__brkval+0x1>
    1558:	23 2b       	or	r18, r19
    155a:	41 f4       	brne	.+16     	; 0x156c <malloc+0xcc>
    155c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1560:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1564:	30 93 85 01 	sts	0x0185, r19	; 0x800185 <__brkval+0x1>
    1568:	20 93 84 01 	sts	0x0184, r18	; 0x800184 <__brkval>
    156c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1570:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1574:	21 15       	cp	r18, r1
    1576:	31 05       	cpc	r19, r1
    1578:	41 f4       	brne	.+16     	; 0x158a <malloc+0xea>
    157a:	2d b7       	in	r18, 0x3d	; 61
    157c:	3e b7       	in	r19, 0x3e	; 62
    157e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    1582:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1586:	24 1b       	sub	r18, r20
    1588:	35 0b       	sbc	r19, r21
    158a:	e0 91 84 01 	lds	r30, 0x0184	; 0x800184 <__brkval>
    158e:	f0 91 85 01 	lds	r31, 0x0185	; 0x800185 <__brkval+0x1>
    1592:	e2 17       	cp	r30, r18
    1594:	f3 07       	cpc	r31, r19
    1596:	a0 f4       	brcc	.+40     	; 0x15c0 <malloc+0x120>
    1598:	2e 1b       	sub	r18, r30
    159a:	3f 0b       	sbc	r19, r31
    159c:	28 17       	cp	r18, r24
    159e:	39 07       	cpc	r19, r25
    15a0:	78 f0       	brcs	.+30     	; 0x15c0 <malloc+0x120>
    15a2:	ac 01       	movw	r20, r24
    15a4:	4e 5f       	subi	r20, 0xFE	; 254
    15a6:	5f 4f       	sbci	r21, 0xFF	; 255
    15a8:	24 17       	cp	r18, r20
    15aa:	35 07       	cpc	r19, r21
    15ac:	48 f0       	brcs	.+18     	; 0x15c0 <malloc+0x120>
    15ae:	4e 0f       	add	r20, r30
    15b0:	5f 1f       	adc	r21, r31
    15b2:	50 93 85 01 	sts	0x0185, r21	; 0x800185 <__brkval+0x1>
    15b6:	40 93 84 01 	sts	0x0184, r20	; 0x800184 <__brkval>
    15ba:	81 93       	st	Z+, r24
    15bc:	91 93       	st	Z+, r25
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <malloc+0x124>
    15c0:	e0 e0       	ldi	r30, 0x00	; 0
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	cf 01       	movw	r24, r30
    15c6:	df 91       	pop	r29
    15c8:	cf 91       	pop	r28
    15ca:	1f 91       	pop	r17
    15cc:	0f 91       	pop	r16
    15ce:	08 95       	ret

000015d0 <free>:
    15d0:	cf 93       	push	r28
    15d2:	df 93       	push	r29
    15d4:	00 97       	sbiw	r24, 0x00	; 0
    15d6:	09 f4       	brne	.+2      	; 0x15da <free+0xa>
    15d8:	81 c0       	rjmp	.+258    	; 0x16dc <free+0x10c>
    15da:	fc 01       	movw	r30, r24
    15dc:	32 97       	sbiw	r30, 0x02	; 2
    15de:	13 82       	std	Z+3, r1	; 0x03
    15e0:	12 82       	std	Z+2, r1	; 0x02
    15e2:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <__flp>
    15e6:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <__flp+0x1>
    15ea:	10 97       	sbiw	r26, 0x00	; 0
    15ec:	81 f4       	brne	.+32     	; 0x160e <free+0x3e>
    15ee:	20 81       	ld	r18, Z
    15f0:	31 81       	ldd	r19, Z+1	; 0x01
    15f2:	82 0f       	add	r24, r18
    15f4:	93 1f       	adc	r25, r19
    15f6:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <__brkval>
    15fa:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <__brkval+0x1>
    15fe:	28 17       	cp	r18, r24
    1600:	39 07       	cpc	r19, r25
    1602:	51 f5       	brne	.+84     	; 0x1658 <free+0x88>
    1604:	f0 93 85 01 	sts	0x0185, r31	; 0x800185 <__brkval+0x1>
    1608:	e0 93 84 01 	sts	0x0184, r30	; 0x800184 <__brkval>
    160c:	67 c0       	rjmp	.+206    	; 0x16dc <free+0x10c>
    160e:	ed 01       	movw	r28, r26
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	ce 17       	cp	r28, r30
    1616:	df 07       	cpc	r29, r31
    1618:	40 f4       	brcc	.+16     	; 0x162a <free+0x5a>
    161a:	4a 81       	ldd	r20, Y+2	; 0x02
    161c:	5b 81       	ldd	r21, Y+3	; 0x03
    161e:	9e 01       	movw	r18, r28
    1620:	41 15       	cp	r20, r1
    1622:	51 05       	cpc	r21, r1
    1624:	f1 f0       	breq	.+60     	; 0x1662 <free+0x92>
    1626:	ea 01       	movw	r28, r20
    1628:	f5 cf       	rjmp	.-22     	; 0x1614 <free+0x44>
    162a:	d3 83       	std	Z+3, r29	; 0x03
    162c:	c2 83       	std	Z+2, r28	; 0x02
    162e:	40 81       	ld	r20, Z
    1630:	51 81       	ldd	r21, Z+1	; 0x01
    1632:	84 0f       	add	r24, r20
    1634:	95 1f       	adc	r25, r21
    1636:	c8 17       	cp	r28, r24
    1638:	d9 07       	cpc	r29, r25
    163a:	59 f4       	brne	.+22     	; 0x1652 <free+0x82>
    163c:	88 81       	ld	r24, Y
    163e:	99 81       	ldd	r25, Y+1	; 0x01
    1640:	84 0f       	add	r24, r20
    1642:	95 1f       	adc	r25, r21
    1644:	02 96       	adiw	r24, 0x02	; 2
    1646:	91 83       	std	Z+1, r25	; 0x01
    1648:	80 83       	st	Z, r24
    164a:	8a 81       	ldd	r24, Y+2	; 0x02
    164c:	9b 81       	ldd	r25, Y+3	; 0x03
    164e:	93 83       	std	Z+3, r25	; 0x03
    1650:	82 83       	std	Z+2, r24	; 0x02
    1652:	21 15       	cp	r18, r1
    1654:	31 05       	cpc	r19, r1
    1656:	29 f4       	brne	.+10     	; 0x1662 <free+0x92>
    1658:	f0 93 87 01 	sts	0x0187, r31	; 0x800187 <__flp+0x1>
    165c:	e0 93 86 01 	sts	0x0186, r30	; 0x800186 <__flp>
    1660:	3d c0       	rjmp	.+122    	; 0x16dc <free+0x10c>
    1662:	e9 01       	movw	r28, r18
    1664:	fb 83       	std	Y+3, r31	; 0x03
    1666:	ea 83       	std	Y+2, r30	; 0x02
    1668:	49 91       	ld	r20, Y+
    166a:	59 91       	ld	r21, Y+
    166c:	c4 0f       	add	r28, r20
    166e:	d5 1f       	adc	r29, r21
    1670:	ec 17       	cp	r30, r28
    1672:	fd 07       	cpc	r31, r29
    1674:	61 f4       	brne	.+24     	; 0x168e <free+0xbe>
    1676:	80 81       	ld	r24, Z
    1678:	91 81       	ldd	r25, Z+1	; 0x01
    167a:	84 0f       	add	r24, r20
    167c:	95 1f       	adc	r25, r21
    167e:	02 96       	adiw	r24, 0x02	; 2
    1680:	e9 01       	movw	r28, r18
    1682:	99 83       	std	Y+1, r25	; 0x01
    1684:	88 83       	st	Y, r24
    1686:	82 81       	ldd	r24, Z+2	; 0x02
    1688:	93 81       	ldd	r25, Z+3	; 0x03
    168a:	9b 83       	std	Y+3, r25	; 0x03
    168c:	8a 83       	std	Y+2, r24	; 0x02
    168e:	e0 e0       	ldi	r30, 0x00	; 0
    1690:	f0 e0       	ldi	r31, 0x00	; 0
    1692:	12 96       	adiw	r26, 0x02	; 2
    1694:	8d 91       	ld	r24, X+
    1696:	9c 91       	ld	r25, X
    1698:	13 97       	sbiw	r26, 0x03	; 3
    169a:	00 97       	sbiw	r24, 0x00	; 0
    169c:	19 f0       	breq	.+6      	; 0x16a4 <free+0xd4>
    169e:	fd 01       	movw	r30, r26
    16a0:	dc 01       	movw	r26, r24
    16a2:	f7 cf       	rjmp	.-18     	; 0x1692 <free+0xc2>
    16a4:	8d 91       	ld	r24, X+
    16a6:	9c 91       	ld	r25, X
    16a8:	11 97       	sbiw	r26, 0x01	; 1
    16aa:	9d 01       	movw	r18, r26
    16ac:	2e 5f       	subi	r18, 0xFE	; 254
    16ae:	3f 4f       	sbci	r19, 0xFF	; 255
    16b0:	82 0f       	add	r24, r18
    16b2:	93 1f       	adc	r25, r19
    16b4:	20 91 84 01 	lds	r18, 0x0184	; 0x800184 <__brkval>
    16b8:	30 91 85 01 	lds	r19, 0x0185	; 0x800185 <__brkval+0x1>
    16bc:	28 17       	cp	r18, r24
    16be:	39 07       	cpc	r19, r25
    16c0:	69 f4       	brne	.+26     	; 0x16dc <free+0x10c>
    16c2:	30 97       	sbiw	r30, 0x00	; 0
    16c4:	29 f4       	brne	.+10     	; 0x16d0 <free+0x100>
    16c6:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <__flp+0x1>
    16ca:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <__flp>
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <free+0x104>
    16d0:	13 82       	std	Z+3, r1	; 0x03
    16d2:	12 82       	std	Z+2, r1	; 0x02
    16d4:	b0 93 85 01 	sts	0x0185, r27	; 0x800185 <__brkval+0x1>
    16d8:	a0 93 84 01 	sts	0x0184, r26	; 0x800184 <__brkval>
    16dc:	df 91       	pop	r29
    16de:	cf 91       	pop	r28
    16e0:	08 95       	ret

000016e2 <printf>:
    16e2:	a0 e0       	ldi	r26, 0x00	; 0
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	e7 e7       	ldi	r30, 0x77	; 119
    16e8:	fb e0       	ldi	r31, 0x0B	; 11
    16ea:	0c 94 28 0e 	jmp	0x1c50	; 0x1c50 <__prologue_saves__+0x20>
    16ee:	ae 01       	movw	r20, r28
    16f0:	4b 5f       	subi	r20, 0xFB	; 251
    16f2:	5f 4f       	sbci	r21, 0xFF	; 255
    16f4:	fa 01       	movw	r30, r20
    16f6:	61 91       	ld	r22, Z+
    16f8:	71 91       	ld	r23, Z+
    16fa:	af 01       	movw	r20, r30
    16fc:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <__iob+0x2>
    1700:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <__iob+0x3>
    1704:	0e 94 87 0b 	call	0x170e	; 0x170e <vfprintf>
    1708:	e2 e0       	ldi	r30, 0x02	; 2
    170a:	0c 94 44 0e 	jmp	0x1c88	; 0x1c88 <__epilogue_restores__+0x20>

0000170e <vfprintf>:
    170e:	ab e0       	ldi	r26, 0x0B	; 11
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	ed e8       	ldi	r30, 0x8D	; 141
    1714:	fb e0       	ldi	r31, 0x0B	; 11
    1716:	0c 94 18 0e 	jmp	0x1c30	; 0x1c30 <__prologue_saves__>
    171a:	6c 01       	movw	r12, r24
    171c:	7b 01       	movw	r14, r22
    171e:	8a 01       	movw	r16, r20
    1720:	fc 01       	movw	r30, r24
    1722:	17 82       	std	Z+7, r1	; 0x07
    1724:	16 82       	std	Z+6, r1	; 0x06
    1726:	83 81       	ldd	r24, Z+3	; 0x03
    1728:	81 ff       	sbrs	r24, 1
    172a:	cc c1       	rjmp	.+920    	; 0x1ac4 <vfprintf+0x3b6>
    172c:	ce 01       	movw	r24, r28
    172e:	01 96       	adiw	r24, 0x01	; 1
    1730:	3c 01       	movw	r6, r24
    1732:	f6 01       	movw	r30, r12
    1734:	93 81       	ldd	r25, Z+3	; 0x03
    1736:	f7 01       	movw	r30, r14
    1738:	93 fd       	sbrc	r25, 3
    173a:	85 91       	lpm	r24, Z+
    173c:	93 ff       	sbrs	r25, 3
    173e:	81 91       	ld	r24, Z+
    1740:	7f 01       	movw	r14, r30
    1742:	88 23       	and	r24, r24
    1744:	09 f4       	brne	.+2      	; 0x1748 <vfprintf+0x3a>
    1746:	ba c1       	rjmp	.+884    	; 0x1abc <vfprintf+0x3ae>
    1748:	85 32       	cpi	r24, 0x25	; 37
    174a:	39 f4       	brne	.+14     	; 0x175a <vfprintf+0x4c>
    174c:	93 fd       	sbrc	r25, 3
    174e:	85 91       	lpm	r24, Z+
    1750:	93 ff       	sbrs	r25, 3
    1752:	81 91       	ld	r24, Z+
    1754:	7f 01       	movw	r14, r30
    1756:	85 32       	cpi	r24, 0x25	; 37
    1758:	29 f4       	brne	.+10     	; 0x1764 <vfprintf+0x56>
    175a:	b6 01       	movw	r22, r12
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1762:	e7 cf       	rjmp	.-50     	; 0x1732 <vfprintf+0x24>
    1764:	91 2c       	mov	r9, r1
    1766:	21 2c       	mov	r2, r1
    1768:	31 2c       	mov	r3, r1
    176a:	ff e1       	ldi	r31, 0x1F	; 31
    176c:	f3 15       	cp	r31, r3
    176e:	d8 f0       	brcs	.+54     	; 0x17a6 <vfprintf+0x98>
    1770:	8b 32       	cpi	r24, 0x2B	; 43
    1772:	79 f0       	breq	.+30     	; 0x1792 <vfprintf+0x84>
    1774:	38 f4       	brcc	.+14     	; 0x1784 <vfprintf+0x76>
    1776:	80 32       	cpi	r24, 0x20	; 32
    1778:	79 f0       	breq	.+30     	; 0x1798 <vfprintf+0x8a>
    177a:	83 32       	cpi	r24, 0x23	; 35
    177c:	a1 f4       	brne	.+40     	; 0x17a6 <vfprintf+0x98>
    177e:	23 2d       	mov	r18, r3
    1780:	20 61       	ori	r18, 0x10	; 16
    1782:	1d c0       	rjmp	.+58     	; 0x17be <vfprintf+0xb0>
    1784:	8d 32       	cpi	r24, 0x2D	; 45
    1786:	61 f0       	breq	.+24     	; 0x17a0 <vfprintf+0x92>
    1788:	80 33       	cpi	r24, 0x30	; 48
    178a:	69 f4       	brne	.+26     	; 0x17a6 <vfprintf+0x98>
    178c:	23 2d       	mov	r18, r3
    178e:	21 60       	ori	r18, 0x01	; 1
    1790:	16 c0       	rjmp	.+44     	; 0x17be <vfprintf+0xb0>
    1792:	83 2d       	mov	r24, r3
    1794:	82 60       	ori	r24, 0x02	; 2
    1796:	38 2e       	mov	r3, r24
    1798:	e3 2d       	mov	r30, r3
    179a:	e4 60       	ori	r30, 0x04	; 4
    179c:	3e 2e       	mov	r3, r30
    179e:	2a c0       	rjmp	.+84     	; 0x17f4 <vfprintf+0xe6>
    17a0:	f3 2d       	mov	r31, r3
    17a2:	f8 60       	ori	r31, 0x08	; 8
    17a4:	1d c0       	rjmp	.+58     	; 0x17e0 <vfprintf+0xd2>
    17a6:	37 fc       	sbrc	r3, 7
    17a8:	2d c0       	rjmp	.+90     	; 0x1804 <vfprintf+0xf6>
    17aa:	20 ed       	ldi	r18, 0xD0	; 208
    17ac:	28 0f       	add	r18, r24
    17ae:	2a 30       	cpi	r18, 0x0A	; 10
    17b0:	40 f0       	brcs	.+16     	; 0x17c2 <vfprintf+0xb4>
    17b2:	8e 32       	cpi	r24, 0x2E	; 46
    17b4:	b9 f4       	brne	.+46     	; 0x17e4 <vfprintf+0xd6>
    17b6:	36 fc       	sbrc	r3, 6
    17b8:	81 c1       	rjmp	.+770    	; 0x1abc <vfprintf+0x3ae>
    17ba:	23 2d       	mov	r18, r3
    17bc:	20 64       	ori	r18, 0x40	; 64
    17be:	32 2e       	mov	r3, r18
    17c0:	19 c0       	rjmp	.+50     	; 0x17f4 <vfprintf+0xe6>
    17c2:	36 fe       	sbrs	r3, 6
    17c4:	06 c0       	rjmp	.+12     	; 0x17d2 <vfprintf+0xc4>
    17c6:	8a e0       	ldi	r24, 0x0A	; 10
    17c8:	98 9e       	mul	r9, r24
    17ca:	20 0d       	add	r18, r0
    17cc:	11 24       	eor	r1, r1
    17ce:	92 2e       	mov	r9, r18
    17d0:	11 c0       	rjmp	.+34     	; 0x17f4 <vfprintf+0xe6>
    17d2:	ea e0       	ldi	r30, 0x0A	; 10
    17d4:	2e 9e       	mul	r2, r30
    17d6:	20 0d       	add	r18, r0
    17d8:	11 24       	eor	r1, r1
    17da:	22 2e       	mov	r2, r18
    17dc:	f3 2d       	mov	r31, r3
    17de:	f0 62       	ori	r31, 0x20	; 32
    17e0:	3f 2e       	mov	r3, r31
    17e2:	08 c0       	rjmp	.+16     	; 0x17f4 <vfprintf+0xe6>
    17e4:	8c 36       	cpi	r24, 0x6C	; 108
    17e6:	21 f4       	brne	.+8      	; 0x17f0 <vfprintf+0xe2>
    17e8:	83 2d       	mov	r24, r3
    17ea:	80 68       	ori	r24, 0x80	; 128
    17ec:	38 2e       	mov	r3, r24
    17ee:	02 c0       	rjmp	.+4      	; 0x17f4 <vfprintf+0xe6>
    17f0:	88 36       	cpi	r24, 0x68	; 104
    17f2:	41 f4       	brne	.+16     	; 0x1804 <vfprintf+0xf6>
    17f4:	f7 01       	movw	r30, r14
    17f6:	93 fd       	sbrc	r25, 3
    17f8:	85 91       	lpm	r24, Z+
    17fa:	93 ff       	sbrs	r25, 3
    17fc:	81 91       	ld	r24, Z+
    17fe:	7f 01       	movw	r14, r30
    1800:	81 11       	cpse	r24, r1
    1802:	b3 cf       	rjmp	.-154    	; 0x176a <vfprintf+0x5c>
    1804:	98 2f       	mov	r25, r24
    1806:	9f 7d       	andi	r25, 0xDF	; 223
    1808:	95 54       	subi	r25, 0x45	; 69
    180a:	93 30       	cpi	r25, 0x03	; 3
    180c:	28 f4       	brcc	.+10     	; 0x1818 <vfprintf+0x10a>
    180e:	0c 5f       	subi	r16, 0xFC	; 252
    1810:	1f 4f       	sbci	r17, 0xFF	; 255
    1812:	9f e3       	ldi	r25, 0x3F	; 63
    1814:	99 83       	std	Y+1, r25	; 0x01
    1816:	0d c0       	rjmp	.+26     	; 0x1832 <vfprintf+0x124>
    1818:	83 36       	cpi	r24, 0x63	; 99
    181a:	31 f0       	breq	.+12     	; 0x1828 <vfprintf+0x11a>
    181c:	83 37       	cpi	r24, 0x73	; 115
    181e:	71 f0       	breq	.+28     	; 0x183c <vfprintf+0x12e>
    1820:	83 35       	cpi	r24, 0x53	; 83
    1822:	09 f0       	breq	.+2      	; 0x1826 <vfprintf+0x118>
    1824:	59 c0       	rjmp	.+178    	; 0x18d8 <vfprintf+0x1ca>
    1826:	21 c0       	rjmp	.+66     	; 0x186a <vfprintf+0x15c>
    1828:	f8 01       	movw	r30, r16
    182a:	80 81       	ld	r24, Z
    182c:	89 83       	std	Y+1, r24	; 0x01
    182e:	0e 5f       	subi	r16, 0xFE	; 254
    1830:	1f 4f       	sbci	r17, 0xFF	; 255
    1832:	88 24       	eor	r8, r8
    1834:	83 94       	inc	r8
    1836:	91 2c       	mov	r9, r1
    1838:	53 01       	movw	r10, r6
    183a:	13 c0       	rjmp	.+38     	; 0x1862 <vfprintf+0x154>
    183c:	28 01       	movw	r4, r16
    183e:	f2 e0       	ldi	r31, 0x02	; 2
    1840:	4f 0e       	add	r4, r31
    1842:	51 1c       	adc	r5, r1
    1844:	f8 01       	movw	r30, r16
    1846:	a0 80       	ld	r10, Z
    1848:	b1 80       	ldd	r11, Z+1	; 0x01
    184a:	36 fe       	sbrs	r3, 6
    184c:	03 c0       	rjmp	.+6      	; 0x1854 <vfprintf+0x146>
    184e:	69 2d       	mov	r22, r9
    1850:	70 e0       	ldi	r23, 0x00	; 0
    1852:	02 c0       	rjmp	.+4      	; 0x1858 <vfprintf+0x14a>
    1854:	6f ef       	ldi	r22, 0xFF	; 255
    1856:	7f ef       	ldi	r23, 0xFF	; 255
    1858:	c5 01       	movw	r24, r10
    185a:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <strnlen>
    185e:	4c 01       	movw	r8, r24
    1860:	82 01       	movw	r16, r4
    1862:	f3 2d       	mov	r31, r3
    1864:	ff 77       	andi	r31, 0x7F	; 127
    1866:	3f 2e       	mov	r3, r31
    1868:	16 c0       	rjmp	.+44     	; 0x1896 <vfprintf+0x188>
    186a:	28 01       	movw	r4, r16
    186c:	22 e0       	ldi	r18, 0x02	; 2
    186e:	42 0e       	add	r4, r18
    1870:	51 1c       	adc	r5, r1
    1872:	f8 01       	movw	r30, r16
    1874:	a0 80       	ld	r10, Z
    1876:	b1 80       	ldd	r11, Z+1	; 0x01
    1878:	36 fe       	sbrs	r3, 6
    187a:	03 c0       	rjmp	.+6      	; 0x1882 <vfprintf+0x174>
    187c:	69 2d       	mov	r22, r9
    187e:	70 e0       	ldi	r23, 0x00	; 0
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <vfprintf+0x178>
    1882:	6f ef       	ldi	r22, 0xFF	; 255
    1884:	7f ef       	ldi	r23, 0xFF	; 255
    1886:	c5 01       	movw	r24, r10
    1888:	0e 94 68 0d 	call	0x1ad0	; 0x1ad0 <strnlen_P>
    188c:	4c 01       	movw	r8, r24
    188e:	f3 2d       	mov	r31, r3
    1890:	f0 68       	ori	r31, 0x80	; 128
    1892:	3f 2e       	mov	r3, r31
    1894:	82 01       	movw	r16, r4
    1896:	33 fc       	sbrc	r3, 3
    1898:	1b c0       	rjmp	.+54     	; 0x18d0 <vfprintf+0x1c2>
    189a:	82 2d       	mov	r24, r2
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	88 16       	cp	r8, r24
    18a0:	99 06       	cpc	r9, r25
    18a2:	b0 f4       	brcc	.+44     	; 0x18d0 <vfprintf+0x1c2>
    18a4:	b6 01       	movw	r22, r12
    18a6:	80 e2       	ldi	r24, 0x20	; 32
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    18ae:	2a 94       	dec	r2
    18b0:	f4 cf       	rjmp	.-24     	; 0x189a <vfprintf+0x18c>
    18b2:	f5 01       	movw	r30, r10
    18b4:	37 fc       	sbrc	r3, 7
    18b6:	85 91       	lpm	r24, Z+
    18b8:	37 fe       	sbrs	r3, 7
    18ba:	81 91       	ld	r24, Z+
    18bc:	5f 01       	movw	r10, r30
    18be:	b6 01       	movw	r22, r12
    18c0:	90 e0       	ldi	r25, 0x00	; 0
    18c2:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    18c6:	21 10       	cpse	r2, r1
    18c8:	2a 94       	dec	r2
    18ca:	21 e0       	ldi	r18, 0x01	; 1
    18cc:	82 1a       	sub	r8, r18
    18ce:	91 08       	sbc	r9, r1
    18d0:	81 14       	cp	r8, r1
    18d2:	91 04       	cpc	r9, r1
    18d4:	71 f7       	brne	.-36     	; 0x18b2 <vfprintf+0x1a4>
    18d6:	e8 c0       	rjmp	.+464    	; 0x1aa8 <vfprintf+0x39a>
    18d8:	84 36       	cpi	r24, 0x64	; 100
    18da:	11 f0       	breq	.+4      	; 0x18e0 <vfprintf+0x1d2>
    18dc:	89 36       	cpi	r24, 0x69	; 105
    18de:	41 f5       	brne	.+80     	; 0x1930 <vfprintf+0x222>
    18e0:	f8 01       	movw	r30, r16
    18e2:	37 fe       	sbrs	r3, 7
    18e4:	07 c0       	rjmp	.+14     	; 0x18f4 <vfprintf+0x1e6>
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	0c 5f       	subi	r16, 0xFC	; 252
    18f0:	1f 4f       	sbci	r17, 0xFF	; 255
    18f2:	08 c0       	rjmp	.+16     	; 0x1904 <vfprintf+0x1f6>
    18f4:	60 81       	ld	r22, Z
    18f6:	71 81       	ldd	r23, Z+1	; 0x01
    18f8:	07 2e       	mov	r0, r23
    18fa:	00 0c       	add	r0, r0
    18fc:	88 0b       	sbc	r24, r24
    18fe:	99 0b       	sbc	r25, r25
    1900:	0e 5f       	subi	r16, 0xFE	; 254
    1902:	1f 4f       	sbci	r17, 0xFF	; 255
    1904:	f3 2d       	mov	r31, r3
    1906:	ff 76       	andi	r31, 0x6F	; 111
    1908:	3f 2e       	mov	r3, r31
    190a:	97 ff       	sbrs	r25, 7
    190c:	09 c0       	rjmp	.+18     	; 0x1920 <vfprintf+0x212>
    190e:	90 95       	com	r25
    1910:	80 95       	com	r24
    1912:	70 95       	com	r23
    1914:	61 95       	neg	r22
    1916:	7f 4f       	sbci	r23, 0xFF	; 255
    1918:	8f 4f       	sbci	r24, 0xFF	; 255
    191a:	9f 4f       	sbci	r25, 0xFF	; 255
    191c:	f0 68       	ori	r31, 0x80	; 128
    191e:	3f 2e       	mov	r3, r31
    1920:	2a e0       	ldi	r18, 0x0A	; 10
    1922:	30 e0       	ldi	r19, 0x00	; 0
    1924:	a3 01       	movw	r20, r6
    1926:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <__ultoa_invert>
    192a:	88 2e       	mov	r8, r24
    192c:	86 18       	sub	r8, r6
    192e:	45 c0       	rjmp	.+138    	; 0x19ba <vfprintf+0x2ac>
    1930:	85 37       	cpi	r24, 0x75	; 117
    1932:	31 f4       	brne	.+12     	; 0x1940 <vfprintf+0x232>
    1934:	23 2d       	mov	r18, r3
    1936:	2f 7e       	andi	r18, 0xEF	; 239
    1938:	b2 2e       	mov	r11, r18
    193a:	2a e0       	ldi	r18, 0x0A	; 10
    193c:	30 e0       	ldi	r19, 0x00	; 0
    193e:	25 c0       	rjmp	.+74     	; 0x198a <vfprintf+0x27c>
    1940:	93 2d       	mov	r25, r3
    1942:	99 7f       	andi	r25, 0xF9	; 249
    1944:	b9 2e       	mov	r11, r25
    1946:	8f 36       	cpi	r24, 0x6F	; 111
    1948:	c1 f0       	breq	.+48     	; 0x197a <vfprintf+0x26c>
    194a:	18 f4       	brcc	.+6      	; 0x1952 <vfprintf+0x244>
    194c:	88 35       	cpi	r24, 0x58	; 88
    194e:	79 f0       	breq	.+30     	; 0x196e <vfprintf+0x260>
    1950:	b5 c0       	rjmp	.+362    	; 0x1abc <vfprintf+0x3ae>
    1952:	80 37       	cpi	r24, 0x70	; 112
    1954:	19 f0       	breq	.+6      	; 0x195c <vfprintf+0x24e>
    1956:	88 37       	cpi	r24, 0x78	; 120
    1958:	21 f0       	breq	.+8      	; 0x1962 <vfprintf+0x254>
    195a:	b0 c0       	rjmp	.+352    	; 0x1abc <vfprintf+0x3ae>
    195c:	e9 2f       	mov	r30, r25
    195e:	e0 61       	ori	r30, 0x10	; 16
    1960:	be 2e       	mov	r11, r30
    1962:	b4 fe       	sbrs	r11, 4
    1964:	0d c0       	rjmp	.+26     	; 0x1980 <vfprintf+0x272>
    1966:	fb 2d       	mov	r31, r11
    1968:	f4 60       	ori	r31, 0x04	; 4
    196a:	bf 2e       	mov	r11, r31
    196c:	09 c0       	rjmp	.+18     	; 0x1980 <vfprintf+0x272>
    196e:	34 fe       	sbrs	r3, 4
    1970:	0a c0       	rjmp	.+20     	; 0x1986 <vfprintf+0x278>
    1972:	29 2f       	mov	r18, r25
    1974:	26 60       	ori	r18, 0x06	; 6
    1976:	b2 2e       	mov	r11, r18
    1978:	06 c0       	rjmp	.+12     	; 0x1986 <vfprintf+0x278>
    197a:	28 e0       	ldi	r18, 0x08	; 8
    197c:	30 e0       	ldi	r19, 0x00	; 0
    197e:	05 c0       	rjmp	.+10     	; 0x198a <vfprintf+0x27c>
    1980:	20 e1       	ldi	r18, 0x10	; 16
    1982:	30 e0       	ldi	r19, 0x00	; 0
    1984:	02 c0       	rjmp	.+4      	; 0x198a <vfprintf+0x27c>
    1986:	20 e1       	ldi	r18, 0x10	; 16
    1988:	32 e0       	ldi	r19, 0x02	; 2
    198a:	f8 01       	movw	r30, r16
    198c:	b7 fe       	sbrs	r11, 7
    198e:	07 c0       	rjmp	.+14     	; 0x199e <vfprintf+0x290>
    1990:	60 81       	ld	r22, Z
    1992:	71 81       	ldd	r23, Z+1	; 0x01
    1994:	82 81       	ldd	r24, Z+2	; 0x02
    1996:	93 81       	ldd	r25, Z+3	; 0x03
    1998:	0c 5f       	subi	r16, 0xFC	; 252
    199a:	1f 4f       	sbci	r17, 0xFF	; 255
    199c:	06 c0       	rjmp	.+12     	; 0x19aa <vfprintf+0x29c>
    199e:	60 81       	ld	r22, Z
    19a0:	71 81       	ldd	r23, Z+1	; 0x01
    19a2:	80 e0       	ldi	r24, 0x00	; 0
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	0e 5f       	subi	r16, 0xFE	; 254
    19a8:	1f 4f       	sbci	r17, 0xFF	; 255
    19aa:	a3 01       	movw	r20, r6
    19ac:	0e 94 ba 0d 	call	0x1b74	; 0x1b74 <__ultoa_invert>
    19b0:	88 2e       	mov	r8, r24
    19b2:	86 18       	sub	r8, r6
    19b4:	fb 2d       	mov	r31, r11
    19b6:	ff 77       	andi	r31, 0x7F	; 127
    19b8:	3f 2e       	mov	r3, r31
    19ba:	36 fe       	sbrs	r3, 6
    19bc:	0d c0       	rjmp	.+26     	; 0x19d8 <vfprintf+0x2ca>
    19be:	23 2d       	mov	r18, r3
    19c0:	2e 7f       	andi	r18, 0xFE	; 254
    19c2:	a2 2e       	mov	r10, r18
    19c4:	89 14       	cp	r8, r9
    19c6:	58 f4       	brcc	.+22     	; 0x19de <vfprintf+0x2d0>
    19c8:	34 fe       	sbrs	r3, 4
    19ca:	0b c0       	rjmp	.+22     	; 0x19e2 <vfprintf+0x2d4>
    19cc:	32 fc       	sbrc	r3, 2
    19ce:	09 c0       	rjmp	.+18     	; 0x19e2 <vfprintf+0x2d4>
    19d0:	83 2d       	mov	r24, r3
    19d2:	8e 7e       	andi	r24, 0xEE	; 238
    19d4:	a8 2e       	mov	r10, r24
    19d6:	05 c0       	rjmp	.+10     	; 0x19e2 <vfprintf+0x2d4>
    19d8:	b8 2c       	mov	r11, r8
    19da:	a3 2c       	mov	r10, r3
    19dc:	03 c0       	rjmp	.+6      	; 0x19e4 <vfprintf+0x2d6>
    19de:	b8 2c       	mov	r11, r8
    19e0:	01 c0       	rjmp	.+2      	; 0x19e4 <vfprintf+0x2d6>
    19e2:	b9 2c       	mov	r11, r9
    19e4:	a4 fe       	sbrs	r10, 4
    19e6:	0f c0       	rjmp	.+30     	; 0x1a06 <vfprintf+0x2f8>
    19e8:	fe 01       	movw	r30, r28
    19ea:	e8 0d       	add	r30, r8
    19ec:	f1 1d       	adc	r31, r1
    19ee:	80 81       	ld	r24, Z
    19f0:	80 33       	cpi	r24, 0x30	; 48
    19f2:	21 f4       	brne	.+8      	; 0x19fc <vfprintf+0x2ee>
    19f4:	9a 2d       	mov	r25, r10
    19f6:	99 7e       	andi	r25, 0xE9	; 233
    19f8:	a9 2e       	mov	r10, r25
    19fa:	09 c0       	rjmp	.+18     	; 0x1a0e <vfprintf+0x300>
    19fc:	a2 fe       	sbrs	r10, 2
    19fe:	06 c0       	rjmp	.+12     	; 0x1a0c <vfprintf+0x2fe>
    1a00:	b3 94       	inc	r11
    1a02:	b3 94       	inc	r11
    1a04:	04 c0       	rjmp	.+8      	; 0x1a0e <vfprintf+0x300>
    1a06:	8a 2d       	mov	r24, r10
    1a08:	86 78       	andi	r24, 0x86	; 134
    1a0a:	09 f0       	breq	.+2      	; 0x1a0e <vfprintf+0x300>
    1a0c:	b3 94       	inc	r11
    1a0e:	a3 fc       	sbrc	r10, 3
    1a10:	11 c0       	rjmp	.+34     	; 0x1a34 <vfprintf+0x326>
    1a12:	a0 fe       	sbrs	r10, 0
    1a14:	06 c0       	rjmp	.+12     	; 0x1a22 <vfprintf+0x314>
    1a16:	b2 14       	cp	r11, r2
    1a18:	88 f4       	brcc	.+34     	; 0x1a3c <vfprintf+0x32e>
    1a1a:	28 0c       	add	r2, r8
    1a1c:	92 2c       	mov	r9, r2
    1a1e:	9b 18       	sub	r9, r11
    1a20:	0e c0       	rjmp	.+28     	; 0x1a3e <vfprintf+0x330>
    1a22:	b2 14       	cp	r11, r2
    1a24:	60 f4       	brcc	.+24     	; 0x1a3e <vfprintf+0x330>
    1a26:	b6 01       	movw	r22, r12
    1a28:	80 e2       	ldi	r24, 0x20	; 32
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1a30:	b3 94       	inc	r11
    1a32:	f7 cf       	rjmp	.-18     	; 0x1a22 <vfprintf+0x314>
    1a34:	b2 14       	cp	r11, r2
    1a36:	18 f4       	brcc	.+6      	; 0x1a3e <vfprintf+0x330>
    1a38:	2b 18       	sub	r2, r11
    1a3a:	02 c0       	rjmp	.+4      	; 0x1a40 <vfprintf+0x332>
    1a3c:	98 2c       	mov	r9, r8
    1a3e:	21 2c       	mov	r2, r1
    1a40:	a4 fe       	sbrs	r10, 4
    1a42:	10 c0       	rjmp	.+32     	; 0x1a64 <vfprintf+0x356>
    1a44:	b6 01       	movw	r22, r12
    1a46:	80 e3       	ldi	r24, 0x30	; 48
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1a4e:	a2 fe       	sbrs	r10, 2
    1a50:	17 c0       	rjmp	.+46     	; 0x1a80 <vfprintf+0x372>
    1a52:	a1 fc       	sbrc	r10, 1
    1a54:	03 c0       	rjmp	.+6      	; 0x1a5c <vfprintf+0x34e>
    1a56:	88 e7       	ldi	r24, 0x78	; 120
    1a58:	90 e0       	ldi	r25, 0x00	; 0
    1a5a:	02 c0       	rjmp	.+4      	; 0x1a60 <vfprintf+0x352>
    1a5c:	88 e5       	ldi	r24, 0x58	; 88
    1a5e:	90 e0       	ldi	r25, 0x00	; 0
    1a60:	b6 01       	movw	r22, r12
    1a62:	0c c0       	rjmp	.+24     	; 0x1a7c <vfprintf+0x36e>
    1a64:	8a 2d       	mov	r24, r10
    1a66:	86 78       	andi	r24, 0x86	; 134
    1a68:	59 f0       	breq	.+22     	; 0x1a80 <vfprintf+0x372>
    1a6a:	a1 fe       	sbrs	r10, 1
    1a6c:	02 c0       	rjmp	.+4      	; 0x1a72 <vfprintf+0x364>
    1a6e:	8b e2       	ldi	r24, 0x2B	; 43
    1a70:	01 c0       	rjmp	.+2      	; 0x1a74 <vfprintf+0x366>
    1a72:	80 e2       	ldi	r24, 0x20	; 32
    1a74:	a7 fc       	sbrc	r10, 7
    1a76:	8d e2       	ldi	r24, 0x2D	; 45
    1a78:	b6 01       	movw	r22, r12
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1a80:	89 14       	cp	r8, r9
    1a82:	38 f4       	brcc	.+14     	; 0x1a92 <vfprintf+0x384>
    1a84:	b6 01       	movw	r22, r12
    1a86:	80 e3       	ldi	r24, 0x30	; 48
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1a8e:	9a 94       	dec	r9
    1a90:	f7 cf       	rjmp	.-18     	; 0x1a80 <vfprintf+0x372>
    1a92:	8a 94       	dec	r8
    1a94:	f3 01       	movw	r30, r6
    1a96:	e8 0d       	add	r30, r8
    1a98:	f1 1d       	adc	r31, r1
    1a9a:	80 81       	ld	r24, Z
    1a9c:	b6 01       	movw	r22, r12
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1aa4:	81 10       	cpse	r8, r1
    1aa6:	f5 cf       	rjmp	.-22     	; 0x1a92 <vfprintf+0x384>
    1aa8:	22 20       	and	r2, r2
    1aaa:	09 f4       	brne	.+2      	; 0x1aae <vfprintf+0x3a0>
    1aac:	42 ce       	rjmp	.-892    	; 0x1732 <vfprintf+0x24>
    1aae:	b6 01       	movw	r22, r12
    1ab0:	80 e2       	ldi	r24, 0x20	; 32
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <fputc>
    1ab8:	2a 94       	dec	r2
    1aba:	f6 cf       	rjmp	.-20     	; 0x1aa8 <vfprintf+0x39a>
    1abc:	f6 01       	movw	r30, r12
    1abe:	86 81       	ldd	r24, Z+6	; 0x06
    1ac0:	97 81       	ldd	r25, Z+7	; 0x07
    1ac2:	02 c0       	rjmp	.+4      	; 0x1ac8 <vfprintf+0x3ba>
    1ac4:	8f ef       	ldi	r24, 0xFF	; 255
    1ac6:	9f ef       	ldi	r25, 0xFF	; 255
    1ac8:	2b 96       	adiw	r28, 0x0b	; 11
    1aca:	e2 e1       	ldi	r30, 0x12	; 18
    1acc:	0c 94 34 0e 	jmp	0x1c68	; 0x1c68 <__epilogue_restores__>

00001ad0 <strnlen_P>:
    1ad0:	fc 01       	movw	r30, r24
    1ad2:	05 90       	lpm	r0, Z+
    1ad4:	61 50       	subi	r22, 0x01	; 1
    1ad6:	70 40       	sbci	r23, 0x00	; 0
    1ad8:	01 10       	cpse	r0, r1
    1ada:	d8 f7       	brcc	.-10     	; 0x1ad2 <strnlen_P+0x2>
    1adc:	80 95       	com	r24
    1ade:	90 95       	com	r25
    1ae0:	8e 0f       	add	r24, r30
    1ae2:	9f 1f       	adc	r25, r31
    1ae4:	08 95       	ret

00001ae6 <strnlen>:
    1ae6:	fc 01       	movw	r30, r24
    1ae8:	61 50       	subi	r22, 0x01	; 1
    1aea:	70 40       	sbci	r23, 0x00	; 0
    1aec:	01 90       	ld	r0, Z+
    1aee:	01 10       	cpse	r0, r1
    1af0:	d8 f7       	brcc	.-10     	; 0x1ae8 <strnlen+0x2>
    1af2:	80 95       	com	r24
    1af4:	90 95       	com	r25
    1af6:	8e 0f       	add	r24, r30
    1af8:	9f 1f       	adc	r25, r31
    1afa:	08 95       	ret

00001afc <fputc>:
    1afc:	0f 93       	push	r16
    1afe:	1f 93       	push	r17
    1b00:	cf 93       	push	r28
    1b02:	df 93       	push	r29
    1b04:	fb 01       	movw	r30, r22
    1b06:	23 81       	ldd	r18, Z+3	; 0x03
    1b08:	21 fd       	sbrc	r18, 1
    1b0a:	03 c0       	rjmp	.+6      	; 0x1b12 <fputc+0x16>
    1b0c:	8f ef       	ldi	r24, 0xFF	; 255
    1b0e:	9f ef       	ldi	r25, 0xFF	; 255
    1b10:	2c c0       	rjmp	.+88     	; 0x1b6a <fputc+0x6e>
    1b12:	22 ff       	sbrs	r18, 2
    1b14:	16 c0       	rjmp	.+44     	; 0x1b42 <fputc+0x46>
    1b16:	46 81       	ldd	r20, Z+6	; 0x06
    1b18:	57 81       	ldd	r21, Z+7	; 0x07
    1b1a:	24 81       	ldd	r18, Z+4	; 0x04
    1b1c:	35 81       	ldd	r19, Z+5	; 0x05
    1b1e:	42 17       	cp	r20, r18
    1b20:	53 07       	cpc	r21, r19
    1b22:	44 f4       	brge	.+16     	; 0x1b34 <fputc+0x38>
    1b24:	a0 81       	ld	r26, Z
    1b26:	b1 81       	ldd	r27, Z+1	; 0x01
    1b28:	9d 01       	movw	r18, r26
    1b2a:	2f 5f       	subi	r18, 0xFF	; 255
    1b2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b2e:	31 83       	std	Z+1, r19	; 0x01
    1b30:	20 83       	st	Z, r18
    1b32:	8c 93       	st	X, r24
    1b34:	26 81       	ldd	r18, Z+6	; 0x06
    1b36:	37 81       	ldd	r19, Z+7	; 0x07
    1b38:	2f 5f       	subi	r18, 0xFF	; 255
    1b3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b3c:	37 83       	std	Z+7, r19	; 0x07
    1b3e:	26 83       	std	Z+6, r18	; 0x06
    1b40:	14 c0       	rjmp	.+40     	; 0x1b6a <fputc+0x6e>
    1b42:	8b 01       	movw	r16, r22
    1b44:	ec 01       	movw	r28, r24
    1b46:	fb 01       	movw	r30, r22
    1b48:	00 84       	ldd	r0, Z+8	; 0x08
    1b4a:	f1 85       	ldd	r31, Z+9	; 0x09
    1b4c:	e0 2d       	mov	r30, r0
    1b4e:	09 95       	icall
    1b50:	89 2b       	or	r24, r25
    1b52:	e1 f6       	brne	.-72     	; 0x1b0c <fputc+0x10>
    1b54:	d8 01       	movw	r26, r16
    1b56:	16 96       	adiw	r26, 0x06	; 6
    1b58:	8d 91       	ld	r24, X+
    1b5a:	9c 91       	ld	r25, X
    1b5c:	17 97       	sbiw	r26, 0x07	; 7
    1b5e:	01 96       	adiw	r24, 0x01	; 1
    1b60:	17 96       	adiw	r26, 0x07	; 7
    1b62:	9c 93       	st	X, r25
    1b64:	8e 93       	st	-X, r24
    1b66:	16 97       	sbiw	r26, 0x06	; 6
    1b68:	ce 01       	movw	r24, r28
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	1f 91       	pop	r17
    1b70:	0f 91       	pop	r16
    1b72:	08 95       	ret

00001b74 <__ultoa_invert>:
    1b74:	fa 01       	movw	r30, r20
    1b76:	aa 27       	eor	r26, r26
    1b78:	28 30       	cpi	r18, 0x08	; 8
    1b7a:	51 f1       	breq	.+84     	; 0x1bd0 <__ultoa_invert+0x5c>
    1b7c:	20 31       	cpi	r18, 0x10	; 16
    1b7e:	81 f1       	breq	.+96     	; 0x1be0 <__ultoa_invert+0x6c>
    1b80:	e8 94       	clt
    1b82:	6f 93       	push	r22
    1b84:	6e 7f       	andi	r22, 0xFE	; 254
    1b86:	6e 5f       	subi	r22, 0xFE	; 254
    1b88:	7f 4f       	sbci	r23, 0xFF	; 255
    1b8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b8e:	af 4f       	sbci	r26, 0xFF	; 255
    1b90:	b1 e0       	ldi	r27, 0x01	; 1
    1b92:	3e d0       	rcall	.+124    	; 0x1c10 <__ultoa_invert+0x9c>
    1b94:	b4 e0       	ldi	r27, 0x04	; 4
    1b96:	3c d0       	rcall	.+120    	; 0x1c10 <__ultoa_invert+0x9c>
    1b98:	67 0f       	add	r22, r23
    1b9a:	78 1f       	adc	r23, r24
    1b9c:	89 1f       	adc	r24, r25
    1b9e:	9a 1f       	adc	r25, r26
    1ba0:	a1 1d       	adc	r26, r1
    1ba2:	68 0f       	add	r22, r24
    1ba4:	79 1f       	adc	r23, r25
    1ba6:	8a 1f       	adc	r24, r26
    1ba8:	91 1d       	adc	r25, r1
    1baa:	a1 1d       	adc	r26, r1
    1bac:	6a 0f       	add	r22, r26
    1bae:	71 1d       	adc	r23, r1
    1bb0:	81 1d       	adc	r24, r1
    1bb2:	91 1d       	adc	r25, r1
    1bb4:	a1 1d       	adc	r26, r1
    1bb6:	20 d0       	rcall	.+64     	; 0x1bf8 <__ultoa_invert+0x84>
    1bb8:	09 f4       	brne	.+2      	; 0x1bbc <__ultoa_invert+0x48>
    1bba:	68 94       	set
    1bbc:	3f 91       	pop	r19
    1bbe:	2a e0       	ldi	r18, 0x0A	; 10
    1bc0:	26 9f       	mul	r18, r22
    1bc2:	11 24       	eor	r1, r1
    1bc4:	30 19       	sub	r19, r0
    1bc6:	30 5d       	subi	r19, 0xD0	; 208
    1bc8:	31 93       	st	Z+, r19
    1bca:	de f6       	brtc	.-74     	; 0x1b82 <__ultoa_invert+0xe>
    1bcc:	cf 01       	movw	r24, r30
    1bce:	08 95       	ret
    1bd0:	46 2f       	mov	r20, r22
    1bd2:	47 70       	andi	r20, 0x07	; 7
    1bd4:	40 5d       	subi	r20, 0xD0	; 208
    1bd6:	41 93       	st	Z+, r20
    1bd8:	b3 e0       	ldi	r27, 0x03	; 3
    1bda:	0f d0       	rcall	.+30     	; 0x1bfa <__ultoa_invert+0x86>
    1bdc:	c9 f7       	brne	.-14     	; 0x1bd0 <__ultoa_invert+0x5c>
    1bde:	f6 cf       	rjmp	.-20     	; 0x1bcc <__ultoa_invert+0x58>
    1be0:	46 2f       	mov	r20, r22
    1be2:	4f 70       	andi	r20, 0x0F	; 15
    1be4:	40 5d       	subi	r20, 0xD0	; 208
    1be6:	4a 33       	cpi	r20, 0x3A	; 58
    1be8:	18 f0       	brcs	.+6      	; 0x1bf0 <__ultoa_invert+0x7c>
    1bea:	49 5d       	subi	r20, 0xD9	; 217
    1bec:	31 fd       	sbrc	r19, 1
    1bee:	40 52       	subi	r20, 0x20	; 32
    1bf0:	41 93       	st	Z+, r20
    1bf2:	02 d0       	rcall	.+4      	; 0x1bf8 <__ultoa_invert+0x84>
    1bf4:	a9 f7       	brne	.-22     	; 0x1be0 <__ultoa_invert+0x6c>
    1bf6:	ea cf       	rjmp	.-44     	; 0x1bcc <__ultoa_invert+0x58>
    1bf8:	b4 e0       	ldi	r27, 0x04	; 4
    1bfa:	a6 95       	lsr	r26
    1bfc:	97 95       	ror	r25
    1bfe:	87 95       	ror	r24
    1c00:	77 95       	ror	r23
    1c02:	67 95       	ror	r22
    1c04:	ba 95       	dec	r27
    1c06:	c9 f7       	brne	.-14     	; 0x1bfa <__ultoa_invert+0x86>
    1c08:	00 97       	sbiw	r24, 0x00	; 0
    1c0a:	61 05       	cpc	r22, r1
    1c0c:	71 05       	cpc	r23, r1
    1c0e:	08 95       	ret
    1c10:	9b 01       	movw	r18, r22
    1c12:	ac 01       	movw	r20, r24
    1c14:	0a 2e       	mov	r0, r26
    1c16:	06 94       	lsr	r0
    1c18:	57 95       	ror	r21
    1c1a:	47 95       	ror	r20
    1c1c:	37 95       	ror	r19
    1c1e:	27 95       	ror	r18
    1c20:	ba 95       	dec	r27
    1c22:	c9 f7       	brne	.-14     	; 0x1c16 <__ultoa_invert+0xa2>
    1c24:	62 0f       	add	r22, r18
    1c26:	73 1f       	adc	r23, r19
    1c28:	84 1f       	adc	r24, r20
    1c2a:	95 1f       	adc	r25, r21
    1c2c:	a0 1d       	adc	r26, r0
    1c2e:	08 95       	ret

00001c30 <__prologue_saves__>:
    1c30:	2f 92       	push	r2
    1c32:	3f 92       	push	r3
    1c34:	4f 92       	push	r4
    1c36:	5f 92       	push	r5
    1c38:	6f 92       	push	r6
    1c3a:	7f 92       	push	r7
    1c3c:	8f 92       	push	r8
    1c3e:	9f 92       	push	r9
    1c40:	af 92       	push	r10
    1c42:	bf 92       	push	r11
    1c44:	cf 92       	push	r12
    1c46:	df 92       	push	r13
    1c48:	ef 92       	push	r14
    1c4a:	ff 92       	push	r15
    1c4c:	0f 93       	push	r16
    1c4e:	1f 93       	push	r17
    1c50:	cf 93       	push	r28
    1c52:	df 93       	push	r29
    1c54:	cd b7       	in	r28, 0x3d	; 61
    1c56:	de b7       	in	r29, 0x3e	; 62
    1c58:	ca 1b       	sub	r28, r26
    1c5a:	db 0b       	sbc	r29, r27
    1c5c:	0f b6       	in	r0, 0x3f	; 63
    1c5e:	f8 94       	cli
    1c60:	de bf       	out	0x3e, r29	; 62
    1c62:	0f be       	out	0x3f, r0	; 63
    1c64:	cd bf       	out	0x3d, r28	; 61
    1c66:	09 94       	ijmp

00001c68 <__epilogue_restores__>:
    1c68:	2a 88       	ldd	r2, Y+18	; 0x12
    1c6a:	39 88       	ldd	r3, Y+17	; 0x11
    1c6c:	48 88       	ldd	r4, Y+16	; 0x10
    1c6e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c70:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c72:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c74:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c76:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c78:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c7a:	b9 84       	ldd	r11, Y+9	; 0x09
    1c7c:	c8 84       	ldd	r12, Y+8	; 0x08
    1c7e:	df 80       	ldd	r13, Y+7	; 0x07
    1c80:	ee 80       	ldd	r14, Y+6	; 0x06
    1c82:	fd 80       	ldd	r15, Y+5	; 0x05
    1c84:	0c 81       	ldd	r16, Y+4	; 0x04
    1c86:	1b 81       	ldd	r17, Y+3	; 0x03
    1c88:	aa 81       	ldd	r26, Y+2	; 0x02
    1c8a:	b9 81       	ldd	r27, Y+1	; 0x01
    1c8c:	ce 0f       	add	r28, r30
    1c8e:	d1 1d       	adc	r29, r1
    1c90:	0f b6       	in	r0, 0x3f	; 63
    1c92:	f8 94       	cli
    1c94:	de bf       	out	0x3e, r29	; 62
    1c96:	0f be       	out	0x3f, r0	; 63
    1c98:	cd bf       	out	0x3d, r28	; 61
    1c9a:	ed 01       	movw	r28, r26
    1c9c:	08 95       	ret

00001c9e <_exit>:
    1c9e:	f8 94       	cli

00001ca0 <__stop_program>:
    1ca0:	ff cf       	rjmp	.-2      	; 0x1ca0 <__stop_program>
